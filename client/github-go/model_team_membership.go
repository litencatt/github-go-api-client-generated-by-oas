/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// TeamMembership Team Membership
type TeamMembership struct {
	Url string `json:"url"`
	// The role of the user in the team.
	Role string `json:"role"`
	// The state of the user's membership in the team.
	State string `json:"state"`
}

// NewTeamMembership instantiates a new TeamMembership object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamMembership(url string, role string, state string) *TeamMembership {
	this := TeamMembership{}
	this.Url = url
	this.Role = role
	this.State = state
	return &this
}

// NewTeamMembershipWithDefaults instantiates a new TeamMembership object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamMembershipWithDefaults() *TeamMembership {
	this := TeamMembership{}
	var role string = "member"
	this.Role = role
	return &this
}

// GetUrl returns the Url field value
func (o *TeamMembership) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *TeamMembership) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *TeamMembership) SetUrl(v string) {
	o.Url = v
}

// GetRole returns the Role field value
func (o *TeamMembership) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *TeamMembership) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *TeamMembership) SetRole(v string) {
	o.Role = v
}

// GetState returns the State field value
func (o *TeamMembership) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *TeamMembership) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *TeamMembership) SetState(v string) {
	o.State = v
}

func (o TeamMembership) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableTeamMembership struct {
	value *TeamMembership
	isSet bool
}

func (v NullableTeamMembership) Get() *TeamMembership {
	return v.value
}

func (v *NullableTeamMembership) Set(val *TeamMembership) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamMembership) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamMembership) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamMembership(val *TeamMembership) *NullableTeamMembership {
	return &NullableTeamMembership{value: val, isSet: true}
}

func (v NullableTeamMembership) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamMembership) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


