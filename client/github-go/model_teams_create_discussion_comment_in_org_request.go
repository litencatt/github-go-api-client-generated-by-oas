/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// TeamsCreateDiscussionCommentInOrgRequest struct for TeamsCreateDiscussionCommentInOrgRequest
type TeamsCreateDiscussionCommentInOrgRequest struct {
	// The discussion comment's body text.
	Body string `json:"body"`
}

// NewTeamsCreateDiscussionCommentInOrgRequest instantiates a new TeamsCreateDiscussionCommentInOrgRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamsCreateDiscussionCommentInOrgRequest(body string) *TeamsCreateDiscussionCommentInOrgRequest {
	this := TeamsCreateDiscussionCommentInOrgRequest{}
	this.Body = body
	return &this
}

// NewTeamsCreateDiscussionCommentInOrgRequestWithDefaults instantiates a new TeamsCreateDiscussionCommentInOrgRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamsCreateDiscussionCommentInOrgRequestWithDefaults() *TeamsCreateDiscussionCommentInOrgRequest {
	this := TeamsCreateDiscussionCommentInOrgRequest{}
	return &this
}

// GetBody returns the Body field value
func (o *TeamsCreateDiscussionCommentInOrgRequest) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *TeamsCreateDiscussionCommentInOrgRequest) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *TeamsCreateDiscussionCommentInOrgRequest) SetBody(v string) {
	o.Body = v
}

func (o TeamsCreateDiscussionCommentInOrgRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["body"] = o.Body
	}
	return json.Marshal(toSerialize)
}

type NullableTeamsCreateDiscussionCommentInOrgRequest struct {
	value *TeamsCreateDiscussionCommentInOrgRequest
	isSet bool
}

func (v NullableTeamsCreateDiscussionCommentInOrgRequest) Get() *TeamsCreateDiscussionCommentInOrgRequest {
	return v.value
}

func (v *NullableTeamsCreateDiscussionCommentInOrgRequest) Set(val *TeamsCreateDiscussionCommentInOrgRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamsCreateDiscussionCommentInOrgRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamsCreateDiscussionCommentInOrgRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamsCreateDiscussionCommentInOrgRequest(val *TeamsCreateDiscussionCommentInOrgRequest) *NullableTeamsCreateDiscussionCommentInOrgRequest {
	return &NullableTeamsCreateDiscussionCommentInOrgRequest{value: val, isSet: true}
}

func (v NullableTeamsCreateDiscussionCommentInOrgRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamsCreateDiscussionCommentInOrgRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


