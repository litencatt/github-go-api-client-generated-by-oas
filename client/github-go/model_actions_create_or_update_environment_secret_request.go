/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ActionsCreateOrUpdateEnvironmentSecretRequest struct for ActionsCreateOrUpdateEnvironmentSecretRequest
type ActionsCreateOrUpdateEnvironmentSecretRequest struct {
	// Value for your secret, encrypted with [LibSodium](https://libsodium.gitbook.io/doc/bindings_for_other_languages) using the public key retrieved from the [Get an environment public key](https://docs.github.com/rest/reference/actions#get-an-environment-public-key) endpoint.
	EncryptedValue string `json:"encrypted_value"`
	// ID of the key you used to encrypt the secret.
	KeyId string `json:"key_id"`
}

// NewActionsCreateOrUpdateEnvironmentSecretRequest instantiates a new ActionsCreateOrUpdateEnvironmentSecretRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsCreateOrUpdateEnvironmentSecretRequest(encryptedValue string, keyId string) *ActionsCreateOrUpdateEnvironmentSecretRequest {
	this := ActionsCreateOrUpdateEnvironmentSecretRequest{}
	this.EncryptedValue = encryptedValue
	this.KeyId = keyId
	return &this
}

// NewActionsCreateOrUpdateEnvironmentSecretRequestWithDefaults instantiates a new ActionsCreateOrUpdateEnvironmentSecretRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsCreateOrUpdateEnvironmentSecretRequestWithDefaults() *ActionsCreateOrUpdateEnvironmentSecretRequest {
	this := ActionsCreateOrUpdateEnvironmentSecretRequest{}
	return &this
}

// GetEncryptedValue returns the EncryptedValue field value
func (o *ActionsCreateOrUpdateEnvironmentSecretRequest) GetEncryptedValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncryptedValue
}

// GetEncryptedValueOk returns a tuple with the EncryptedValue field value
// and a boolean to check if the value has been set.
func (o *ActionsCreateOrUpdateEnvironmentSecretRequest) GetEncryptedValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptedValue, true
}

// SetEncryptedValue sets field value
func (o *ActionsCreateOrUpdateEnvironmentSecretRequest) SetEncryptedValue(v string) {
	o.EncryptedValue = v
}

// GetKeyId returns the KeyId field value
func (o *ActionsCreateOrUpdateEnvironmentSecretRequest) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *ActionsCreateOrUpdateEnvironmentSecretRequest) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *ActionsCreateOrUpdateEnvironmentSecretRequest) SetKeyId(v string) {
	o.KeyId = v
}

func (o ActionsCreateOrUpdateEnvironmentSecretRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["encrypted_value"] = o.EncryptedValue
	}
	if true {
		toSerialize["key_id"] = o.KeyId
	}
	return json.Marshal(toSerialize)
}

type NullableActionsCreateOrUpdateEnvironmentSecretRequest struct {
	value *ActionsCreateOrUpdateEnvironmentSecretRequest
	isSet bool
}

func (v NullableActionsCreateOrUpdateEnvironmentSecretRequest) Get() *ActionsCreateOrUpdateEnvironmentSecretRequest {
	return v.value
}

func (v *NullableActionsCreateOrUpdateEnvironmentSecretRequest) Set(val *ActionsCreateOrUpdateEnvironmentSecretRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsCreateOrUpdateEnvironmentSecretRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsCreateOrUpdateEnvironmentSecretRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsCreateOrUpdateEnvironmentSecretRequest(val *ActionsCreateOrUpdateEnvironmentSecretRequest) *NullableActionsCreateOrUpdateEnvironmentSecretRequest {
	return &NullableActionsCreateOrUpdateEnvironmentSecretRequest{value: val, isSet: true}
}

func (v NullableActionsCreateOrUpdateEnvironmentSecretRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsCreateOrUpdateEnvironmentSecretRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


