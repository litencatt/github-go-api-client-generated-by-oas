/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// OrganizationCustomRepositoryRole Custom repository roles created by organization administrators
type OrganizationCustomRepositoryRole struct {
	// The unique identifier of the custom role.
	Id int32 `json:"id"`
	// The name of the custom role.
	Name string `json:"name"`
}

// NewOrganizationCustomRepositoryRole instantiates a new OrganizationCustomRepositoryRole object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationCustomRepositoryRole(id int32, name string) *OrganizationCustomRepositoryRole {
	this := OrganizationCustomRepositoryRole{}
	this.Id = id
	this.Name = name
	return &this
}

// NewOrganizationCustomRepositoryRoleWithDefaults instantiates a new OrganizationCustomRepositoryRole object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationCustomRepositoryRoleWithDefaults() *OrganizationCustomRepositoryRole {
	this := OrganizationCustomRepositoryRole{}
	return &this
}

// GetId returns the Id field value
func (o *OrganizationCustomRepositoryRole) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRepositoryRole) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationCustomRepositoryRole) SetId(v int32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *OrganizationCustomRepositoryRole) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *OrganizationCustomRepositoryRole) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *OrganizationCustomRepositoryRole) SetName(v string) {
	o.Name = v
}

func (o OrganizationCustomRepositoryRole) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationCustomRepositoryRole struct {
	value *OrganizationCustomRepositoryRole
	isSet bool
}

func (v NullableOrganizationCustomRepositoryRole) Get() *OrganizationCustomRepositoryRole {
	return v.value
}

func (v *NullableOrganizationCustomRepositoryRole) Set(val *OrganizationCustomRepositoryRole) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationCustomRepositoryRole) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationCustomRepositoryRole) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationCustomRepositoryRole(val *OrganizationCustomRepositoryRole) *NullableOrganizationCustomRepositoryRole {
	return &NullableOrganizationCustomRepositoryRole{value: val, isSet: true}
}

func (v NullableOrganizationCustomRepositoryRole) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationCustomRepositoryRole) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


