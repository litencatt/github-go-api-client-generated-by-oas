/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// IssuesRemoveAssigneesRequest struct for IssuesRemoveAssigneesRequest
type IssuesRemoveAssigneesRequest struct {
	// Usernames of assignees to remove from an issue. _NOTE: Only users with push access can remove assignees from an issue. Assignees are silently ignored otherwise._
	Assignees []string `json:"assignees,omitempty"`
}

// NewIssuesRemoveAssigneesRequest instantiates a new IssuesRemoveAssigneesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssuesRemoveAssigneesRequest() *IssuesRemoveAssigneesRequest {
	this := IssuesRemoveAssigneesRequest{}
	return &this
}

// NewIssuesRemoveAssigneesRequestWithDefaults instantiates a new IssuesRemoveAssigneesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuesRemoveAssigneesRequestWithDefaults() *IssuesRemoveAssigneesRequest {
	this := IssuesRemoveAssigneesRequest{}
	return &this
}

// GetAssignees returns the Assignees field value if set, zero value otherwise.
func (o *IssuesRemoveAssigneesRequest) GetAssignees() []string {
	if o == nil || o.Assignees == nil {
		var ret []string
		return ret
	}
	return o.Assignees
}

// GetAssigneesOk returns a tuple with the Assignees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesRemoveAssigneesRequest) GetAssigneesOk() ([]string, bool) {
	if o == nil || o.Assignees == nil {
		return nil, false
	}
	return o.Assignees, true
}

// HasAssignees returns a boolean if a field has been set.
func (o *IssuesRemoveAssigneesRequest) HasAssignees() bool {
	if o != nil && o.Assignees != nil {
		return true
	}

	return false
}

// SetAssignees gets a reference to the given []string and assigns it to the Assignees field.
func (o *IssuesRemoveAssigneesRequest) SetAssignees(v []string) {
	o.Assignees = v
}

func (o IssuesRemoveAssigneesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Assignees != nil {
		toSerialize["assignees"] = o.Assignees
	}
	return json.Marshal(toSerialize)
}

type NullableIssuesRemoveAssigneesRequest struct {
	value *IssuesRemoveAssigneesRequest
	isSet bool
}

func (v NullableIssuesRemoveAssigneesRequest) Get() *IssuesRemoveAssigneesRequest {
	return v.value
}

func (v *NullableIssuesRemoveAssigneesRequest) Set(val *IssuesRemoveAssigneesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIssuesRemoveAssigneesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIssuesRemoveAssigneesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssuesRemoveAssigneesRequest(val *IssuesRemoveAssigneesRequest) *NullableIssuesRemoveAssigneesRequest {
	return &NullableIssuesRemoveAssigneesRequest{value: val, isSet: true}
}

func (v NullableIssuesRemoveAssigneesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssuesRemoveAssigneesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


