/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"fmt"
)

// ActivityListReposStarredByUser200Response struct for ActivityListReposStarredByUser200Response
type ActivityListReposStarredByUser200Response struct {
	[]Repository *[]Repository
	[]StarredRepository *[]StarredRepository
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ActivityListReposStarredByUser200Response) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into []Repository
	err = json.Unmarshal(data, &dst.[]Repository);
	if err == nil {
		json[]Repository, _ := json.Marshal(dst.[]Repository)
		if string(json[]Repository) == "{}" { // empty struct
			dst.[]Repository = nil
		} else {
			return nil // data stored in dst.[]Repository, return on the first match
		}
	} else {
		dst.[]Repository = nil
	}

	// try to unmarshal JSON data into []StarredRepository
	err = json.Unmarshal(data, &dst.[]StarredRepository);
	if err == nil {
		json[]StarredRepository, _ := json.Marshal(dst.[]StarredRepository)
		if string(json[]StarredRepository) == "{}" { // empty struct
			dst.[]StarredRepository = nil
		} else {
			return nil // data stored in dst.[]StarredRepository, return on the first match
		}
	} else {
		dst.[]StarredRepository = nil
	}

	return fmt.Errorf("Data failed to match schemas in anyOf(ActivityListReposStarredByUser200Response)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ActivityListReposStarredByUser200Response) MarshalJSON() ([]byte, error) {
	if src.[]Repository != nil {
		return json.Marshal(&src.[]Repository)
	}

	if src.[]StarredRepository != nil {
		return json.Marshal(&src.[]StarredRepository)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableActivityListReposStarredByUser200Response struct {
	value *ActivityListReposStarredByUser200Response
	isSet bool
}

func (v NullableActivityListReposStarredByUser200Response) Get() *ActivityListReposStarredByUser200Response {
	return v.value
}

func (v *NullableActivityListReposStarredByUser200Response) Set(val *ActivityListReposStarredByUser200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityListReposStarredByUser200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityListReposStarredByUser200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityListReposStarredByUser200Response(val *ActivityListReposStarredByUser200Response) *NullableActivityListReposStarredByUser200Response {
	return &NullableActivityListReposStarredByUser200Response{value: val, isSet: true}
}

func (v NullableActivityListReposStarredByUser200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityListReposStarredByUser200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


