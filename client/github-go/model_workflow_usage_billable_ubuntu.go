/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// WorkflowUsageBillableUBUNTU struct for WorkflowUsageBillableUBUNTU
type WorkflowUsageBillableUBUNTU struct {
	TotalMs *int32 `json:"total_ms,omitempty"`
}

// NewWorkflowUsageBillableUBUNTU instantiates a new WorkflowUsageBillableUBUNTU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowUsageBillableUBUNTU() *WorkflowUsageBillableUBUNTU {
	this := WorkflowUsageBillableUBUNTU{}
	return &this
}

// NewWorkflowUsageBillableUBUNTUWithDefaults instantiates a new WorkflowUsageBillableUBUNTU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowUsageBillableUBUNTUWithDefaults() *WorkflowUsageBillableUBUNTU {
	this := WorkflowUsageBillableUBUNTU{}
	return &this
}

// GetTotalMs returns the TotalMs field value if set, zero value otherwise.
func (o *WorkflowUsageBillableUBUNTU) GetTotalMs() int32 {
	if o == nil || o.TotalMs == nil {
		var ret int32
		return ret
	}
	return *o.TotalMs
}

// GetTotalMsOk returns a tuple with the TotalMs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowUsageBillableUBUNTU) GetTotalMsOk() (*int32, bool) {
	if o == nil || o.TotalMs == nil {
		return nil, false
	}
	return o.TotalMs, true
}

// HasTotalMs returns a boolean if a field has been set.
func (o *WorkflowUsageBillableUBUNTU) HasTotalMs() bool {
	if o != nil && o.TotalMs != nil {
		return true
	}

	return false
}

// SetTotalMs gets a reference to the given int32 and assigns it to the TotalMs field.
func (o *WorkflowUsageBillableUBUNTU) SetTotalMs(v int32) {
	o.TotalMs = &v
}

func (o WorkflowUsageBillableUBUNTU) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalMs != nil {
		toSerialize["total_ms"] = o.TotalMs
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowUsageBillableUBUNTU struct {
	value *WorkflowUsageBillableUBUNTU
	isSet bool
}

func (v NullableWorkflowUsageBillableUBUNTU) Get() *WorkflowUsageBillableUBUNTU {
	return v.value
}

func (v *NullableWorkflowUsageBillableUBUNTU) Set(val *WorkflowUsageBillableUBUNTU) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowUsageBillableUBUNTU) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowUsageBillableUBUNTU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowUsageBillableUBUNTU(val *WorkflowUsageBillableUBUNTU) *NullableWorkflowUsageBillableUBUNTU {
	return &NullableWorkflowUsageBillableUBUNTU{value: val, isSet: true}
}

func (v NullableWorkflowUsageBillableUBUNTU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowUsageBillableUBUNTU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


