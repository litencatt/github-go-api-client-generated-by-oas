/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposGenerateReleaseNotesRequest struct for ReposGenerateReleaseNotesRequest
type ReposGenerateReleaseNotesRequest struct {
	// The tag name for the release. This can be an existing tag or a new one.
	TagName string `json:"tag_name"`
	// Specifies the commitish value that will be the target for the release's tag. Required if the supplied tag_name does not reference an existing tag. Ignored if the tag_name already exists.
	TargetCommitish *string `json:"target_commitish,omitempty"`
	// The name of the previous tag to use as the starting point for the release notes. Use to manually specify the range for the set of changes considered as part this release.
	PreviousTagName *string `json:"previous_tag_name,omitempty"`
	// Specifies a path to a file in the repository containing configuration settings used for generating the release notes. If unspecified, the configuration file located in the repository at '.github/release.yml' or '.github/release.yaml' will be used. If that is not present, the default configuration will be used.
	ConfigurationFilePath *string `json:"configuration_file_path,omitempty"`
}

// NewReposGenerateReleaseNotesRequest instantiates a new ReposGenerateReleaseNotesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposGenerateReleaseNotesRequest(tagName string) *ReposGenerateReleaseNotesRequest {
	this := ReposGenerateReleaseNotesRequest{}
	this.TagName = tagName
	return &this
}

// NewReposGenerateReleaseNotesRequestWithDefaults instantiates a new ReposGenerateReleaseNotesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposGenerateReleaseNotesRequestWithDefaults() *ReposGenerateReleaseNotesRequest {
	this := ReposGenerateReleaseNotesRequest{}
	return &this
}

// GetTagName returns the TagName field value
func (o *ReposGenerateReleaseNotesRequest) GetTagName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagName
}

// GetTagNameOk returns a tuple with the TagName field value
// and a boolean to check if the value has been set.
func (o *ReposGenerateReleaseNotesRequest) GetTagNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagName, true
}

// SetTagName sets field value
func (o *ReposGenerateReleaseNotesRequest) SetTagName(v string) {
	o.TagName = v
}

// GetTargetCommitish returns the TargetCommitish field value if set, zero value otherwise.
func (o *ReposGenerateReleaseNotesRequest) GetTargetCommitish() string {
	if o == nil || o.TargetCommitish == nil {
		var ret string
		return ret
	}
	return *o.TargetCommitish
}

// GetTargetCommitishOk returns a tuple with the TargetCommitish field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposGenerateReleaseNotesRequest) GetTargetCommitishOk() (*string, bool) {
	if o == nil || o.TargetCommitish == nil {
		return nil, false
	}
	return o.TargetCommitish, true
}

// HasTargetCommitish returns a boolean if a field has been set.
func (o *ReposGenerateReleaseNotesRequest) HasTargetCommitish() bool {
	if o != nil && o.TargetCommitish != nil {
		return true
	}

	return false
}

// SetTargetCommitish gets a reference to the given string and assigns it to the TargetCommitish field.
func (o *ReposGenerateReleaseNotesRequest) SetTargetCommitish(v string) {
	o.TargetCommitish = &v
}

// GetPreviousTagName returns the PreviousTagName field value if set, zero value otherwise.
func (o *ReposGenerateReleaseNotesRequest) GetPreviousTagName() string {
	if o == nil || o.PreviousTagName == nil {
		var ret string
		return ret
	}
	return *o.PreviousTagName
}

// GetPreviousTagNameOk returns a tuple with the PreviousTagName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposGenerateReleaseNotesRequest) GetPreviousTagNameOk() (*string, bool) {
	if o == nil || o.PreviousTagName == nil {
		return nil, false
	}
	return o.PreviousTagName, true
}

// HasPreviousTagName returns a boolean if a field has been set.
func (o *ReposGenerateReleaseNotesRequest) HasPreviousTagName() bool {
	if o != nil && o.PreviousTagName != nil {
		return true
	}

	return false
}

// SetPreviousTagName gets a reference to the given string and assigns it to the PreviousTagName field.
func (o *ReposGenerateReleaseNotesRequest) SetPreviousTagName(v string) {
	o.PreviousTagName = &v
}

// GetConfigurationFilePath returns the ConfigurationFilePath field value if set, zero value otherwise.
func (o *ReposGenerateReleaseNotesRequest) GetConfigurationFilePath() string {
	if o == nil || o.ConfigurationFilePath == nil {
		var ret string
		return ret
	}
	return *o.ConfigurationFilePath
}

// GetConfigurationFilePathOk returns a tuple with the ConfigurationFilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposGenerateReleaseNotesRequest) GetConfigurationFilePathOk() (*string, bool) {
	if o == nil || o.ConfigurationFilePath == nil {
		return nil, false
	}
	return o.ConfigurationFilePath, true
}

// HasConfigurationFilePath returns a boolean if a field has been set.
func (o *ReposGenerateReleaseNotesRequest) HasConfigurationFilePath() bool {
	if o != nil && o.ConfigurationFilePath != nil {
		return true
	}

	return false
}

// SetConfigurationFilePath gets a reference to the given string and assigns it to the ConfigurationFilePath field.
func (o *ReposGenerateReleaseNotesRequest) SetConfigurationFilePath(v string) {
	o.ConfigurationFilePath = &v
}

func (o ReposGenerateReleaseNotesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tag_name"] = o.TagName
	}
	if o.TargetCommitish != nil {
		toSerialize["target_commitish"] = o.TargetCommitish
	}
	if o.PreviousTagName != nil {
		toSerialize["previous_tag_name"] = o.PreviousTagName
	}
	if o.ConfigurationFilePath != nil {
		toSerialize["configuration_file_path"] = o.ConfigurationFilePath
	}
	return json.Marshal(toSerialize)
}

type NullableReposGenerateReleaseNotesRequest struct {
	value *ReposGenerateReleaseNotesRequest
	isSet bool
}

func (v NullableReposGenerateReleaseNotesRequest) Get() *ReposGenerateReleaseNotesRequest {
	return v.value
}

func (v *NullableReposGenerateReleaseNotesRequest) Set(val *ReposGenerateReleaseNotesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposGenerateReleaseNotesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposGenerateReleaseNotesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposGenerateReleaseNotesRequest(val *ReposGenerateReleaseNotesRequest) *NullableReposGenerateReleaseNotesRequest {
	return &NullableReposGenerateReleaseNotesRequest{value: val, isSet: true}
}

func (v NullableReposGenerateReleaseNotesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposGenerateReleaseNotesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


