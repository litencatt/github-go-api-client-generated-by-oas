/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CodeownersErrors A list of errors found in a repo's CODEOWNERS file
type CodeownersErrors struct {
	Errors []CodeownersErrorsErrorsInner `json:"errors"`
}

// NewCodeownersErrors instantiates a new CodeownersErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeownersErrors(errors []CodeownersErrorsErrorsInner) *CodeownersErrors {
	this := CodeownersErrors{}
	this.Errors = errors
	return &this
}

// NewCodeownersErrorsWithDefaults instantiates a new CodeownersErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeownersErrorsWithDefaults() *CodeownersErrors {
	this := CodeownersErrors{}
	return &this
}

// GetErrors returns the Errors field value
func (o *CodeownersErrors) GetErrors() []CodeownersErrorsErrorsInner {
	if o == nil {
		var ret []CodeownersErrorsErrorsInner
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *CodeownersErrors) GetErrorsOk() ([]CodeownersErrorsErrorsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *CodeownersErrors) SetErrors(v []CodeownersErrorsErrorsInner) {
	o.Errors = v
}

func (o CodeownersErrors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableCodeownersErrors struct {
	value *CodeownersErrors
	isSet bool
}

func (v NullableCodeownersErrors) Get() *CodeownersErrors {
	return v.value
}

func (v *NullableCodeownersErrors) Set(val *CodeownersErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeownersErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeownersErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeownersErrors(val *CodeownersErrors) *NullableCodeownersErrors {
	return &NullableCodeownersErrors{value: val, isSet: true}
}

func (v NullableCodeownersErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeownersErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


