/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ActionsSetDefaultWorkflowPermissions struct for ActionsSetDefaultWorkflowPermissions
type ActionsSetDefaultWorkflowPermissions struct {
	DefaultWorkflowPermissions *ActionsDefaultWorkflowPermissions `json:"default_workflow_permissions,omitempty"`
	// Whether GitHub Actions can approve pull requests. Enabling this can be a security risk.
	CanApprovePullRequestReviews *bool `json:"can_approve_pull_request_reviews,omitempty"`
}

// NewActionsSetDefaultWorkflowPermissions instantiates a new ActionsSetDefaultWorkflowPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsSetDefaultWorkflowPermissions() *ActionsSetDefaultWorkflowPermissions {
	this := ActionsSetDefaultWorkflowPermissions{}
	return &this
}

// NewActionsSetDefaultWorkflowPermissionsWithDefaults instantiates a new ActionsSetDefaultWorkflowPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsSetDefaultWorkflowPermissionsWithDefaults() *ActionsSetDefaultWorkflowPermissions {
	this := ActionsSetDefaultWorkflowPermissions{}
	return &this
}

// GetDefaultWorkflowPermissions returns the DefaultWorkflowPermissions field value if set, zero value otherwise.
func (o *ActionsSetDefaultWorkflowPermissions) GetDefaultWorkflowPermissions() ActionsDefaultWorkflowPermissions {
	if o == nil || o.DefaultWorkflowPermissions == nil {
		var ret ActionsDefaultWorkflowPermissions
		return ret
	}
	return *o.DefaultWorkflowPermissions
}

// GetDefaultWorkflowPermissionsOk returns a tuple with the DefaultWorkflowPermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsSetDefaultWorkflowPermissions) GetDefaultWorkflowPermissionsOk() (*ActionsDefaultWorkflowPermissions, bool) {
	if o == nil || o.DefaultWorkflowPermissions == nil {
		return nil, false
	}
	return o.DefaultWorkflowPermissions, true
}

// HasDefaultWorkflowPermissions returns a boolean if a field has been set.
func (o *ActionsSetDefaultWorkflowPermissions) HasDefaultWorkflowPermissions() bool {
	if o != nil && o.DefaultWorkflowPermissions != nil {
		return true
	}

	return false
}

// SetDefaultWorkflowPermissions gets a reference to the given ActionsDefaultWorkflowPermissions and assigns it to the DefaultWorkflowPermissions field.
func (o *ActionsSetDefaultWorkflowPermissions) SetDefaultWorkflowPermissions(v ActionsDefaultWorkflowPermissions) {
	o.DefaultWorkflowPermissions = &v
}

// GetCanApprovePullRequestReviews returns the CanApprovePullRequestReviews field value if set, zero value otherwise.
func (o *ActionsSetDefaultWorkflowPermissions) GetCanApprovePullRequestReviews() bool {
	if o == nil || o.CanApprovePullRequestReviews == nil {
		var ret bool
		return ret
	}
	return *o.CanApprovePullRequestReviews
}

// GetCanApprovePullRequestReviewsOk returns a tuple with the CanApprovePullRequestReviews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsSetDefaultWorkflowPermissions) GetCanApprovePullRequestReviewsOk() (*bool, bool) {
	if o == nil || o.CanApprovePullRequestReviews == nil {
		return nil, false
	}
	return o.CanApprovePullRequestReviews, true
}

// HasCanApprovePullRequestReviews returns a boolean if a field has been set.
func (o *ActionsSetDefaultWorkflowPermissions) HasCanApprovePullRequestReviews() bool {
	if o != nil && o.CanApprovePullRequestReviews != nil {
		return true
	}

	return false
}

// SetCanApprovePullRequestReviews gets a reference to the given bool and assigns it to the CanApprovePullRequestReviews field.
func (o *ActionsSetDefaultWorkflowPermissions) SetCanApprovePullRequestReviews(v bool) {
	o.CanApprovePullRequestReviews = &v
}

func (o ActionsSetDefaultWorkflowPermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DefaultWorkflowPermissions != nil {
		toSerialize["default_workflow_permissions"] = o.DefaultWorkflowPermissions
	}
	if o.CanApprovePullRequestReviews != nil {
		toSerialize["can_approve_pull_request_reviews"] = o.CanApprovePullRequestReviews
	}
	return json.Marshal(toSerialize)
}

type NullableActionsSetDefaultWorkflowPermissions struct {
	value *ActionsSetDefaultWorkflowPermissions
	isSet bool
}

func (v NullableActionsSetDefaultWorkflowPermissions) Get() *ActionsSetDefaultWorkflowPermissions {
	return v.value
}

func (v *NullableActionsSetDefaultWorkflowPermissions) Set(val *ActionsSetDefaultWorkflowPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsSetDefaultWorkflowPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsSetDefaultWorkflowPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsSetDefaultWorkflowPermissions(val *ActionsSetDefaultWorkflowPermissions) *NullableActionsSetDefaultWorkflowPermissions {
	return &NullableActionsSetDefaultWorkflowPermissions{value: val, isSet: true}
}

func (v NullableActionsSetDefaultWorkflowPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsSetDefaultWorkflowPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


