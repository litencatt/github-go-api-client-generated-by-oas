/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// TimelineCrossReferencedEvent Timeline Cross Referenced Event
type TimelineCrossReferencedEvent struct {
	Event string `json:"event"`
	Actor *SimpleUser `json:"actor,omitempty"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	Source TimelineCrossReferencedEventSource `json:"source"`
}

// NewTimelineCrossReferencedEvent instantiates a new TimelineCrossReferencedEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimelineCrossReferencedEvent(event string, createdAt time.Time, updatedAt time.Time, source TimelineCrossReferencedEventSource) *TimelineCrossReferencedEvent {
	this := TimelineCrossReferencedEvent{}
	this.Event = event
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Source = source
	return &this
}

// NewTimelineCrossReferencedEventWithDefaults instantiates a new TimelineCrossReferencedEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimelineCrossReferencedEventWithDefaults() *TimelineCrossReferencedEvent {
	this := TimelineCrossReferencedEvent{}
	return &this
}

// GetEvent returns the Event field value
func (o *TimelineCrossReferencedEvent) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *TimelineCrossReferencedEvent) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *TimelineCrossReferencedEvent) SetEvent(v string) {
	o.Event = v
}

// GetActor returns the Actor field value if set, zero value otherwise.
func (o *TimelineCrossReferencedEvent) GetActor() SimpleUser {
	if o == nil || o.Actor == nil {
		var ret SimpleUser
		return ret
	}
	return *o.Actor
}

// GetActorOk returns a tuple with the Actor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimelineCrossReferencedEvent) GetActorOk() (*SimpleUser, bool) {
	if o == nil || o.Actor == nil {
		return nil, false
	}
	return o.Actor, true
}

// HasActor returns a boolean if a field has been set.
func (o *TimelineCrossReferencedEvent) HasActor() bool {
	if o != nil && o.Actor != nil {
		return true
	}

	return false
}

// SetActor gets a reference to the given SimpleUser and assigns it to the Actor field.
func (o *TimelineCrossReferencedEvent) SetActor(v SimpleUser) {
	o.Actor = &v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TimelineCrossReferencedEvent) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TimelineCrossReferencedEvent) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TimelineCrossReferencedEvent) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TimelineCrossReferencedEvent) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TimelineCrossReferencedEvent) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TimelineCrossReferencedEvent) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetSource returns the Source field value
func (o *TimelineCrossReferencedEvent) GetSource() TimelineCrossReferencedEventSource {
	if o == nil {
		var ret TimelineCrossReferencedEventSource
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *TimelineCrossReferencedEvent) GetSourceOk() (*TimelineCrossReferencedEventSource, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *TimelineCrossReferencedEvent) SetSource(v TimelineCrossReferencedEventSource) {
	o.Source = v
}

func (o TimelineCrossReferencedEvent) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["event"] = o.Event
	}
	if o.Actor != nil {
		toSerialize["actor"] = o.Actor
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["source"] = o.Source
	}
	return json.Marshal(toSerialize)
}

type NullableTimelineCrossReferencedEvent struct {
	value *TimelineCrossReferencedEvent
	isSet bool
}

func (v NullableTimelineCrossReferencedEvent) Get() *TimelineCrossReferencedEvent {
	return v.value
}

func (v *NullableTimelineCrossReferencedEvent) Set(val *TimelineCrossReferencedEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableTimelineCrossReferencedEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableTimelineCrossReferencedEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimelineCrossReferencedEvent(val *TimelineCrossReferencedEvent) *NullableTimelineCrossReferencedEvent {
	return &NullableTimelineCrossReferencedEvent{value: val, isSet: true}
}

func (v NullableTimelineCrossReferencedEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimelineCrossReferencedEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


