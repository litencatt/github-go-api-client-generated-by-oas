/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CodeOfConduct Code Of Conduct
type CodeOfConduct struct {
	Key string `json:"key"`
	Name string `json:"name"`
	Url string `json:"url"`
	Body *string `json:"body,omitempty"`
	HtmlUrl NullableString `json:"html_url"`
}

// NewCodeOfConduct instantiates a new CodeOfConduct object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeOfConduct(key string, name string, url string, htmlUrl NullableString) *CodeOfConduct {
	this := CodeOfConduct{}
	this.Key = key
	this.Name = name
	this.Url = url
	this.HtmlUrl = htmlUrl
	return &this
}

// NewCodeOfConductWithDefaults instantiates a new CodeOfConduct object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeOfConductWithDefaults() *CodeOfConduct {
	this := CodeOfConduct{}
	return &this
}

// GetKey returns the Key field value
func (o *CodeOfConduct) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *CodeOfConduct) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *CodeOfConduct) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *CodeOfConduct) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CodeOfConduct) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CodeOfConduct) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *CodeOfConduct) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CodeOfConduct) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CodeOfConduct) SetUrl(v string) {
	o.Url = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CodeOfConduct) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeOfConduct) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CodeOfConduct) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *CodeOfConduct) SetBody(v string) {
	o.Body = &v
}

// GetHtmlUrl returns the HtmlUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CodeOfConduct) GetHtmlUrl() string {
	if o == nil || o.HtmlUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.HtmlUrl.Get()
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodeOfConduct) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtmlUrl.Get(), o.HtmlUrl.IsSet()
}

// SetHtmlUrl sets field value
func (o *CodeOfConduct) SetHtmlUrl(v string) {
	o.HtmlUrl.Set(&v)
}

func (o CodeOfConduct) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCodeOfConduct struct {
	value *CodeOfConduct
	isSet bool
}

func (v NullableCodeOfConduct) Get() *CodeOfConduct {
	return v.value
}

func (v *NullableCodeOfConduct) Set(val *CodeOfConduct) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeOfConduct) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeOfConduct) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeOfConduct(val *CodeOfConduct) *NullableCodeOfConduct {
	return &NullableCodeOfConduct{value: val, isSet: true}
}

func (v NullableCodeOfConduct) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeOfConduct) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


