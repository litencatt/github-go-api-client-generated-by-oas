/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ProtectedBranchAdminEnforced Protected Branch Admin Enforced
type ProtectedBranchAdminEnforced struct {
	Url string `json:"url"`
	Enabled bool `json:"enabled"`
}

// NewProtectedBranchAdminEnforced instantiates a new ProtectedBranchAdminEnforced object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedBranchAdminEnforced(url string, enabled bool) *ProtectedBranchAdminEnforced {
	this := ProtectedBranchAdminEnforced{}
	this.Url = url
	this.Enabled = enabled
	return &this
}

// NewProtectedBranchAdminEnforcedWithDefaults instantiates a new ProtectedBranchAdminEnforced object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedBranchAdminEnforcedWithDefaults() *ProtectedBranchAdminEnforced {
	this := ProtectedBranchAdminEnforced{}
	return &this
}

// GetUrl returns the Url field value
func (o *ProtectedBranchAdminEnforced) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ProtectedBranchAdminEnforced) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ProtectedBranchAdminEnforced) SetUrl(v string) {
	o.Url = v
}

// GetEnabled returns the Enabled field value
func (o *ProtectedBranchAdminEnforced) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ProtectedBranchAdminEnforced) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ProtectedBranchAdminEnforced) SetEnabled(v bool) {
	o.Enabled = v
}

func (o ProtectedBranchAdminEnforced) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableProtectedBranchAdminEnforced struct {
	value *ProtectedBranchAdminEnforced
	isSet bool
}

func (v NullableProtectedBranchAdminEnforced) Get() *ProtectedBranchAdminEnforced {
	return v.value
}

func (v *NullableProtectedBranchAdminEnforced) Set(val *ProtectedBranchAdminEnforced) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedBranchAdminEnforced) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedBranchAdminEnforced) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedBranchAdminEnforced(val *ProtectedBranchAdminEnforced) *NullableProtectedBranchAdminEnforced {
	return &NullableProtectedBranchAdminEnforced{value: val, isSet: true}
}

func (v NullableProtectedBranchAdminEnforced) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedBranchAdminEnforced) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


