/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// UserMarketplacePurchase User Marketplace Purchase
type UserMarketplacePurchase struct {
	BillingCycle string `json:"billing_cycle"`
	NextBillingDate NullableTime `json:"next_billing_date"`
	UnitCount NullableInt32 `json:"unit_count"`
	OnFreeTrial bool `json:"on_free_trial"`
	FreeTrialEndsOn NullableTime `json:"free_trial_ends_on"`
	UpdatedAt NullableTime `json:"updated_at"`
	Account MarketplaceAccount `json:"account"`
	Plan MarketplaceListingPlan `json:"plan"`
}

// NewUserMarketplacePurchase instantiates a new UserMarketplacePurchase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserMarketplacePurchase(billingCycle string, nextBillingDate NullableTime, unitCount NullableInt32, onFreeTrial bool, freeTrialEndsOn NullableTime, updatedAt NullableTime, account MarketplaceAccount, plan MarketplaceListingPlan) *UserMarketplacePurchase {
	this := UserMarketplacePurchase{}
	this.BillingCycle = billingCycle
	this.NextBillingDate = nextBillingDate
	this.UnitCount = unitCount
	this.OnFreeTrial = onFreeTrial
	this.FreeTrialEndsOn = freeTrialEndsOn
	this.UpdatedAt = updatedAt
	this.Account = account
	this.Plan = plan
	return &this
}

// NewUserMarketplacePurchaseWithDefaults instantiates a new UserMarketplacePurchase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserMarketplacePurchaseWithDefaults() *UserMarketplacePurchase {
	this := UserMarketplacePurchase{}
	return &this
}

// GetBillingCycle returns the BillingCycle field value
func (o *UserMarketplacePurchase) GetBillingCycle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BillingCycle
}

// GetBillingCycleOk returns a tuple with the BillingCycle field value
// and a boolean to check if the value has been set.
func (o *UserMarketplacePurchase) GetBillingCycleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BillingCycle, true
}

// SetBillingCycle sets field value
func (o *UserMarketplacePurchase) SetBillingCycle(v string) {
	o.BillingCycle = v
}

// GetNextBillingDate returns the NextBillingDate field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *UserMarketplacePurchase) GetNextBillingDate() time.Time {
	if o == nil || o.NextBillingDate.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.NextBillingDate.Get()
}

// GetNextBillingDateOk returns a tuple with the NextBillingDate field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserMarketplacePurchase) GetNextBillingDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextBillingDate.Get(), o.NextBillingDate.IsSet()
}

// SetNextBillingDate sets field value
func (o *UserMarketplacePurchase) SetNextBillingDate(v time.Time) {
	o.NextBillingDate.Set(&v)
}

// GetUnitCount returns the UnitCount field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *UserMarketplacePurchase) GetUnitCount() int32 {
	if o == nil || o.UnitCount.Get() == nil {
		var ret int32
		return ret
	}

	return *o.UnitCount.Get()
}

// GetUnitCountOk returns a tuple with the UnitCount field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserMarketplacePurchase) GetUnitCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitCount.Get(), o.UnitCount.IsSet()
}

// SetUnitCount sets field value
func (o *UserMarketplacePurchase) SetUnitCount(v int32) {
	o.UnitCount.Set(&v)
}

// GetOnFreeTrial returns the OnFreeTrial field value
func (o *UserMarketplacePurchase) GetOnFreeTrial() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OnFreeTrial
}

// GetOnFreeTrialOk returns a tuple with the OnFreeTrial field value
// and a boolean to check if the value has been set.
func (o *UserMarketplacePurchase) GetOnFreeTrialOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OnFreeTrial, true
}

// SetOnFreeTrial sets field value
func (o *UserMarketplacePurchase) SetOnFreeTrial(v bool) {
	o.OnFreeTrial = v
}

// GetFreeTrialEndsOn returns the FreeTrialEndsOn field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *UserMarketplacePurchase) GetFreeTrialEndsOn() time.Time {
	if o == nil || o.FreeTrialEndsOn.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.FreeTrialEndsOn.Get()
}

// GetFreeTrialEndsOnOk returns a tuple with the FreeTrialEndsOn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserMarketplacePurchase) GetFreeTrialEndsOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreeTrialEndsOn.Get(), o.FreeTrialEndsOn.IsSet()
}

// SetFreeTrialEndsOn sets field value
func (o *UserMarketplacePurchase) SetFreeTrialEndsOn(v time.Time) {
	o.FreeTrialEndsOn.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *UserMarketplacePurchase) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UserMarketplacePurchase) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *UserMarketplacePurchase) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetAccount returns the Account field value
func (o *UserMarketplacePurchase) GetAccount() MarketplaceAccount {
	if o == nil {
		var ret MarketplaceAccount
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *UserMarketplacePurchase) GetAccountOk() (*MarketplaceAccount, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *UserMarketplacePurchase) SetAccount(v MarketplaceAccount) {
	o.Account = v
}

// GetPlan returns the Plan field value
func (o *UserMarketplacePurchase) GetPlan() MarketplaceListingPlan {
	if o == nil {
		var ret MarketplaceListingPlan
		return ret
	}

	return o.Plan
}

// GetPlanOk returns a tuple with the Plan field value
// and a boolean to check if the value has been set.
func (o *UserMarketplacePurchase) GetPlanOk() (*MarketplaceListingPlan, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Plan, true
}

// SetPlan sets field value
func (o *UserMarketplacePurchase) SetPlan(v MarketplaceListingPlan) {
	o.Plan = v
}

func (o UserMarketplacePurchase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["billing_cycle"] = o.BillingCycle
	}
	if true {
		toSerialize["next_billing_date"] = o.NextBillingDate.Get()
	}
	if true {
		toSerialize["unit_count"] = o.UnitCount.Get()
	}
	if true {
		toSerialize["on_free_trial"] = o.OnFreeTrial
	}
	if true {
		toSerialize["free_trial_ends_on"] = o.FreeTrialEndsOn.Get()
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if true {
		toSerialize["account"] = o.Account
	}
	if true {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableUserMarketplacePurchase struct {
	value *UserMarketplacePurchase
	isSet bool
}

func (v NullableUserMarketplacePurchase) Get() *UserMarketplacePurchase {
	return v.value
}

func (v *NullableUserMarketplacePurchase) Set(val *UserMarketplacePurchase) {
	v.value = val
	v.isSet = true
}

func (v NullableUserMarketplacePurchase) IsSet() bool {
	return v.isSet
}

func (v *NullableUserMarketplacePurchase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserMarketplacePurchase(val *UserMarketplacePurchase) *NullableUserMarketplacePurchase {
	return &NullableUserMarketplacePurchase{value: val, isSet: true}
}

func (v NullableUserMarketplacePurchase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserMarketplacePurchase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


