/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// UsersCreatePublicSshKeyForAuthenticatedUserRequest struct for UsersCreatePublicSshKeyForAuthenticatedUserRequest
type UsersCreatePublicSshKeyForAuthenticatedUserRequest struct {
	// A descriptive name for the new key.
	Title *string `json:"title,omitempty"`
	// The public SSH key to add to your GitHub account.
	Key string `json:"key"`
}

// NewUsersCreatePublicSshKeyForAuthenticatedUserRequest instantiates a new UsersCreatePublicSshKeyForAuthenticatedUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersCreatePublicSshKeyForAuthenticatedUserRequest(key string) *UsersCreatePublicSshKeyForAuthenticatedUserRequest {
	this := UsersCreatePublicSshKeyForAuthenticatedUserRequest{}
	this.Key = key
	return &this
}

// NewUsersCreatePublicSshKeyForAuthenticatedUserRequestWithDefaults instantiates a new UsersCreatePublicSshKeyForAuthenticatedUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersCreatePublicSshKeyForAuthenticatedUserRequestWithDefaults() *UsersCreatePublicSshKeyForAuthenticatedUserRequest {
	this := UsersCreatePublicSshKeyForAuthenticatedUserRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *UsersCreatePublicSshKeyForAuthenticatedUserRequest) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersCreatePublicSshKeyForAuthenticatedUserRequest) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *UsersCreatePublicSshKeyForAuthenticatedUserRequest) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *UsersCreatePublicSshKeyForAuthenticatedUserRequest) SetTitle(v string) {
	o.Title = &v
}

// GetKey returns the Key field value
func (o *UsersCreatePublicSshKeyForAuthenticatedUserRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *UsersCreatePublicSshKeyForAuthenticatedUserRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *UsersCreatePublicSshKeyForAuthenticatedUserRequest) SetKey(v string) {
	o.Key = v
}

func (o UsersCreatePublicSshKeyForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest struct {
	value *UsersCreatePublicSshKeyForAuthenticatedUserRequest
	isSet bool
}

func (v NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest) Get() *UsersCreatePublicSshKeyForAuthenticatedUserRequest {
	return v.value
}

func (v *NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest) Set(val *UsersCreatePublicSshKeyForAuthenticatedUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersCreatePublicSshKeyForAuthenticatedUserRequest(val *UsersCreatePublicSshKeyForAuthenticatedUserRequest) *NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest {
	return &NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest{value: val, isSet: true}
}

func (v NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersCreatePublicSshKeyForAuthenticatedUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


