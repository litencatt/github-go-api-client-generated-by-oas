/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// PageBuild Page Build
type PageBuild struct {
	Url string `json:"url"`
	Status string `json:"status"`
	Error PageBuildError `json:"error"`
	Pusher NullableNullableSimpleUser `json:"pusher"`
	Commit string `json:"commit"`
	Duration int32 `json:"duration"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewPageBuild instantiates a new PageBuild object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageBuild(url string, status string, error_ PageBuildError, pusher NullableNullableSimpleUser, commit string, duration int32, createdAt time.Time, updatedAt time.Time) *PageBuild {
	this := PageBuild{}
	this.Url = url
	this.Status = status
	this.Error = error_
	this.Pusher = pusher
	this.Commit = commit
	this.Duration = duration
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewPageBuildWithDefaults instantiates a new PageBuild object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageBuildWithDefaults() *PageBuild {
	this := PageBuild{}
	return &this
}

// GetUrl returns the Url field value
func (o *PageBuild) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PageBuild) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PageBuild) SetUrl(v string) {
	o.Url = v
}

// GetStatus returns the Status field value
func (o *PageBuild) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *PageBuild) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *PageBuild) SetStatus(v string) {
	o.Status = v
}

// GetError returns the Error field value
func (o *PageBuild) GetError() PageBuildError {
	if o == nil {
		var ret PageBuildError
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *PageBuild) GetErrorOk() (*PageBuildError, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *PageBuild) SetError(v PageBuildError) {
	o.Error = v
}

// GetPusher returns the Pusher field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *PageBuild) GetPusher() NullableSimpleUser {
	if o == nil || o.Pusher.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.Pusher.Get()
}

// GetPusherOk returns a tuple with the Pusher field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PageBuild) GetPusherOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Pusher.Get(), o.Pusher.IsSet()
}

// SetPusher sets field value
func (o *PageBuild) SetPusher(v NullableSimpleUser) {
	o.Pusher.Set(&v)
}

// GetCommit returns the Commit field value
func (o *PageBuild) GetCommit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Commit
}

// GetCommitOk returns a tuple with the Commit field value
// and a boolean to check if the value has been set.
func (o *PageBuild) GetCommitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Commit, true
}

// SetCommit sets field value
func (o *PageBuild) SetCommit(v string) {
	o.Commit = v
}

// GetDuration returns the Duration field value
func (o *PageBuild) GetDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Duration
}

// GetDurationOk returns a tuple with the Duration field value
// and a boolean to check if the value has been set.
func (o *PageBuild) GetDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Duration, true
}

// SetDuration sets field value
func (o *PageBuild) SetDuration(v int32) {
	o.Duration = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PageBuild) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PageBuild) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PageBuild) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PageBuild) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PageBuild) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PageBuild) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o PageBuild) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["error"] = o.Error
	}
	if true {
		toSerialize["pusher"] = o.Pusher.Get()
	}
	if true {
		toSerialize["commit"] = o.Commit
	}
	if true {
		toSerialize["duration"] = o.Duration
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullablePageBuild struct {
	value *PageBuild
	isSet bool
}

func (v NullablePageBuild) Get() *PageBuild {
	return v.value
}

func (v *NullablePageBuild) Set(val *PageBuild) {
	v.value = val
	v.isSet = true
}

func (v NullablePageBuild) IsSet() bool {
	return v.isSet
}

func (v *NullablePageBuild) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageBuild(val *PageBuild) *NullablePageBuild {
	return &NullablePageBuild{value: val, isSet: true}
}

func (v NullablePageBuild) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageBuild) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


