/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PagesSourceHash struct for PagesSourceHash
type PagesSourceHash struct {
	Branch string `json:"branch"`
	Path string `json:"path"`
}

// NewPagesSourceHash instantiates a new PagesSourceHash object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagesSourceHash(branch string, path string) *PagesSourceHash {
	this := PagesSourceHash{}
	this.Branch = branch
	this.Path = path
	return &this
}

// NewPagesSourceHashWithDefaults instantiates a new PagesSourceHash object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagesSourceHashWithDefaults() *PagesSourceHash {
	this := PagesSourceHash{}
	return &this
}

// GetBranch returns the Branch field value
func (o *PagesSourceHash) GetBranch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Branch
}

// GetBranchOk returns a tuple with the Branch field value
// and a boolean to check if the value has been set.
func (o *PagesSourceHash) GetBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Branch, true
}

// SetBranch sets field value
func (o *PagesSourceHash) SetBranch(v string) {
	o.Branch = v
}

// GetPath returns the Path field value
func (o *PagesSourceHash) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *PagesSourceHash) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *PagesSourceHash) SetPath(v string) {
	o.Path = v
}

func (o PagesSourceHash) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["branch"] = o.Branch
	}
	if true {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullablePagesSourceHash struct {
	value *PagesSourceHash
	isSet bool
}

func (v NullablePagesSourceHash) Get() *PagesSourceHash {
	return v.value
}

func (v *NullablePagesSourceHash) Set(val *PagesSourceHash) {
	v.value = val
	v.isSet = true
}

func (v NullablePagesSourceHash) IsSet() bool {
	return v.isSet
}

func (v *NullablePagesSourceHash) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagesSourceHash(val *PagesSourceHash) *NullablePagesSourceHash {
	return &NullablePagesSourceHash{value: val, isSet: true}
}

func (v NullablePagesSourceHash) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagesSourceHash) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


