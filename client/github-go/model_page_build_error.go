/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PageBuildError struct for PageBuildError
type PageBuildError struct {
	Message NullableString `json:"message"`
}

// NewPageBuildError instantiates a new PageBuildError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageBuildError(message NullableString) *PageBuildError {
	this := PageBuildError{}
	this.Message = message
	return &this
}

// NewPageBuildErrorWithDefaults instantiates a new PageBuildError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageBuildErrorWithDefaults() *PageBuildError {
	this := PageBuildError{}
	return &this
}

// GetMessage returns the Message field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PageBuildError) GetMessage() string {
	if o == nil || o.Message.Get() == nil {
		var ret string
		return ret
	}

	return *o.Message.Get()
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PageBuildError) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Message.Get(), o.Message.IsSet()
}

// SetMessage sets field value
func (o *PageBuildError) SetMessage(v string) {
	o.Message.Set(&v)
}

func (o PageBuildError) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePageBuildError struct {
	value *PageBuildError
	isSet bool
}

func (v NullablePageBuildError) Get() *PageBuildError {
	return v.value
}

func (v *NullablePageBuildError) Set(val *PageBuildError) {
	v.value = val
	v.isSet = true
}

func (v NullablePageBuildError) IsSet() bool {
	return v.isSet
}

func (v *NullablePageBuildError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageBuildError(val *PageBuildError) *NullablePageBuildError {
	return &NullablePageBuildError{value: val, isSet: true}
}

func (v NullablePageBuildError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageBuildError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


