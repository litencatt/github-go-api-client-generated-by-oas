/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// TopicSearchResultItemRelatedInnerTopicRelation struct for TopicSearchResultItemRelatedInnerTopicRelation
type TopicSearchResultItemRelatedInnerTopicRelation struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	TopicId *int32 `json:"topic_id,omitempty"`
	RelationType *string `json:"relation_type,omitempty"`
}

// NewTopicSearchResultItemRelatedInnerTopicRelation instantiates a new TopicSearchResultItemRelatedInnerTopicRelation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopicSearchResultItemRelatedInnerTopicRelation() *TopicSearchResultItemRelatedInnerTopicRelation {
	this := TopicSearchResultItemRelatedInnerTopicRelation{}
	return &this
}

// NewTopicSearchResultItemRelatedInnerTopicRelationWithDefaults instantiates a new TopicSearchResultItemRelatedInnerTopicRelation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopicSearchResultItemRelatedInnerTopicRelationWithDefaults() *TopicSearchResultItemRelatedInnerTopicRelation {
	this := TopicSearchResultItemRelatedInnerTopicRelation{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) SetName(v string) {
	o.Name = &v
}

// GetTopicId returns the TopicId field value if set, zero value otherwise.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) GetTopicId() int32 {
	if o == nil || o.TopicId == nil {
		var ret int32
		return ret
	}
	return *o.TopicId
}

// GetTopicIdOk returns a tuple with the TopicId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) GetTopicIdOk() (*int32, bool) {
	if o == nil || o.TopicId == nil {
		return nil, false
	}
	return o.TopicId, true
}

// HasTopicId returns a boolean if a field has been set.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) HasTopicId() bool {
	if o != nil && o.TopicId != nil {
		return true
	}

	return false
}

// SetTopicId gets a reference to the given int32 and assigns it to the TopicId field.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) SetTopicId(v int32) {
	o.TopicId = &v
}

// GetRelationType returns the RelationType field value if set, zero value otherwise.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) GetRelationType() string {
	if o == nil || o.RelationType == nil {
		var ret string
		return ret
	}
	return *o.RelationType
}

// GetRelationTypeOk returns a tuple with the RelationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) GetRelationTypeOk() (*string, bool) {
	if o == nil || o.RelationType == nil {
		return nil, false
	}
	return o.RelationType, true
}

// HasRelationType returns a boolean if a field has been set.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) HasRelationType() bool {
	if o != nil && o.RelationType != nil {
		return true
	}

	return false
}

// SetRelationType gets a reference to the given string and assigns it to the RelationType field.
func (o *TopicSearchResultItemRelatedInnerTopicRelation) SetRelationType(v string) {
	o.RelationType = &v
}

func (o TopicSearchResultItemRelatedInnerTopicRelation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.TopicId != nil {
		toSerialize["topic_id"] = o.TopicId
	}
	if o.RelationType != nil {
		toSerialize["relation_type"] = o.RelationType
	}
	return json.Marshal(toSerialize)
}

type NullableTopicSearchResultItemRelatedInnerTopicRelation struct {
	value *TopicSearchResultItemRelatedInnerTopicRelation
	isSet bool
}

func (v NullableTopicSearchResultItemRelatedInnerTopicRelation) Get() *TopicSearchResultItemRelatedInnerTopicRelation {
	return v.value
}

func (v *NullableTopicSearchResultItemRelatedInnerTopicRelation) Set(val *TopicSearchResultItemRelatedInnerTopicRelation) {
	v.value = val
	v.isSet = true
}

func (v NullableTopicSearchResultItemRelatedInnerTopicRelation) IsSet() bool {
	return v.isSet
}

func (v *NullableTopicSearchResultItemRelatedInnerTopicRelation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopicSearchResultItemRelatedInnerTopicRelation(val *TopicSearchResultItemRelatedInnerTopicRelation) *NullableTopicSearchResultItemRelatedInnerTopicRelation {
	return &NullableTopicSearchResultItemRelatedInnerTopicRelation{value: val, isSet: true}
}

func (v NullableTopicSearchResultItemRelatedInnerTopicRelation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopicSearchResultItemRelatedInnerTopicRelation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


