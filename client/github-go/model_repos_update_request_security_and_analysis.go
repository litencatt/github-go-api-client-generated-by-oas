/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposUpdateRequestSecurityAndAnalysis Specify which security and analysis features to enable or disable for the repository.  To use this parameter, you must have admin permissions for the repository or be an owner or security manager for the organization that owns the repository. For more information, see \"[Managing security managers in your organization](https://docs.github.com/organizations/managing-peoples-access-to-your-organization-with-roles/managing-security-managers-in-your-organization).\"  For example, to enable GitHub Advanced Security, use this data in the body of the `PATCH` request: `{ \"security_and_analysis\": {\"advanced_security\": { \"status\": \"enabled\" } } }`.  You can check which security and analysis features are currently enabled by using a `GET /repos/{owner}/{repo}` request.
type ReposUpdateRequestSecurityAndAnalysis struct {
	AdvancedSecurity *ReposUpdateRequestSecurityAndAnalysisAdvancedSecurity `json:"advanced_security,omitempty"`
	SecretScanning *ReposUpdateRequestSecurityAndAnalysisSecretScanning `json:"secret_scanning,omitempty"`
	SecretScanningPushProtection *ReposUpdateRequestSecurityAndAnalysisSecretScanningPushProtection `json:"secret_scanning_push_protection,omitempty"`
}

// NewReposUpdateRequestSecurityAndAnalysis instantiates a new ReposUpdateRequestSecurityAndAnalysis object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposUpdateRequestSecurityAndAnalysis() *ReposUpdateRequestSecurityAndAnalysis {
	this := ReposUpdateRequestSecurityAndAnalysis{}
	return &this
}

// NewReposUpdateRequestSecurityAndAnalysisWithDefaults instantiates a new ReposUpdateRequestSecurityAndAnalysis object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposUpdateRequestSecurityAndAnalysisWithDefaults() *ReposUpdateRequestSecurityAndAnalysis {
	this := ReposUpdateRequestSecurityAndAnalysis{}
	return &this
}

// GetAdvancedSecurity returns the AdvancedSecurity field value if set, zero value otherwise.
func (o *ReposUpdateRequestSecurityAndAnalysis) GetAdvancedSecurity() ReposUpdateRequestSecurityAndAnalysisAdvancedSecurity {
	if o == nil || o.AdvancedSecurity == nil {
		var ret ReposUpdateRequestSecurityAndAnalysisAdvancedSecurity
		return ret
	}
	return *o.AdvancedSecurity
}

// GetAdvancedSecurityOk returns a tuple with the AdvancedSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateRequestSecurityAndAnalysis) GetAdvancedSecurityOk() (*ReposUpdateRequestSecurityAndAnalysisAdvancedSecurity, bool) {
	if o == nil || o.AdvancedSecurity == nil {
		return nil, false
	}
	return o.AdvancedSecurity, true
}

// HasAdvancedSecurity returns a boolean if a field has been set.
func (o *ReposUpdateRequestSecurityAndAnalysis) HasAdvancedSecurity() bool {
	if o != nil && o.AdvancedSecurity != nil {
		return true
	}

	return false
}

// SetAdvancedSecurity gets a reference to the given ReposUpdateRequestSecurityAndAnalysisAdvancedSecurity and assigns it to the AdvancedSecurity field.
func (o *ReposUpdateRequestSecurityAndAnalysis) SetAdvancedSecurity(v ReposUpdateRequestSecurityAndAnalysisAdvancedSecurity) {
	o.AdvancedSecurity = &v
}

// GetSecretScanning returns the SecretScanning field value if set, zero value otherwise.
func (o *ReposUpdateRequestSecurityAndAnalysis) GetSecretScanning() ReposUpdateRequestSecurityAndAnalysisSecretScanning {
	if o == nil || o.SecretScanning == nil {
		var ret ReposUpdateRequestSecurityAndAnalysisSecretScanning
		return ret
	}
	return *o.SecretScanning
}

// GetSecretScanningOk returns a tuple with the SecretScanning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateRequestSecurityAndAnalysis) GetSecretScanningOk() (*ReposUpdateRequestSecurityAndAnalysisSecretScanning, bool) {
	if o == nil || o.SecretScanning == nil {
		return nil, false
	}
	return o.SecretScanning, true
}

// HasSecretScanning returns a boolean if a field has been set.
func (o *ReposUpdateRequestSecurityAndAnalysis) HasSecretScanning() bool {
	if o != nil && o.SecretScanning != nil {
		return true
	}

	return false
}

// SetSecretScanning gets a reference to the given ReposUpdateRequestSecurityAndAnalysisSecretScanning and assigns it to the SecretScanning field.
func (o *ReposUpdateRequestSecurityAndAnalysis) SetSecretScanning(v ReposUpdateRequestSecurityAndAnalysisSecretScanning) {
	o.SecretScanning = &v
}

// GetSecretScanningPushProtection returns the SecretScanningPushProtection field value if set, zero value otherwise.
func (o *ReposUpdateRequestSecurityAndAnalysis) GetSecretScanningPushProtection() ReposUpdateRequestSecurityAndAnalysisSecretScanningPushProtection {
	if o == nil || o.SecretScanningPushProtection == nil {
		var ret ReposUpdateRequestSecurityAndAnalysisSecretScanningPushProtection
		return ret
	}
	return *o.SecretScanningPushProtection
}

// GetSecretScanningPushProtectionOk returns a tuple with the SecretScanningPushProtection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateRequestSecurityAndAnalysis) GetSecretScanningPushProtectionOk() (*ReposUpdateRequestSecurityAndAnalysisSecretScanningPushProtection, bool) {
	if o == nil || o.SecretScanningPushProtection == nil {
		return nil, false
	}
	return o.SecretScanningPushProtection, true
}

// HasSecretScanningPushProtection returns a boolean if a field has been set.
func (o *ReposUpdateRequestSecurityAndAnalysis) HasSecretScanningPushProtection() bool {
	if o != nil && o.SecretScanningPushProtection != nil {
		return true
	}

	return false
}

// SetSecretScanningPushProtection gets a reference to the given ReposUpdateRequestSecurityAndAnalysisSecretScanningPushProtection and assigns it to the SecretScanningPushProtection field.
func (o *ReposUpdateRequestSecurityAndAnalysis) SetSecretScanningPushProtection(v ReposUpdateRequestSecurityAndAnalysisSecretScanningPushProtection) {
	o.SecretScanningPushProtection = &v
}

func (o ReposUpdateRequestSecurityAndAnalysis) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AdvancedSecurity != nil {
		toSerialize["advanced_security"] = o.AdvancedSecurity
	}
	if o.SecretScanning != nil {
		toSerialize["secret_scanning"] = o.SecretScanning
	}
	if o.SecretScanningPushProtection != nil {
		toSerialize["secret_scanning_push_protection"] = o.SecretScanningPushProtection
	}
	return json.Marshal(toSerialize)
}

type NullableReposUpdateRequestSecurityAndAnalysis struct {
	value *ReposUpdateRequestSecurityAndAnalysis
	isSet bool
}

func (v NullableReposUpdateRequestSecurityAndAnalysis) Get() *ReposUpdateRequestSecurityAndAnalysis {
	return v.value
}

func (v *NullableReposUpdateRequestSecurityAndAnalysis) Set(val *ReposUpdateRequestSecurityAndAnalysis) {
	v.value = val
	v.isSet = true
}

func (v NullableReposUpdateRequestSecurityAndAnalysis) IsSet() bool {
	return v.isSet
}

func (v *NullableReposUpdateRequestSecurityAndAnalysis) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposUpdateRequestSecurityAndAnalysis(val *ReposUpdateRequestSecurityAndAnalysis) *NullableReposUpdateRequestSecurityAndAnalysis {
	return &NullableReposUpdateRequestSecurityAndAnalysis{value: val, isSet: true}
}

func (v NullableReposUpdateRequestSecurityAndAnalysis) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposUpdateRequestSecurityAndAnalysis) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


