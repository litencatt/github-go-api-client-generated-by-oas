/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PendingDeploymentEnvironment struct for PendingDeploymentEnvironment
type PendingDeploymentEnvironment struct {
	// The id of the environment.
	Id *int32 `json:"id,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	// The name of the environment.
	Name *string `json:"name,omitempty"`
	Url *string `json:"url,omitempty"`
	HtmlUrl *string `json:"html_url,omitempty"`
}

// NewPendingDeploymentEnvironment instantiates a new PendingDeploymentEnvironment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPendingDeploymentEnvironment() *PendingDeploymentEnvironment {
	this := PendingDeploymentEnvironment{}
	return &this
}

// NewPendingDeploymentEnvironmentWithDefaults instantiates a new PendingDeploymentEnvironment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPendingDeploymentEnvironmentWithDefaults() *PendingDeploymentEnvironment {
	this := PendingDeploymentEnvironment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *PendingDeploymentEnvironment) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingDeploymentEnvironment) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *PendingDeploymentEnvironment) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *PendingDeploymentEnvironment) SetId(v int32) {
	o.Id = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *PendingDeploymentEnvironment) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingDeploymentEnvironment) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *PendingDeploymentEnvironment) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *PendingDeploymentEnvironment) SetNodeId(v string) {
	o.NodeId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *PendingDeploymentEnvironment) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingDeploymentEnvironment) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *PendingDeploymentEnvironment) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *PendingDeploymentEnvironment) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *PendingDeploymentEnvironment) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingDeploymentEnvironment) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *PendingDeploymentEnvironment) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *PendingDeploymentEnvironment) SetUrl(v string) {
	o.Url = &v
}

// GetHtmlUrl returns the HtmlUrl field value if set, zero value otherwise.
func (o *PendingDeploymentEnvironment) GetHtmlUrl() string {
	if o == nil || o.HtmlUrl == nil {
		var ret string
		return ret
	}
	return *o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PendingDeploymentEnvironment) GetHtmlUrlOk() (*string, bool) {
	if o == nil || o.HtmlUrl == nil {
		return nil, false
	}
	return o.HtmlUrl, true
}

// HasHtmlUrl returns a boolean if a field has been set.
func (o *PendingDeploymentEnvironment) HasHtmlUrl() bool {
	if o != nil && o.HtmlUrl != nil {
		return true
	}

	return false
}

// SetHtmlUrl gets a reference to the given string and assigns it to the HtmlUrl field.
func (o *PendingDeploymentEnvironment) SetHtmlUrl(v string) {
	o.HtmlUrl = &v
}

func (o PendingDeploymentEnvironment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NodeId != nil {
		toSerialize["node_id"] = o.NodeId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.HtmlUrl != nil {
		toSerialize["html_url"] = o.HtmlUrl
	}
	return json.Marshal(toSerialize)
}

type NullablePendingDeploymentEnvironment struct {
	value *PendingDeploymentEnvironment
	isSet bool
}

func (v NullablePendingDeploymentEnvironment) Get() *PendingDeploymentEnvironment {
	return v.value
}

func (v *NullablePendingDeploymentEnvironment) Set(val *PendingDeploymentEnvironment) {
	v.value = val
	v.isSet = true
}

func (v NullablePendingDeploymentEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullablePendingDeploymentEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePendingDeploymentEnvironment(val *PendingDeploymentEnvironment) *NullablePendingDeploymentEnvironment {
	return &NullablePendingDeploymentEnvironment{value: val, isSet: true}
}

func (v NullablePendingDeploymentEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePendingDeploymentEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


