/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// DependencyGraphDiffInner struct for DependencyGraphDiffInner
type DependencyGraphDiffInner struct {
	ChangeType string `json:"change_type"`
	Manifest string `json:"manifest"`
	Ecosystem string `json:"ecosystem"`
	Name string `json:"name"`
	Version string `json:"version"`
	PackageUrl NullableString `json:"package_url"`
	License NullableString `json:"license"`
	SourceRepositoryUrl NullableString `json:"source_repository_url"`
	Vulnerabilities []DependencyGraphDiffInnerVulnerabilitiesInner `json:"vulnerabilities"`
}

// NewDependencyGraphDiffInner instantiates a new DependencyGraphDiffInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDependencyGraphDiffInner(changeType string, manifest string, ecosystem string, name string, version string, packageUrl NullableString, license NullableString, sourceRepositoryUrl NullableString, vulnerabilities []DependencyGraphDiffInnerVulnerabilitiesInner) *DependencyGraphDiffInner {
	this := DependencyGraphDiffInner{}
	this.ChangeType = changeType
	this.Manifest = manifest
	this.Ecosystem = ecosystem
	this.Name = name
	this.Version = version
	this.PackageUrl = packageUrl
	this.License = license
	this.SourceRepositoryUrl = sourceRepositoryUrl
	this.Vulnerabilities = vulnerabilities
	return &this
}

// NewDependencyGraphDiffInnerWithDefaults instantiates a new DependencyGraphDiffInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDependencyGraphDiffInnerWithDefaults() *DependencyGraphDiffInner {
	this := DependencyGraphDiffInner{}
	return &this
}

// GetChangeType returns the ChangeType field value
func (o *DependencyGraphDiffInner) GetChangeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChangeType
}

// GetChangeTypeOk returns a tuple with the ChangeType field value
// and a boolean to check if the value has been set.
func (o *DependencyGraphDiffInner) GetChangeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangeType, true
}

// SetChangeType sets field value
func (o *DependencyGraphDiffInner) SetChangeType(v string) {
	o.ChangeType = v
}

// GetManifest returns the Manifest field value
func (o *DependencyGraphDiffInner) GetManifest() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Manifest
}

// GetManifestOk returns a tuple with the Manifest field value
// and a boolean to check if the value has been set.
func (o *DependencyGraphDiffInner) GetManifestOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Manifest, true
}

// SetManifest sets field value
func (o *DependencyGraphDiffInner) SetManifest(v string) {
	o.Manifest = v
}

// GetEcosystem returns the Ecosystem field value
func (o *DependencyGraphDiffInner) GetEcosystem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ecosystem
}

// GetEcosystemOk returns a tuple with the Ecosystem field value
// and a boolean to check if the value has been set.
func (o *DependencyGraphDiffInner) GetEcosystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ecosystem, true
}

// SetEcosystem sets field value
func (o *DependencyGraphDiffInner) SetEcosystem(v string) {
	o.Ecosystem = v
}

// GetName returns the Name field value
func (o *DependencyGraphDiffInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DependencyGraphDiffInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DependencyGraphDiffInner) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *DependencyGraphDiffInner) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *DependencyGraphDiffInner) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *DependencyGraphDiffInner) SetVersion(v string) {
	o.Version = v
}

// GetPackageUrl returns the PackageUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DependencyGraphDiffInner) GetPackageUrl() string {
	if o == nil || o.PackageUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.PackageUrl.Get()
}

// GetPackageUrlOk returns a tuple with the PackageUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DependencyGraphDiffInner) GetPackageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PackageUrl.Get(), o.PackageUrl.IsSet()
}

// SetPackageUrl sets field value
func (o *DependencyGraphDiffInner) SetPackageUrl(v string) {
	o.PackageUrl.Set(&v)
}

// GetLicense returns the License field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DependencyGraphDiffInner) GetLicense() string {
	if o == nil || o.License.Get() == nil {
		var ret string
		return ret
	}

	return *o.License.Get()
}

// GetLicenseOk returns a tuple with the License field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DependencyGraphDiffInner) GetLicenseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.License.Get(), o.License.IsSet()
}

// SetLicense sets field value
func (o *DependencyGraphDiffInner) SetLicense(v string) {
	o.License.Set(&v)
}

// GetSourceRepositoryUrl returns the SourceRepositoryUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *DependencyGraphDiffInner) GetSourceRepositoryUrl() string {
	if o == nil || o.SourceRepositoryUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.SourceRepositoryUrl.Get()
}

// GetSourceRepositoryUrlOk returns a tuple with the SourceRepositoryUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DependencyGraphDiffInner) GetSourceRepositoryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SourceRepositoryUrl.Get(), o.SourceRepositoryUrl.IsSet()
}

// SetSourceRepositoryUrl sets field value
func (o *DependencyGraphDiffInner) SetSourceRepositoryUrl(v string) {
	o.SourceRepositoryUrl.Set(&v)
}

// GetVulnerabilities returns the Vulnerabilities field value
func (o *DependencyGraphDiffInner) GetVulnerabilities() []DependencyGraphDiffInnerVulnerabilitiesInner {
	if o == nil {
		var ret []DependencyGraphDiffInnerVulnerabilitiesInner
		return ret
	}

	return o.Vulnerabilities
}

// GetVulnerabilitiesOk returns a tuple with the Vulnerabilities field value
// and a boolean to check if the value has been set.
func (o *DependencyGraphDiffInner) GetVulnerabilitiesOk() ([]DependencyGraphDiffInnerVulnerabilitiesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vulnerabilities, true
}

// SetVulnerabilities sets field value
func (o *DependencyGraphDiffInner) SetVulnerabilities(v []DependencyGraphDiffInnerVulnerabilitiesInner) {
	o.Vulnerabilities = v
}

func (o DependencyGraphDiffInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["change_type"] = o.ChangeType
	}
	if true {
		toSerialize["manifest"] = o.Manifest
	}
	if true {
		toSerialize["ecosystem"] = o.Ecosystem
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["package_url"] = o.PackageUrl.Get()
	}
	if true {
		toSerialize["license"] = o.License.Get()
	}
	if true {
		toSerialize["source_repository_url"] = o.SourceRepositoryUrl.Get()
	}
	if true {
		toSerialize["vulnerabilities"] = o.Vulnerabilities
	}
	return json.Marshal(toSerialize)
}

type NullableDependencyGraphDiffInner struct {
	value *DependencyGraphDiffInner
	isSet bool
}

func (v NullableDependencyGraphDiffInner) Get() *DependencyGraphDiffInner {
	return v.value
}

func (v *NullableDependencyGraphDiffInner) Set(val *DependencyGraphDiffInner) {
	v.value = val
	v.isSet = true
}

func (v NullableDependencyGraphDiffInner) IsSet() bool {
	return v.isSet
}

func (v *NullableDependencyGraphDiffInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDependencyGraphDiffInner(val *DependencyGraphDiffInner) *NullableDependencyGraphDiffInner {
	return &NullableDependencyGraphDiffInner{value: val, isSet: true}
}

func (v NullableDependencyGraphDiffInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDependencyGraphDiffInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


