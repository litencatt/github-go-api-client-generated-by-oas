/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// Feed Feed
type Feed struct {
	TimelineUrl string `json:"timeline_url"`
	UserUrl string `json:"user_url"`
	CurrentUserPublicUrl *string `json:"current_user_public_url,omitempty"`
	CurrentUserUrl *string `json:"current_user_url,omitempty"`
	CurrentUserActorUrl *string `json:"current_user_actor_url,omitempty"`
	CurrentUserOrganizationUrl *string `json:"current_user_organization_url,omitempty"`
	CurrentUserOrganizationUrls []string `json:"current_user_organization_urls,omitempty"`
	SecurityAdvisoriesUrl *string `json:"security_advisories_url,omitempty"`
	Links FeedLinks `json:"_links"`
}

// NewFeed instantiates a new Feed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFeed(timelineUrl string, userUrl string, links FeedLinks) *Feed {
	this := Feed{}
	this.TimelineUrl = timelineUrl
	this.UserUrl = userUrl
	this.Links = links
	return &this
}

// NewFeedWithDefaults instantiates a new Feed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFeedWithDefaults() *Feed {
	this := Feed{}
	return &this
}

// GetTimelineUrl returns the TimelineUrl field value
func (o *Feed) GetTimelineUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimelineUrl
}

// GetTimelineUrlOk returns a tuple with the TimelineUrl field value
// and a boolean to check if the value has been set.
func (o *Feed) GetTimelineUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimelineUrl, true
}

// SetTimelineUrl sets field value
func (o *Feed) SetTimelineUrl(v string) {
	o.TimelineUrl = v
}

// GetUserUrl returns the UserUrl field value
func (o *Feed) GetUserUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserUrl
}

// GetUserUrlOk returns a tuple with the UserUrl field value
// and a boolean to check if the value has been set.
func (o *Feed) GetUserUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserUrl, true
}

// SetUserUrl sets field value
func (o *Feed) SetUserUrl(v string) {
	o.UserUrl = v
}

// GetCurrentUserPublicUrl returns the CurrentUserPublicUrl field value if set, zero value otherwise.
func (o *Feed) GetCurrentUserPublicUrl() string {
	if o == nil || o.CurrentUserPublicUrl == nil {
		var ret string
		return ret
	}
	return *o.CurrentUserPublicUrl
}

// GetCurrentUserPublicUrlOk returns a tuple with the CurrentUserPublicUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Feed) GetCurrentUserPublicUrlOk() (*string, bool) {
	if o == nil || o.CurrentUserPublicUrl == nil {
		return nil, false
	}
	return o.CurrentUserPublicUrl, true
}

// HasCurrentUserPublicUrl returns a boolean if a field has been set.
func (o *Feed) HasCurrentUserPublicUrl() bool {
	if o != nil && o.CurrentUserPublicUrl != nil {
		return true
	}

	return false
}

// SetCurrentUserPublicUrl gets a reference to the given string and assigns it to the CurrentUserPublicUrl field.
func (o *Feed) SetCurrentUserPublicUrl(v string) {
	o.CurrentUserPublicUrl = &v
}

// GetCurrentUserUrl returns the CurrentUserUrl field value if set, zero value otherwise.
func (o *Feed) GetCurrentUserUrl() string {
	if o == nil || o.CurrentUserUrl == nil {
		var ret string
		return ret
	}
	return *o.CurrentUserUrl
}

// GetCurrentUserUrlOk returns a tuple with the CurrentUserUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Feed) GetCurrentUserUrlOk() (*string, bool) {
	if o == nil || o.CurrentUserUrl == nil {
		return nil, false
	}
	return o.CurrentUserUrl, true
}

// HasCurrentUserUrl returns a boolean if a field has been set.
func (o *Feed) HasCurrentUserUrl() bool {
	if o != nil && o.CurrentUserUrl != nil {
		return true
	}

	return false
}

// SetCurrentUserUrl gets a reference to the given string and assigns it to the CurrentUserUrl field.
func (o *Feed) SetCurrentUserUrl(v string) {
	o.CurrentUserUrl = &v
}

// GetCurrentUserActorUrl returns the CurrentUserActorUrl field value if set, zero value otherwise.
func (o *Feed) GetCurrentUserActorUrl() string {
	if o == nil || o.CurrentUserActorUrl == nil {
		var ret string
		return ret
	}
	return *o.CurrentUserActorUrl
}

// GetCurrentUserActorUrlOk returns a tuple with the CurrentUserActorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Feed) GetCurrentUserActorUrlOk() (*string, bool) {
	if o == nil || o.CurrentUserActorUrl == nil {
		return nil, false
	}
	return o.CurrentUserActorUrl, true
}

// HasCurrentUserActorUrl returns a boolean if a field has been set.
func (o *Feed) HasCurrentUserActorUrl() bool {
	if o != nil && o.CurrentUserActorUrl != nil {
		return true
	}

	return false
}

// SetCurrentUserActorUrl gets a reference to the given string and assigns it to the CurrentUserActorUrl field.
func (o *Feed) SetCurrentUserActorUrl(v string) {
	o.CurrentUserActorUrl = &v
}

// GetCurrentUserOrganizationUrl returns the CurrentUserOrganizationUrl field value if set, zero value otherwise.
func (o *Feed) GetCurrentUserOrganizationUrl() string {
	if o == nil || o.CurrentUserOrganizationUrl == nil {
		var ret string
		return ret
	}
	return *o.CurrentUserOrganizationUrl
}

// GetCurrentUserOrganizationUrlOk returns a tuple with the CurrentUserOrganizationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Feed) GetCurrentUserOrganizationUrlOk() (*string, bool) {
	if o == nil || o.CurrentUserOrganizationUrl == nil {
		return nil, false
	}
	return o.CurrentUserOrganizationUrl, true
}

// HasCurrentUserOrganizationUrl returns a boolean if a field has been set.
func (o *Feed) HasCurrentUserOrganizationUrl() bool {
	if o != nil && o.CurrentUserOrganizationUrl != nil {
		return true
	}

	return false
}

// SetCurrentUserOrganizationUrl gets a reference to the given string and assigns it to the CurrentUserOrganizationUrl field.
func (o *Feed) SetCurrentUserOrganizationUrl(v string) {
	o.CurrentUserOrganizationUrl = &v
}

// GetCurrentUserOrganizationUrls returns the CurrentUserOrganizationUrls field value if set, zero value otherwise.
func (o *Feed) GetCurrentUserOrganizationUrls() []string {
	if o == nil || o.CurrentUserOrganizationUrls == nil {
		var ret []string
		return ret
	}
	return o.CurrentUserOrganizationUrls
}

// GetCurrentUserOrganizationUrlsOk returns a tuple with the CurrentUserOrganizationUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Feed) GetCurrentUserOrganizationUrlsOk() ([]string, bool) {
	if o == nil || o.CurrentUserOrganizationUrls == nil {
		return nil, false
	}
	return o.CurrentUserOrganizationUrls, true
}

// HasCurrentUserOrganizationUrls returns a boolean if a field has been set.
func (o *Feed) HasCurrentUserOrganizationUrls() bool {
	if o != nil && o.CurrentUserOrganizationUrls != nil {
		return true
	}

	return false
}

// SetCurrentUserOrganizationUrls gets a reference to the given []string and assigns it to the CurrentUserOrganizationUrls field.
func (o *Feed) SetCurrentUserOrganizationUrls(v []string) {
	o.CurrentUserOrganizationUrls = v
}

// GetSecurityAdvisoriesUrl returns the SecurityAdvisoriesUrl field value if set, zero value otherwise.
func (o *Feed) GetSecurityAdvisoriesUrl() string {
	if o == nil || o.SecurityAdvisoriesUrl == nil {
		var ret string
		return ret
	}
	return *o.SecurityAdvisoriesUrl
}

// GetSecurityAdvisoriesUrlOk returns a tuple with the SecurityAdvisoriesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Feed) GetSecurityAdvisoriesUrlOk() (*string, bool) {
	if o == nil || o.SecurityAdvisoriesUrl == nil {
		return nil, false
	}
	return o.SecurityAdvisoriesUrl, true
}

// HasSecurityAdvisoriesUrl returns a boolean if a field has been set.
func (o *Feed) HasSecurityAdvisoriesUrl() bool {
	if o != nil && o.SecurityAdvisoriesUrl != nil {
		return true
	}

	return false
}

// SetSecurityAdvisoriesUrl gets a reference to the given string and assigns it to the SecurityAdvisoriesUrl field.
func (o *Feed) SetSecurityAdvisoriesUrl(v string) {
	o.SecurityAdvisoriesUrl = &v
}

// GetLinks returns the Links field value
func (o *Feed) GetLinks() FeedLinks {
	if o == nil {
		var ret FeedLinks
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *Feed) GetLinksOk() (*FeedLinks, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Links, true
}

// SetLinks sets field value
func (o *Feed) SetLinks(v FeedLinks) {
	o.Links = v
}

func (o Feed) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["timeline_url"] = o.TimelineUrl
	}
	if true {
		toSerialize["user_url"] = o.UserUrl
	}
	if o.CurrentUserPublicUrl != nil {
		toSerialize["current_user_public_url"] = o.CurrentUserPublicUrl
	}
	if o.CurrentUserUrl != nil {
		toSerialize["current_user_url"] = o.CurrentUserUrl
	}
	if o.CurrentUserActorUrl != nil {
		toSerialize["current_user_actor_url"] = o.CurrentUserActorUrl
	}
	if o.CurrentUserOrganizationUrl != nil {
		toSerialize["current_user_organization_url"] = o.CurrentUserOrganizationUrl
	}
	if o.CurrentUserOrganizationUrls != nil {
		toSerialize["current_user_organization_urls"] = o.CurrentUserOrganizationUrls
	}
	if o.SecurityAdvisoriesUrl != nil {
		toSerialize["security_advisories_url"] = o.SecurityAdvisoriesUrl
	}
	if true {
		toSerialize["_links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableFeed struct {
	value *Feed
	isSet bool
}

func (v NullableFeed) Get() *Feed {
	return v.value
}

func (v *NullableFeed) Set(val *Feed) {
	v.value = val
	v.isSet = true
}

func (v NullableFeed) IsSet() bool {
	return v.isSet
}

func (v *NullableFeed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFeed(val *Feed) *NullableFeed {
	return &NullableFeed{value: val, isSet: true}
}

func (v NullableFeed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFeed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


