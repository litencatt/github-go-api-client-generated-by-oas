/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf struct for ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf
type ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf struct {
	Active NullableBool `json:"active,omitempty"`
	UserName NullableString `json:"userName,omitempty"`
	ExternalId NullableString `json:"externalId,omitempty"`
	GivenName NullableString `json:"givenName,omitempty"`
	FamilyName NullableString `json:"familyName,omitempty"`
}

// NewScimUpdateAttributeForUserRequestOperationsInnerValueOneOf instantiates a new ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimUpdateAttributeForUserRequestOperationsInnerValueOneOf() *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf {
	this := ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf{}
	return &this
}

// NewScimUpdateAttributeForUserRequestOperationsInnerValueOneOfWithDefaults instantiates a new ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimUpdateAttributeForUserRequestOperationsInnerValueOneOfWithDefaults() *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf {
	this := ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf{}
	return &this
}

// GetActive returns the Active field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetActive() bool {
	if o == nil || o.Active.Get() == nil {
		var ret bool
		return ret
	}
	return *o.Active.Get()
}

// GetActiveOk returns a tuple with the Active field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetActiveOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Active.Get(), o.Active.IsSet()
}

// HasActive returns a boolean if a field has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) HasActive() bool {
	if o != nil && o.Active.IsSet() {
		return true
	}

	return false
}

// SetActive gets a reference to the given NullableBool and assigns it to the Active field.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetActive(v bool) {
	o.Active.Set(&v)
}
// SetActiveNil sets the value for Active to be an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetActiveNil() {
	o.Active.Set(nil)
}

// UnsetActive ensures that no value is present for Active, not even an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) UnsetActive() {
	o.Active.Unset()
}

// GetUserName returns the UserName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetUserName() string {
	if o == nil || o.UserName.Get() == nil {
		var ret string
		return ret
	}
	return *o.UserName.Get()
}

// GetUserNameOk returns a tuple with the UserName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserName.Get(), o.UserName.IsSet()
}

// HasUserName returns a boolean if a field has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) HasUserName() bool {
	if o != nil && o.UserName.IsSet() {
		return true
	}

	return false
}

// SetUserName gets a reference to the given NullableString and assigns it to the UserName field.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetUserName(v string) {
	o.UserName.Set(&v)
}
// SetUserNameNil sets the value for UserName to be an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetUserNameNil() {
	o.UserName.Set(nil)
}

// UnsetUserName ensures that no value is present for UserName, not even an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) UnsetUserName() {
	o.UserName.Unset()
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}
	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// HasExternalId returns a boolean if a field has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) HasExternalId() bool {
	if o != nil && o.ExternalId.IsSet() {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given NullableString and assigns it to the ExternalId field.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}
// SetExternalIdNil sets the value for ExternalId to be an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetExternalIdNil() {
	o.ExternalId.Set(nil)
}

// UnsetExternalId ensures that no value is present for ExternalId, not even an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) UnsetExternalId() {
	o.ExternalId.Unset()
}

// GetGivenName returns the GivenName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetGivenName() string {
	if o == nil || o.GivenName.Get() == nil {
		var ret string
		return ret
	}
	return *o.GivenName.Get()
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetGivenNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GivenName.Get(), o.GivenName.IsSet()
}

// HasGivenName returns a boolean if a field has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) HasGivenName() bool {
	if o != nil && o.GivenName.IsSet() {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given NullableString and assigns it to the GivenName field.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetGivenName(v string) {
	o.GivenName.Set(&v)
}
// SetGivenNameNil sets the value for GivenName to be an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetGivenNameNil() {
	o.GivenName.Set(nil)
}

// UnsetGivenName ensures that no value is present for GivenName, not even an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) UnsetGivenName() {
	o.GivenName.Unset()
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetFamilyName() string {
	if o == nil || o.FamilyName.Get() == nil {
		var ret string
		return ret
	}
	return *o.FamilyName.Get()
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) GetFamilyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FamilyName.Get(), o.FamilyName.IsSet()
}

// HasFamilyName returns a boolean if a field has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) HasFamilyName() bool {
	if o != nil && o.FamilyName.IsSet() {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given NullableString and assigns it to the FamilyName field.
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetFamilyName(v string) {
	o.FamilyName.Set(&v)
}
// SetFamilyNameNil sets the value for FamilyName to be an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) SetFamilyNameNil() {
	o.FamilyName.Set(nil)
}

// UnsetFamilyName ensures that no value is present for FamilyName, not even an explicit nil
func (o *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) UnsetFamilyName() {
	o.FamilyName.Unset()
}

func (o ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Active.IsSet() {
		toSerialize["active"] = o.Active.Get()
	}
	if o.UserName.IsSet() {
		toSerialize["userName"] = o.UserName.Get()
	}
	if o.ExternalId.IsSet() {
		toSerialize["externalId"] = o.ExternalId.Get()
	}
	if o.GivenName.IsSet() {
		toSerialize["givenName"] = o.GivenName.Get()
	}
	if o.FamilyName.IsSet() {
		toSerialize["familyName"] = o.FamilyName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf struct {
	value *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf
	isSet bool
}

func (v NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) Get() *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf {
	return v.value
}

func (v *NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) Set(val *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf(val *ScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) *NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf {
	return &NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf{value: val, isSet: true}
}

func (v NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimUpdateAttributeForUserRequestOperationsInnerValueOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


