/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"fmt"
)

// ProjectsCreateCardRequest - struct for ProjectsCreateCardRequest
type ProjectsCreateCardRequest struct {
	ProjectsCreateCardRequestOneOf *ProjectsCreateCardRequestOneOf
	ProjectsCreateCardRequestOneOf1 *ProjectsCreateCardRequestOneOf1
}

// ProjectsCreateCardRequestOneOfAsProjectsCreateCardRequest is a convenience function that returns ProjectsCreateCardRequestOneOf wrapped in ProjectsCreateCardRequest
func ProjectsCreateCardRequestOneOfAsProjectsCreateCardRequest(v *ProjectsCreateCardRequestOneOf) ProjectsCreateCardRequest {
	return ProjectsCreateCardRequest{
		ProjectsCreateCardRequestOneOf: v,
	}
}

// ProjectsCreateCardRequestOneOf1AsProjectsCreateCardRequest is a convenience function that returns ProjectsCreateCardRequestOneOf1 wrapped in ProjectsCreateCardRequest
func ProjectsCreateCardRequestOneOf1AsProjectsCreateCardRequest(v *ProjectsCreateCardRequestOneOf1) ProjectsCreateCardRequest {
	return ProjectsCreateCardRequest{
		ProjectsCreateCardRequestOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ProjectsCreateCardRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ProjectsCreateCardRequestOneOf
	err = newStrictDecoder(data).Decode(&dst.ProjectsCreateCardRequestOneOf)
	if err == nil {
		jsonProjectsCreateCardRequestOneOf, _ := json.Marshal(dst.ProjectsCreateCardRequestOneOf)
		if string(jsonProjectsCreateCardRequestOneOf) == "{}" { // empty struct
			dst.ProjectsCreateCardRequestOneOf = nil
		} else {
			match++
		}
	} else {
		dst.ProjectsCreateCardRequestOneOf = nil
	}

	// try to unmarshal data into ProjectsCreateCardRequestOneOf1
	err = newStrictDecoder(data).Decode(&dst.ProjectsCreateCardRequestOneOf1)
	if err == nil {
		jsonProjectsCreateCardRequestOneOf1, _ := json.Marshal(dst.ProjectsCreateCardRequestOneOf1)
		if string(jsonProjectsCreateCardRequestOneOf1) == "{}" { // empty struct
			dst.ProjectsCreateCardRequestOneOf1 = nil
		} else {
			match++
		}
	} else {
		dst.ProjectsCreateCardRequestOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ProjectsCreateCardRequestOneOf = nil
		dst.ProjectsCreateCardRequestOneOf1 = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(ProjectsCreateCardRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(ProjectsCreateCardRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ProjectsCreateCardRequest) MarshalJSON() ([]byte, error) {
	if src.ProjectsCreateCardRequestOneOf != nil {
		return json.Marshal(&src.ProjectsCreateCardRequestOneOf)
	}

	if src.ProjectsCreateCardRequestOneOf1 != nil {
		return json.Marshal(&src.ProjectsCreateCardRequestOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ProjectsCreateCardRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ProjectsCreateCardRequestOneOf != nil {
		return obj.ProjectsCreateCardRequestOneOf
	}

	if obj.ProjectsCreateCardRequestOneOf1 != nil {
		return obj.ProjectsCreateCardRequestOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableProjectsCreateCardRequest struct {
	value *ProjectsCreateCardRequest
	isSet bool
}

func (v NullableProjectsCreateCardRequest) Get() *ProjectsCreateCardRequest {
	return v.value
}

func (v *NullableProjectsCreateCardRequest) Set(val *ProjectsCreateCardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsCreateCardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsCreateCardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsCreateCardRequest(val *ProjectsCreateCardRequest) *NullableProjectsCreateCardRequest {
	return &NullableProjectsCreateCardRequest{value: val, isSet: true}
}

func (v NullableProjectsCreateCardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsCreateCardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


