/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// MigrationsUpdateImportRequest struct for MigrationsUpdateImportRequest
type MigrationsUpdateImportRequest struct {
	// The username to provide to the originating repository.
	VcsUsername *string `json:"vcs_username,omitempty"`
	// The password to provide to the originating repository.
	VcsPassword *string `json:"vcs_password,omitempty"`
	// The type of version control system you are migrating from.
	Vcs *string `json:"vcs,omitempty"`
	// For a tfvc import, the name of the project that is being imported.
	TfvcProject *string `json:"tfvc_project,omitempty"`
}

// NewMigrationsUpdateImportRequest instantiates a new MigrationsUpdateImportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationsUpdateImportRequest() *MigrationsUpdateImportRequest {
	this := MigrationsUpdateImportRequest{}
	return &this
}

// NewMigrationsUpdateImportRequestWithDefaults instantiates a new MigrationsUpdateImportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationsUpdateImportRequestWithDefaults() *MigrationsUpdateImportRequest {
	this := MigrationsUpdateImportRequest{}
	return &this
}

// GetVcsUsername returns the VcsUsername field value if set, zero value otherwise.
func (o *MigrationsUpdateImportRequest) GetVcsUsername() string {
	if o == nil || o.VcsUsername == nil {
		var ret string
		return ret
	}
	return *o.VcsUsername
}

// GetVcsUsernameOk returns a tuple with the VcsUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsUpdateImportRequest) GetVcsUsernameOk() (*string, bool) {
	if o == nil || o.VcsUsername == nil {
		return nil, false
	}
	return o.VcsUsername, true
}

// HasVcsUsername returns a boolean if a field has been set.
func (o *MigrationsUpdateImportRequest) HasVcsUsername() bool {
	if o != nil && o.VcsUsername != nil {
		return true
	}

	return false
}

// SetVcsUsername gets a reference to the given string and assigns it to the VcsUsername field.
func (o *MigrationsUpdateImportRequest) SetVcsUsername(v string) {
	o.VcsUsername = &v
}

// GetVcsPassword returns the VcsPassword field value if set, zero value otherwise.
func (o *MigrationsUpdateImportRequest) GetVcsPassword() string {
	if o == nil || o.VcsPassword == nil {
		var ret string
		return ret
	}
	return *o.VcsPassword
}

// GetVcsPasswordOk returns a tuple with the VcsPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsUpdateImportRequest) GetVcsPasswordOk() (*string, bool) {
	if o == nil || o.VcsPassword == nil {
		return nil, false
	}
	return o.VcsPassword, true
}

// HasVcsPassword returns a boolean if a field has been set.
func (o *MigrationsUpdateImportRequest) HasVcsPassword() bool {
	if o != nil && o.VcsPassword != nil {
		return true
	}

	return false
}

// SetVcsPassword gets a reference to the given string and assigns it to the VcsPassword field.
func (o *MigrationsUpdateImportRequest) SetVcsPassword(v string) {
	o.VcsPassword = &v
}

// GetVcs returns the Vcs field value if set, zero value otherwise.
func (o *MigrationsUpdateImportRequest) GetVcs() string {
	if o == nil || o.Vcs == nil {
		var ret string
		return ret
	}
	return *o.Vcs
}

// GetVcsOk returns a tuple with the Vcs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsUpdateImportRequest) GetVcsOk() (*string, bool) {
	if o == nil || o.Vcs == nil {
		return nil, false
	}
	return o.Vcs, true
}

// HasVcs returns a boolean if a field has been set.
func (o *MigrationsUpdateImportRequest) HasVcs() bool {
	if o != nil && o.Vcs != nil {
		return true
	}

	return false
}

// SetVcs gets a reference to the given string and assigns it to the Vcs field.
func (o *MigrationsUpdateImportRequest) SetVcs(v string) {
	o.Vcs = &v
}

// GetTfvcProject returns the TfvcProject field value if set, zero value otherwise.
func (o *MigrationsUpdateImportRequest) GetTfvcProject() string {
	if o == nil || o.TfvcProject == nil {
		var ret string
		return ret
	}
	return *o.TfvcProject
}

// GetTfvcProjectOk returns a tuple with the TfvcProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsUpdateImportRequest) GetTfvcProjectOk() (*string, bool) {
	if o == nil || o.TfvcProject == nil {
		return nil, false
	}
	return o.TfvcProject, true
}

// HasTfvcProject returns a boolean if a field has been set.
func (o *MigrationsUpdateImportRequest) HasTfvcProject() bool {
	if o != nil && o.TfvcProject != nil {
		return true
	}

	return false
}

// SetTfvcProject gets a reference to the given string and assigns it to the TfvcProject field.
func (o *MigrationsUpdateImportRequest) SetTfvcProject(v string) {
	o.TfvcProject = &v
}

func (o MigrationsUpdateImportRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.VcsUsername != nil {
		toSerialize["vcs_username"] = o.VcsUsername
	}
	if o.VcsPassword != nil {
		toSerialize["vcs_password"] = o.VcsPassword
	}
	if o.Vcs != nil {
		toSerialize["vcs"] = o.Vcs
	}
	if o.TfvcProject != nil {
		toSerialize["tfvc_project"] = o.TfvcProject
	}
	return json.Marshal(toSerialize)
}

type NullableMigrationsUpdateImportRequest struct {
	value *MigrationsUpdateImportRequest
	isSet bool
}

func (v NullableMigrationsUpdateImportRequest) Get() *MigrationsUpdateImportRequest {
	return v.value
}

func (v *NullableMigrationsUpdateImportRequest) Set(val *MigrationsUpdateImportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationsUpdateImportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationsUpdateImportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationsUpdateImportRequest(val *MigrationsUpdateImportRequest) *NullableMigrationsUpdateImportRequest {
	return &NullableMigrationsUpdateImportRequest{value: val, isSet: true}
}

func (v NullableMigrationsUpdateImportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationsUpdateImportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


