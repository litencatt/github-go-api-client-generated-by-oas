/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ContainerMetadata struct for ContainerMetadata
type ContainerMetadata struct {
	Tags []string `json:"tags"`
}

// NewContainerMetadata instantiates a new ContainerMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerMetadata(tags []string) *ContainerMetadata {
	this := ContainerMetadata{}
	this.Tags = tags
	return &this
}

// NewContainerMetadataWithDefaults instantiates a new ContainerMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerMetadataWithDefaults() *ContainerMetadata {
	this := ContainerMetadata{}
	return &this
}

// GetTags returns the Tags field value
func (o *ContainerMetadata) GetTags() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value
// and a boolean to check if the value has been set.
func (o *ContainerMetadata) GetTagsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Tags, true
}

// SetTags sets field value
func (o *ContainerMetadata) SetTags(v []string) {
	o.Tags = v
}

func (o ContainerMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["tags"] = o.Tags
	}
	return json.Marshal(toSerialize)
}

type NullableContainerMetadata struct {
	value *ContainerMetadata
	isSet bool
}

func (v NullableContainerMetadata) Get() *ContainerMetadata {
	return v.value
}

func (v *NullableContainerMetadata) Set(val *ContainerMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerMetadata(val *ContainerMetadata) *NullableContainerMetadata {
	return &NullableContainerMetadata{value: val, isSet: true}
}

func (v NullableContainerMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


