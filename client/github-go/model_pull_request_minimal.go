/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PullRequestMinimal struct for PullRequestMinimal
type PullRequestMinimal struct {
	Id int32 `json:"id"`
	Number int32 `json:"number"`
	Url string `json:"url"`
	Head PullRequestMinimalHead `json:"head"`
	Base PullRequestMinimalHead `json:"base"`
}

// NewPullRequestMinimal instantiates a new PullRequestMinimal object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestMinimal(id int32, number int32, url string, head PullRequestMinimalHead, base PullRequestMinimalHead) *PullRequestMinimal {
	this := PullRequestMinimal{}
	this.Id = id
	this.Number = number
	this.Url = url
	this.Head = head
	this.Base = base
	return &this
}

// NewPullRequestMinimalWithDefaults instantiates a new PullRequestMinimal object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestMinimalWithDefaults() *PullRequestMinimal {
	this := PullRequestMinimal{}
	return &this
}

// GetId returns the Id field value
func (o *PullRequestMinimal) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PullRequestMinimal) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PullRequestMinimal) SetId(v int32) {
	o.Id = v
}

// GetNumber returns the Number field value
func (o *PullRequestMinimal) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *PullRequestMinimal) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *PullRequestMinimal) SetNumber(v int32) {
	o.Number = v
}

// GetUrl returns the Url field value
func (o *PullRequestMinimal) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PullRequestMinimal) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PullRequestMinimal) SetUrl(v string) {
	o.Url = v
}

// GetHead returns the Head field value
func (o *PullRequestMinimal) GetHead() PullRequestMinimalHead {
	if o == nil {
		var ret PullRequestMinimalHead
		return ret
	}

	return o.Head
}

// GetHeadOk returns a tuple with the Head field value
// and a boolean to check if the value has been set.
func (o *PullRequestMinimal) GetHeadOk() (*PullRequestMinimalHead, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Head, true
}

// SetHead sets field value
func (o *PullRequestMinimal) SetHead(v PullRequestMinimalHead) {
	o.Head = v
}

// GetBase returns the Base field value
func (o *PullRequestMinimal) GetBase() PullRequestMinimalHead {
	if o == nil {
		var ret PullRequestMinimalHead
		return ret
	}

	return o.Base
}

// GetBaseOk returns a tuple with the Base field value
// and a boolean to check if the value has been set.
func (o *PullRequestMinimal) GetBaseOk() (*PullRequestMinimalHead, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Base, true
}

// SetBase sets field value
func (o *PullRequestMinimal) SetBase(v PullRequestMinimalHead) {
	o.Base = v
}

func (o PullRequestMinimal) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["head"] = o.Head
	}
	if true {
		toSerialize["base"] = o.Base
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestMinimal struct {
	value *PullRequestMinimal
	isSet bool
}

func (v NullablePullRequestMinimal) Get() *PullRequestMinimal {
	return v.value
}

func (v *NullablePullRequestMinimal) Set(val *PullRequestMinimal) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestMinimal) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestMinimal) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestMinimal(val *PullRequestMinimal) *NullablePullRequestMinimal {
	return &NullablePullRequestMinimal{value: val, isSet: true}
}

func (v NullablePullRequestMinimal) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestMinimal) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


