/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GitCommitParentsInner struct for GitCommitParentsInner
type GitCommitParentsInner struct {
	// SHA for the commit
	Sha string `json:"sha"`
	Url string `json:"url"`
	HtmlUrl string `json:"html_url"`
}

// NewGitCommitParentsInner instantiates a new GitCommitParentsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitCommitParentsInner(sha string, url string, htmlUrl string) *GitCommitParentsInner {
	this := GitCommitParentsInner{}
	this.Sha = sha
	this.Url = url
	this.HtmlUrl = htmlUrl
	return &this
}

// NewGitCommitParentsInnerWithDefaults instantiates a new GitCommitParentsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitCommitParentsInnerWithDefaults() *GitCommitParentsInner {
	this := GitCommitParentsInner{}
	return &this
}

// GetSha returns the Sha field value
func (o *GitCommitParentsInner) GetSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sha
}

// GetShaOk returns a tuple with the Sha field value
// and a boolean to check if the value has been set.
func (o *GitCommitParentsInner) GetShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sha, true
}

// SetSha sets field value
func (o *GitCommitParentsInner) SetSha(v string) {
	o.Sha = v
}

// GetUrl returns the Url field value
func (o *GitCommitParentsInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *GitCommitParentsInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *GitCommitParentsInner) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *GitCommitParentsInner) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *GitCommitParentsInner) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *GitCommitParentsInner) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

func (o GitCommitParentsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["sha"] = o.Sha
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	return json.Marshal(toSerialize)
}

type NullableGitCommitParentsInner struct {
	value *GitCommitParentsInner
	isSet bool
}

func (v NullableGitCommitParentsInner) Get() *GitCommitParentsInner {
	return v.value
}

func (v *NullableGitCommitParentsInner) Set(val *GitCommitParentsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGitCommitParentsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGitCommitParentsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitCommitParentsInner(val *GitCommitParentsInner) *NullableGitCommitParentsInner {
	return &NullableGitCommitParentsInner{value: val, isSet: true}
}

func (v NullableGitCommitParentsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitCommitParentsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


