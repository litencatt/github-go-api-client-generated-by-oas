/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ContributorActivity Contributor Activity
type ContributorActivity struct {
	Author NullableNullableSimpleUser `json:"author"`
	Total int32 `json:"total"`
	Weeks []ContributorActivityWeeksInner `json:"weeks"`
}

// NewContributorActivity instantiates a new ContributorActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContributorActivity(author NullableNullableSimpleUser, total int32, weeks []ContributorActivityWeeksInner) *ContributorActivity {
	this := ContributorActivity{}
	this.Author = author
	this.Total = total
	this.Weeks = weeks
	return &this
}

// NewContributorActivityWithDefaults instantiates a new ContributorActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContributorActivityWithDefaults() *ContributorActivity {
	this := ContributorActivity{}
	return &this
}

// GetAuthor returns the Author field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *ContributorActivity) GetAuthor() NullableSimpleUser {
	if o == nil || o.Author.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.Author.Get()
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContributorActivity) GetAuthorOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Author.Get(), o.Author.IsSet()
}

// SetAuthor sets field value
func (o *ContributorActivity) SetAuthor(v NullableSimpleUser) {
	o.Author.Set(&v)
}

// GetTotal returns the Total field value
func (o *ContributorActivity) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *ContributorActivity) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *ContributorActivity) SetTotal(v int32) {
	o.Total = v
}

// GetWeeks returns the Weeks field value
func (o *ContributorActivity) GetWeeks() []ContributorActivityWeeksInner {
	if o == nil {
		var ret []ContributorActivityWeeksInner
		return ret
	}

	return o.Weeks
}

// GetWeeksOk returns a tuple with the Weeks field value
// and a boolean to check if the value has been set.
func (o *ContributorActivity) GetWeeksOk() ([]ContributorActivityWeeksInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Weeks, true
}

// SetWeeks sets field value
func (o *ContributorActivity) SetWeeks(v []ContributorActivityWeeksInner) {
	o.Weeks = v
}

func (o ContributorActivity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["author"] = o.Author.Get()
	}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["weeks"] = o.Weeks
	}
	return json.Marshal(toSerialize)
}

type NullableContributorActivity struct {
	value *ContributorActivity
	isSet bool
}

func (v NullableContributorActivity) Get() *ContributorActivity {
	return v.value
}

func (v *NullableContributorActivity) Set(val *ContributorActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableContributorActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableContributorActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContributorActivity(val *ContributorActivity) *NullableContributorActivity {
	return &NullableContributorActivity{value: val, isSet: true}
}

func (v NullableContributorActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContributorActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


