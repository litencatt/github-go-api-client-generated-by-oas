/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// ActionsCacheListActionsCachesInner struct for ActionsCacheListActionsCachesInner
type ActionsCacheListActionsCachesInner struct {
	Id *int32 `json:"id,omitempty"`
	Ref *string `json:"ref,omitempty"`
	Key *string `json:"key,omitempty"`
	Version *string `json:"version,omitempty"`
	LastAccessedAt *time.Time `json:"last_accessed_at,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	SizeInBytes *int32 `json:"size_in_bytes,omitempty"`
}

// NewActionsCacheListActionsCachesInner instantiates a new ActionsCacheListActionsCachesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsCacheListActionsCachesInner() *ActionsCacheListActionsCachesInner {
	this := ActionsCacheListActionsCachesInner{}
	return &this
}

// NewActionsCacheListActionsCachesInnerWithDefaults instantiates a new ActionsCacheListActionsCachesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsCacheListActionsCachesInnerWithDefaults() *ActionsCacheListActionsCachesInner {
	this := ActionsCacheListActionsCachesInner{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActionsCacheListActionsCachesInner) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsCacheListActionsCachesInner) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActionsCacheListActionsCachesInner) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ActionsCacheListActionsCachesInner) SetId(v int32) {
	o.Id = &v
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *ActionsCacheListActionsCachesInner) GetRef() string {
	if o == nil || o.Ref == nil {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsCacheListActionsCachesInner) GetRefOk() (*string, bool) {
	if o == nil || o.Ref == nil {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *ActionsCacheListActionsCachesInner) HasRef() bool {
	if o != nil && o.Ref != nil {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *ActionsCacheListActionsCachesInner) SetRef(v string) {
	o.Ref = &v
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ActionsCacheListActionsCachesInner) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsCacheListActionsCachesInner) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ActionsCacheListActionsCachesInner) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ActionsCacheListActionsCachesInner) SetKey(v string) {
	o.Key = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *ActionsCacheListActionsCachesInner) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsCacheListActionsCachesInner) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *ActionsCacheListActionsCachesInner) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *ActionsCacheListActionsCachesInner) SetVersion(v string) {
	o.Version = &v
}

// GetLastAccessedAt returns the LastAccessedAt field value if set, zero value otherwise.
func (o *ActionsCacheListActionsCachesInner) GetLastAccessedAt() time.Time {
	if o == nil || o.LastAccessedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastAccessedAt
}

// GetLastAccessedAtOk returns a tuple with the LastAccessedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsCacheListActionsCachesInner) GetLastAccessedAtOk() (*time.Time, bool) {
	if o == nil || o.LastAccessedAt == nil {
		return nil, false
	}
	return o.LastAccessedAt, true
}

// HasLastAccessedAt returns a boolean if a field has been set.
func (o *ActionsCacheListActionsCachesInner) HasLastAccessedAt() bool {
	if o != nil && o.LastAccessedAt != nil {
		return true
	}

	return false
}

// SetLastAccessedAt gets a reference to the given time.Time and assigns it to the LastAccessedAt field.
func (o *ActionsCacheListActionsCachesInner) SetLastAccessedAt(v time.Time) {
	o.LastAccessedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ActionsCacheListActionsCachesInner) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsCacheListActionsCachesInner) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ActionsCacheListActionsCachesInner) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *ActionsCacheListActionsCachesInner) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetSizeInBytes returns the SizeInBytes field value if set, zero value otherwise.
func (o *ActionsCacheListActionsCachesInner) GetSizeInBytes() int32 {
	if o == nil || o.SizeInBytes == nil {
		var ret int32
		return ret
	}
	return *o.SizeInBytes
}

// GetSizeInBytesOk returns a tuple with the SizeInBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsCacheListActionsCachesInner) GetSizeInBytesOk() (*int32, bool) {
	if o == nil || o.SizeInBytes == nil {
		return nil, false
	}
	return o.SizeInBytes, true
}

// HasSizeInBytes returns a boolean if a field has been set.
func (o *ActionsCacheListActionsCachesInner) HasSizeInBytes() bool {
	if o != nil && o.SizeInBytes != nil {
		return true
	}

	return false
}

// SetSizeInBytes gets a reference to the given int32 and assigns it to the SizeInBytes field.
func (o *ActionsCacheListActionsCachesInner) SetSizeInBytes(v int32) {
	o.SizeInBytes = &v
}

func (o ActionsCacheListActionsCachesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Ref != nil {
		toSerialize["ref"] = o.Ref
	}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.LastAccessedAt != nil {
		toSerialize["last_accessed_at"] = o.LastAccessedAt
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.SizeInBytes != nil {
		toSerialize["size_in_bytes"] = o.SizeInBytes
	}
	return json.Marshal(toSerialize)
}

type NullableActionsCacheListActionsCachesInner struct {
	value *ActionsCacheListActionsCachesInner
	isSet bool
}

func (v NullableActionsCacheListActionsCachesInner) Get() *ActionsCacheListActionsCachesInner {
	return v.value
}

func (v *NullableActionsCacheListActionsCachesInner) Set(val *ActionsCacheListActionsCachesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsCacheListActionsCachesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsCacheListActionsCachesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsCacheListActionsCachesInner(val *ActionsCacheListActionsCachesInner) *NullableActionsCacheListActionsCachesInner {
	return &NullableActionsCacheListActionsCachesInner{value: val, isSet: true}
}

func (v NullableActionsCacheListActionsCachesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsCacheListActionsCachesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


