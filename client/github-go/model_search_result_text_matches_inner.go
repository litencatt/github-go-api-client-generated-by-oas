/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// SearchResultTextMatchesInner struct for SearchResultTextMatchesInner
type SearchResultTextMatchesInner struct {
	ObjectUrl *string `json:"object_url,omitempty"`
	ObjectType NullableString `json:"object_type,omitempty"`
	Property *string `json:"property,omitempty"`
	Fragment *string `json:"fragment,omitempty"`
	Matches []SearchResultTextMatchesInnerMatchesInner `json:"matches,omitempty"`
}

// NewSearchResultTextMatchesInner instantiates a new SearchResultTextMatchesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchResultTextMatchesInner() *SearchResultTextMatchesInner {
	this := SearchResultTextMatchesInner{}
	return &this
}

// NewSearchResultTextMatchesInnerWithDefaults instantiates a new SearchResultTextMatchesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchResultTextMatchesInnerWithDefaults() *SearchResultTextMatchesInner {
	this := SearchResultTextMatchesInner{}
	return &this
}

// GetObjectUrl returns the ObjectUrl field value if set, zero value otherwise.
func (o *SearchResultTextMatchesInner) GetObjectUrl() string {
	if o == nil || o.ObjectUrl == nil {
		var ret string
		return ret
	}
	return *o.ObjectUrl
}

// GetObjectUrlOk returns a tuple with the ObjectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResultTextMatchesInner) GetObjectUrlOk() (*string, bool) {
	if o == nil || o.ObjectUrl == nil {
		return nil, false
	}
	return o.ObjectUrl, true
}

// HasObjectUrl returns a boolean if a field has been set.
func (o *SearchResultTextMatchesInner) HasObjectUrl() bool {
	if o != nil && o.ObjectUrl != nil {
		return true
	}

	return false
}

// SetObjectUrl gets a reference to the given string and assigns it to the ObjectUrl field.
func (o *SearchResultTextMatchesInner) SetObjectUrl(v string) {
	o.ObjectUrl = &v
}

// GetObjectType returns the ObjectType field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SearchResultTextMatchesInner) GetObjectType() string {
	if o == nil || o.ObjectType.Get() == nil {
		var ret string
		return ret
	}
	return *o.ObjectType.Get()
}

// GetObjectTypeOk returns a tuple with the ObjectType field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SearchResultTextMatchesInner) GetObjectTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ObjectType.Get(), o.ObjectType.IsSet()
}

// HasObjectType returns a boolean if a field has been set.
func (o *SearchResultTextMatchesInner) HasObjectType() bool {
	if o != nil && o.ObjectType.IsSet() {
		return true
	}

	return false
}

// SetObjectType gets a reference to the given NullableString and assigns it to the ObjectType field.
func (o *SearchResultTextMatchesInner) SetObjectType(v string) {
	o.ObjectType.Set(&v)
}
// SetObjectTypeNil sets the value for ObjectType to be an explicit nil
func (o *SearchResultTextMatchesInner) SetObjectTypeNil() {
	o.ObjectType.Set(nil)
}

// UnsetObjectType ensures that no value is present for ObjectType, not even an explicit nil
func (o *SearchResultTextMatchesInner) UnsetObjectType() {
	o.ObjectType.Unset()
}

// GetProperty returns the Property field value if set, zero value otherwise.
func (o *SearchResultTextMatchesInner) GetProperty() string {
	if o == nil || o.Property == nil {
		var ret string
		return ret
	}
	return *o.Property
}

// GetPropertyOk returns a tuple with the Property field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResultTextMatchesInner) GetPropertyOk() (*string, bool) {
	if o == nil || o.Property == nil {
		return nil, false
	}
	return o.Property, true
}

// HasProperty returns a boolean if a field has been set.
func (o *SearchResultTextMatchesInner) HasProperty() bool {
	if o != nil && o.Property != nil {
		return true
	}

	return false
}

// SetProperty gets a reference to the given string and assigns it to the Property field.
func (o *SearchResultTextMatchesInner) SetProperty(v string) {
	o.Property = &v
}

// GetFragment returns the Fragment field value if set, zero value otherwise.
func (o *SearchResultTextMatchesInner) GetFragment() string {
	if o == nil || o.Fragment == nil {
		var ret string
		return ret
	}
	return *o.Fragment
}

// GetFragmentOk returns a tuple with the Fragment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResultTextMatchesInner) GetFragmentOk() (*string, bool) {
	if o == nil || o.Fragment == nil {
		return nil, false
	}
	return o.Fragment, true
}

// HasFragment returns a boolean if a field has been set.
func (o *SearchResultTextMatchesInner) HasFragment() bool {
	if o != nil && o.Fragment != nil {
		return true
	}

	return false
}

// SetFragment gets a reference to the given string and assigns it to the Fragment field.
func (o *SearchResultTextMatchesInner) SetFragment(v string) {
	o.Fragment = &v
}

// GetMatches returns the Matches field value if set, zero value otherwise.
func (o *SearchResultTextMatchesInner) GetMatches() []SearchResultTextMatchesInnerMatchesInner {
	if o == nil || o.Matches == nil {
		var ret []SearchResultTextMatchesInnerMatchesInner
		return ret
	}
	return o.Matches
}

// GetMatchesOk returns a tuple with the Matches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchResultTextMatchesInner) GetMatchesOk() ([]SearchResultTextMatchesInnerMatchesInner, bool) {
	if o == nil || o.Matches == nil {
		return nil, false
	}
	return o.Matches, true
}

// HasMatches returns a boolean if a field has been set.
func (o *SearchResultTextMatchesInner) HasMatches() bool {
	if o != nil && o.Matches != nil {
		return true
	}

	return false
}

// SetMatches gets a reference to the given []SearchResultTextMatchesInnerMatchesInner and assigns it to the Matches field.
func (o *SearchResultTextMatchesInner) SetMatches(v []SearchResultTextMatchesInnerMatchesInner) {
	o.Matches = v
}

func (o SearchResultTextMatchesInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ObjectUrl != nil {
		toSerialize["object_url"] = o.ObjectUrl
	}
	if o.ObjectType.IsSet() {
		toSerialize["object_type"] = o.ObjectType.Get()
	}
	if o.Property != nil {
		toSerialize["property"] = o.Property
	}
	if o.Fragment != nil {
		toSerialize["fragment"] = o.Fragment
	}
	if o.Matches != nil {
		toSerialize["matches"] = o.Matches
	}
	return json.Marshal(toSerialize)
}

type NullableSearchResultTextMatchesInner struct {
	value *SearchResultTextMatchesInner
	isSet bool
}

func (v NullableSearchResultTextMatchesInner) Get() *SearchResultTextMatchesInner {
	return v.value
}

func (v *NullableSearchResultTextMatchesInner) Set(val *SearchResultTextMatchesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchResultTextMatchesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchResultTextMatchesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchResultTextMatchesInner(val *SearchResultTextMatchesInner) *NullableSearchResultTextMatchesInner {
	return &NullableSearchResultTextMatchesInner{value: val, isSet: true}
}

func (v NullableSearchResultTextMatchesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchResultTextMatchesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


