/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// EnterpriseAdminUpdateAttributeForEnterpriseUserRequest struct for EnterpriseAdminUpdateAttributeForEnterpriseUserRequest
type EnterpriseAdminUpdateAttributeForEnterpriseUserRequest struct {
	// The SCIM schema URIs.
	Schemas []string `json:"schemas"`
	// Array of [SCIM operations](https://tools.ietf.org/html/rfc7644#section-3.5.2).
	Operations []map[string]interface{} `json:"Operations"`
}

// NewEnterpriseAdminUpdateAttributeForEnterpriseUserRequest instantiates a new EnterpriseAdminUpdateAttributeForEnterpriseUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseAdminUpdateAttributeForEnterpriseUserRequest(schemas []string, operations []map[string]interface{}) *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest {
	this := EnterpriseAdminUpdateAttributeForEnterpriseUserRequest{}
	this.Schemas = schemas
	this.Operations = operations
	return &this
}

// NewEnterpriseAdminUpdateAttributeForEnterpriseUserRequestWithDefaults instantiates a new EnterpriseAdminUpdateAttributeForEnterpriseUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseAdminUpdateAttributeForEnterpriseUserRequestWithDefaults() *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest {
	this := EnterpriseAdminUpdateAttributeForEnterpriseUserRequest{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) GetSchemas() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) GetSchemasOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) SetSchemas(v []string) {
	o.Schemas = v
}

// GetOperations returns the Operations field value
func (o *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) GetOperations() []map[string]interface{} {
	if o == nil {
		var ret []map[string]interface{}
		return ret
	}

	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) GetOperationsOk() ([]map[string]interface{}, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operations, true
}

// SetOperations sets field value
func (o *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) SetOperations(v []map[string]interface{}) {
	o.Operations = v
}

func (o EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["Operations"] = o.Operations
	}
	return json.Marshal(toSerialize)
}

type NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest struct {
	value *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest
	isSet bool
}

func (v NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest) Get() *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest {
	return v.value
}

func (v *NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest) Set(val *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest(val *EnterpriseAdminUpdateAttributeForEnterpriseUserRequest) *NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest {
	return &NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest{value: val, isSet: true}
}

func (v NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseAdminUpdateAttributeForEnterpriseUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


