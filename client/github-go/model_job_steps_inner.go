/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// JobStepsInner struct for JobStepsInner
type JobStepsInner struct {
	// The phase of the lifecycle that the job is currently in.
	Status string `json:"status"`
	// The outcome of the job.
	Conclusion NullableString `json:"conclusion"`
	// The name of the job.
	Name string `json:"name"`
	Number int32 `json:"number"`
	// The time that the step started, in ISO 8601 format.
	StartedAt NullableTime `json:"started_at,omitempty"`
	// The time that the job finished, in ISO 8601 format.
	CompletedAt NullableTime `json:"completed_at,omitempty"`
}

// NewJobStepsInner instantiates a new JobStepsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobStepsInner(status string, conclusion NullableString, name string, number int32) *JobStepsInner {
	this := JobStepsInner{}
	this.Status = status
	this.Conclusion = conclusion
	this.Name = name
	this.Number = number
	return &this
}

// NewJobStepsInnerWithDefaults instantiates a new JobStepsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobStepsInnerWithDefaults() *JobStepsInner {
	this := JobStepsInner{}
	return &this
}

// GetStatus returns the Status field value
func (o *JobStepsInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *JobStepsInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *JobStepsInner) SetStatus(v string) {
	o.Status = v
}

// GetConclusion returns the Conclusion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *JobStepsInner) GetConclusion() string {
	if o == nil || o.Conclusion.Get() == nil {
		var ret string
		return ret
	}

	return *o.Conclusion.Get()
}

// GetConclusionOk returns a tuple with the Conclusion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobStepsInner) GetConclusionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conclusion.Get(), o.Conclusion.IsSet()
}

// SetConclusion sets field value
func (o *JobStepsInner) SetConclusion(v string) {
	o.Conclusion.Set(&v)
}

// GetName returns the Name field value
func (o *JobStepsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *JobStepsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *JobStepsInner) SetName(v string) {
	o.Name = v
}

// GetNumber returns the Number field value
func (o *JobStepsInner) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *JobStepsInner) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *JobStepsInner) SetNumber(v int32) {
	o.Number = v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobStepsInner) GetStartedAt() time.Time {
	if o == nil || o.StartedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobStepsInner) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// HasStartedAt returns a boolean if a field has been set.
func (o *JobStepsInner) HasStartedAt() bool {
	if o != nil && o.StartedAt.IsSet() {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given NullableTime and assigns it to the StartedAt field.
func (o *JobStepsInner) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}
// SetStartedAtNil sets the value for StartedAt to be an explicit nil
func (o *JobStepsInner) SetStartedAtNil() {
	o.StartedAt.Set(nil)
}

// UnsetStartedAt ensures that no value is present for StartedAt, not even an explicit nil
func (o *JobStepsInner) UnsetStartedAt() {
	o.StartedAt.Unset()
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *JobStepsInner) GetCompletedAt() time.Time {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *JobStepsInner) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *JobStepsInner) HasCompletedAt() bool {
	if o != nil && o.CompletedAt.IsSet() {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given NullableTime and assigns it to the CompletedAt field.
func (o *JobStepsInner) SetCompletedAt(v time.Time) {
	o.CompletedAt.Set(&v)
}
// SetCompletedAtNil sets the value for CompletedAt to be an explicit nil
func (o *JobStepsInner) SetCompletedAtNil() {
	o.CompletedAt.Set(nil)
}

// UnsetCompletedAt ensures that no value is present for CompletedAt, not even an explicit nil
func (o *JobStepsInner) UnsetCompletedAt() {
	o.CompletedAt.Unset()
}

func (o JobStepsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["conclusion"] = o.Conclusion.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["number"] = o.Number
	}
	if o.StartedAt.IsSet() {
		toSerialize["started_at"] = o.StartedAt.Get()
	}
	if o.CompletedAt.IsSet() {
		toSerialize["completed_at"] = o.CompletedAt.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableJobStepsInner struct {
	value *JobStepsInner
	isSet bool
}

func (v NullableJobStepsInner) Get() *JobStepsInner {
	return v.value
}

func (v *NullableJobStepsInner) Set(val *JobStepsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableJobStepsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableJobStepsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobStepsInner(val *JobStepsInner) *NullableJobStepsInner {
	return &NullableJobStepsInner{value: val, isSet: true}
}

func (v NullableJobStepsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobStepsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


