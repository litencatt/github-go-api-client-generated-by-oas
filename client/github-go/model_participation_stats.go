/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ParticipationStats struct for ParticipationStats
type ParticipationStats struct {
	All []int32 `json:"all"`
	Owner []int32 `json:"owner"`
}

// NewParticipationStats instantiates a new ParticipationStats object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParticipationStats(all []int32, owner []int32) *ParticipationStats {
	this := ParticipationStats{}
	this.All = all
	this.Owner = owner
	return &this
}

// NewParticipationStatsWithDefaults instantiates a new ParticipationStats object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParticipationStatsWithDefaults() *ParticipationStats {
	this := ParticipationStats{}
	return &this
}

// GetAll returns the All field value
func (o *ParticipationStats) GetAll() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.All
}

// GetAllOk returns a tuple with the All field value
// and a boolean to check if the value has been set.
func (o *ParticipationStats) GetAllOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.All, true
}

// SetAll sets field value
func (o *ParticipationStats) SetAll(v []int32) {
	o.All = v
}

// GetOwner returns the Owner field value
func (o *ParticipationStats) GetOwner() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *ParticipationStats) GetOwnerOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Owner, true
}

// SetOwner sets field value
func (o *ParticipationStats) SetOwner(v []int32) {
	o.Owner = v
}

func (o ParticipationStats) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["all"] = o.All
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	return json.Marshal(toSerialize)
}

type NullableParticipationStats struct {
	value *ParticipationStats
	isSet bool
}

func (v NullableParticipationStats) Get() *ParticipationStats {
	return v.value
}

func (v *NullableParticipationStats) Set(val *ParticipationStats) {
	v.value = val
	v.isSet = true
}

func (v NullableParticipationStats) IsSet() bool {
	return v.isSet
}

func (v *NullableParticipationStats) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParticipationStats(val *ParticipationStats) *NullableParticipationStats {
	return &NullableParticipationStats{value: val, isSet: true}
}

func (v NullableParticipationStats) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParticipationStats) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


