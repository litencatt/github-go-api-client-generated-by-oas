/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ExternalGroups A list of external groups available to be connected to a team
type ExternalGroups struct {
	// An array of external groups available to be mapped to a team
	Groups []ExternalGroupsGroupsInner `json:"groups,omitempty"`
}

// NewExternalGroups instantiates a new ExternalGroups object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalGroups() *ExternalGroups {
	this := ExternalGroups{}
	return &this
}

// NewExternalGroupsWithDefaults instantiates a new ExternalGroups object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalGroupsWithDefaults() *ExternalGroups {
	this := ExternalGroups{}
	return &this
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *ExternalGroups) GetGroups() []ExternalGroupsGroupsInner {
	if o == nil || o.Groups == nil {
		var ret []ExternalGroupsGroupsInner
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGroups) GetGroupsOk() ([]ExternalGroupsGroupsInner, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *ExternalGroups) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []ExternalGroupsGroupsInner and assigns it to the Groups field.
func (o *ExternalGroups) SetGroups(v []ExternalGroupsGroupsInner) {
	o.Groups = v
}

func (o ExternalGroups) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	return json.Marshal(toSerialize)
}

type NullableExternalGroups struct {
	value *ExternalGroups
	isSet bool
}

func (v NullableExternalGroups) Get() *ExternalGroups {
	return v.value
}

func (v *NullableExternalGroups) Set(val *ExternalGroups) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalGroups) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalGroups) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalGroups(val *ExternalGroups) *NullableExternalGroups {
	return &NullableExternalGroups{value: val, isSet: true}
}

func (v NullableExternalGroups) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalGroups) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


