/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposUpdatePullRequestReviewProtectionRequest struct for ReposUpdatePullRequestReviewProtectionRequest
type ReposUpdatePullRequestReviewProtectionRequest struct {
	DismissalRestrictions *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions `json:"dismissal_restrictions,omitempty"`
	// Set to `true` if you want to automatically dismiss approving reviews when someone pushes a new commit.
	DismissStaleReviews *bool `json:"dismiss_stale_reviews,omitempty"`
	// Blocks merging pull requests until [code owners](https://docs.github.com/articles/about-code-owners/) have reviewed.
	RequireCodeOwnerReviews *bool `json:"require_code_owner_reviews,omitempty"`
	// Specifies the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.
	RequiredApprovingReviewCount *int32 `json:"required_approving_review_count,omitempty"`
	BypassPullRequestAllowances *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances `json:"bypass_pull_request_allowances,omitempty"`
}

// NewReposUpdatePullRequestReviewProtectionRequest instantiates a new ReposUpdatePullRequestReviewProtectionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposUpdatePullRequestReviewProtectionRequest() *ReposUpdatePullRequestReviewProtectionRequest {
	this := ReposUpdatePullRequestReviewProtectionRequest{}
	return &this
}

// NewReposUpdatePullRequestReviewProtectionRequestWithDefaults instantiates a new ReposUpdatePullRequestReviewProtectionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposUpdatePullRequestReviewProtectionRequestWithDefaults() *ReposUpdatePullRequestReviewProtectionRequest {
	this := ReposUpdatePullRequestReviewProtectionRequest{}
	return &this
}

// GetDismissalRestrictions returns the DismissalRestrictions field value if set, zero value otherwise.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetDismissalRestrictions() ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions {
	if o == nil || o.DismissalRestrictions == nil {
		var ret ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions
		return ret
	}
	return *o.DismissalRestrictions
}

// GetDismissalRestrictionsOk returns a tuple with the DismissalRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetDismissalRestrictionsOk() (*ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions, bool) {
	if o == nil || o.DismissalRestrictions == nil {
		return nil, false
	}
	return o.DismissalRestrictions, true
}

// HasDismissalRestrictions returns a boolean if a field has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) HasDismissalRestrictions() bool {
	if o != nil && o.DismissalRestrictions != nil {
		return true
	}

	return false
}

// SetDismissalRestrictions gets a reference to the given ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions and assigns it to the DismissalRestrictions field.
func (o *ReposUpdatePullRequestReviewProtectionRequest) SetDismissalRestrictions(v ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsDismissalRestrictions) {
	o.DismissalRestrictions = &v
}

// GetDismissStaleReviews returns the DismissStaleReviews field value if set, zero value otherwise.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetDismissStaleReviews() bool {
	if o == nil || o.DismissStaleReviews == nil {
		var ret bool
		return ret
	}
	return *o.DismissStaleReviews
}

// GetDismissStaleReviewsOk returns a tuple with the DismissStaleReviews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetDismissStaleReviewsOk() (*bool, bool) {
	if o == nil || o.DismissStaleReviews == nil {
		return nil, false
	}
	return o.DismissStaleReviews, true
}

// HasDismissStaleReviews returns a boolean if a field has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) HasDismissStaleReviews() bool {
	if o != nil && o.DismissStaleReviews != nil {
		return true
	}

	return false
}

// SetDismissStaleReviews gets a reference to the given bool and assigns it to the DismissStaleReviews field.
func (o *ReposUpdatePullRequestReviewProtectionRequest) SetDismissStaleReviews(v bool) {
	o.DismissStaleReviews = &v
}

// GetRequireCodeOwnerReviews returns the RequireCodeOwnerReviews field value if set, zero value otherwise.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetRequireCodeOwnerReviews() bool {
	if o == nil || o.RequireCodeOwnerReviews == nil {
		var ret bool
		return ret
	}
	return *o.RequireCodeOwnerReviews
}

// GetRequireCodeOwnerReviewsOk returns a tuple with the RequireCodeOwnerReviews field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetRequireCodeOwnerReviewsOk() (*bool, bool) {
	if o == nil || o.RequireCodeOwnerReviews == nil {
		return nil, false
	}
	return o.RequireCodeOwnerReviews, true
}

// HasRequireCodeOwnerReviews returns a boolean if a field has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) HasRequireCodeOwnerReviews() bool {
	if o != nil && o.RequireCodeOwnerReviews != nil {
		return true
	}

	return false
}

// SetRequireCodeOwnerReviews gets a reference to the given bool and assigns it to the RequireCodeOwnerReviews field.
func (o *ReposUpdatePullRequestReviewProtectionRequest) SetRequireCodeOwnerReviews(v bool) {
	o.RequireCodeOwnerReviews = &v
}

// GetRequiredApprovingReviewCount returns the RequiredApprovingReviewCount field value if set, zero value otherwise.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetRequiredApprovingReviewCount() int32 {
	if o == nil || o.RequiredApprovingReviewCount == nil {
		var ret int32
		return ret
	}
	return *o.RequiredApprovingReviewCount
}

// GetRequiredApprovingReviewCountOk returns a tuple with the RequiredApprovingReviewCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetRequiredApprovingReviewCountOk() (*int32, bool) {
	if o == nil || o.RequiredApprovingReviewCount == nil {
		return nil, false
	}
	return o.RequiredApprovingReviewCount, true
}

// HasRequiredApprovingReviewCount returns a boolean if a field has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) HasRequiredApprovingReviewCount() bool {
	if o != nil && o.RequiredApprovingReviewCount != nil {
		return true
	}

	return false
}

// SetRequiredApprovingReviewCount gets a reference to the given int32 and assigns it to the RequiredApprovingReviewCount field.
func (o *ReposUpdatePullRequestReviewProtectionRequest) SetRequiredApprovingReviewCount(v int32) {
	o.RequiredApprovingReviewCount = &v
}

// GetBypassPullRequestAllowances returns the BypassPullRequestAllowances field value if set, zero value otherwise.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetBypassPullRequestAllowances() ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
	if o == nil || o.BypassPullRequestAllowances == nil {
		var ret ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances
		return ret
	}
	return *o.BypassPullRequestAllowances
}

// GetBypassPullRequestAllowancesOk returns a tuple with the BypassPullRequestAllowances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) GetBypassPullRequestAllowancesOk() (*ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances, bool) {
	if o == nil || o.BypassPullRequestAllowances == nil {
		return nil, false
	}
	return o.BypassPullRequestAllowances, true
}

// HasBypassPullRequestAllowances returns a boolean if a field has been set.
func (o *ReposUpdatePullRequestReviewProtectionRequest) HasBypassPullRequestAllowances() bool {
	if o != nil && o.BypassPullRequestAllowances != nil {
		return true
	}

	return false
}

// SetBypassPullRequestAllowances gets a reference to the given ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances and assigns it to the BypassPullRequestAllowances field.
func (o *ReposUpdatePullRequestReviewProtectionRequest) SetBypassPullRequestAllowances(v ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) {
	o.BypassPullRequestAllowances = &v
}

func (o ReposUpdatePullRequestReviewProtectionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DismissalRestrictions != nil {
		toSerialize["dismissal_restrictions"] = o.DismissalRestrictions
	}
	if o.DismissStaleReviews != nil {
		toSerialize["dismiss_stale_reviews"] = o.DismissStaleReviews
	}
	if o.RequireCodeOwnerReviews != nil {
		toSerialize["require_code_owner_reviews"] = o.RequireCodeOwnerReviews
	}
	if o.RequiredApprovingReviewCount != nil {
		toSerialize["required_approving_review_count"] = o.RequiredApprovingReviewCount
	}
	if o.BypassPullRequestAllowances != nil {
		toSerialize["bypass_pull_request_allowances"] = o.BypassPullRequestAllowances
	}
	return json.Marshal(toSerialize)
}

type NullableReposUpdatePullRequestReviewProtectionRequest struct {
	value *ReposUpdatePullRequestReviewProtectionRequest
	isSet bool
}

func (v NullableReposUpdatePullRequestReviewProtectionRequest) Get() *ReposUpdatePullRequestReviewProtectionRequest {
	return v.value
}

func (v *NullableReposUpdatePullRequestReviewProtectionRequest) Set(val *ReposUpdatePullRequestReviewProtectionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposUpdatePullRequestReviewProtectionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposUpdatePullRequestReviewProtectionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposUpdatePullRequestReviewProtectionRequest(val *ReposUpdatePullRequestReviewProtectionRequest) *NullableReposUpdatePullRequestReviewProtectionRequest {
	return &NullableReposUpdatePullRequestReviewProtectionRequest{value: val, isSet: true}
}

func (v NullableReposUpdatePullRequestReviewProtectionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposUpdatePullRequestReviewProtectionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


