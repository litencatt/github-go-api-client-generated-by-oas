/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// DeploymentStatus The status of a deployment.
type DeploymentStatus struct {
	Url string `json:"url"`
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	// The state of the status.
	State string `json:"state"`
	Creator NullableNullableSimpleUser `json:"creator"`
	// A short description of the status.
	Description string `json:"description"`
	// The environment of the deployment that the status is for.
	Environment *string `json:"environment,omitempty"`
	// Deprecated: the URL to associate with this status.
	TargetUrl string `json:"target_url"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	DeploymentUrl string `json:"deployment_url"`
	RepositoryUrl string `json:"repository_url"`
	// The URL for accessing your environment.
	EnvironmentUrl *string `json:"environment_url,omitempty"`
	// The URL to associate with this status.
	LogUrl *string `json:"log_url,omitempty"`
	PerformedViaGithubApp NullableNullableIntegration `json:"performed_via_github_app,omitempty"`
}

// NewDeploymentStatus instantiates a new DeploymentStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentStatus(url string, id int32, nodeId string, state string, creator NullableNullableSimpleUser, description string, targetUrl string, createdAt time.Time, updatedAt time.Time, deploymentUrl string, repositoryUrl string) *DeploymentStatus {
	this := DeploymentStatus{}
	this.Url = url
	this.Id = id
	this.NodeId = nodeId
	this.State = state
	this.Creator = creator
	this.Description = description
	var environment string = ""
	this.Environment = &environment
	this.TargetUrl = targetUrl
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.DeploymentUrl = deploymentUrl
	this.RepositoryUrl = repositoryUrl
	var environmentUrl string = ""
	this.EnvironmentUrl = &environmentUrl
	var logUrl string = ""
	this.LogUrl = &logUrl
	return &this
}

// NewDeploymentStatusWithDefaults instantiates a new DeploymentStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentStatusWithDefaults() *DeploymentStatus {
	this := DeploymentStatus{}
	var description string = ""
	this.Description = description
	var environment string = ""
	this.Environment = &environment
	var targetUrl string = ""
	this.TargetUrl = targetUrl
	var environmentUrl string = ""
	this.EnvironmentUrl = &environmentUrl
	var logUrl string = ""
	this.LogUrl = &logUrl
	return &this
}

// GetUrl returns the Url field value
func (o *DeploymentStatus) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *DeploymentStatus) SetUrl(v string) {
	o.Url = v
}

// GetId returns the Id field value
func (o *DeploymentStatus) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DeploymentStatus) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *DeploymentStatus) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *DeploymentStatus) SetNodeId(v string) {
	o.NodeId = v
}

// GetState returns the State field value
func (o *DeploymentStatus) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *DeploymentStatus) SetState(v string) {
	o.State = v
}

// GetCreator returns the Creator field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *DeploymentStatus) GetCreator() NullableSimpleUser {
	if o == nil || o.Creator.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.Creator.Get()
}

// GetCreatorOk returns a tuple with the Creator field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentStatus) GetCreatorOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Creator.Get(), o.Creator.IsSet()
}

// SetCreator sets field value
func (o *DeploymentStatus) SetCreator(v NullableSimpleUser) {
	o.Creator.Set(&v)
}

// GetDescription returns the Description field value
func (o *DeploymentStatus) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *DeploymentStatus) SetDescription(v string) {
	o.Description = v
}

// GetEnvironment returns the Environment field value if set, zero value otherwise.
func (o *DeploymentStatus) GetEnvironment() string {
	if o == nil || o.Environment == nil {
		var ret string
		return ret
	}
	return *o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetEnvironmentOk() (*string, bool) {
	if o == nil || o.Environment == nil {
		return nil, false
	}
	return o.Environment, true
}

// HasEnvironment returns a boolean if a field has been set.
func (o *DeploymentStatus) HasEnvironment() bool {
	if o != nil && o.Environment != nil {
		return true
	}

	return false
}

// SetEnvironment gets a reference to the given string and assigns it to the Environment field.
func (o *DeploymentStatus) SetEnvironment(v string) {
	o.Environment = &v
}

// GetTargetUrl returns the TargetUrl field value
func (o *DeploymentStatus) GetTargetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetUrl
}

// GetTargetUrlOk returns a tuple with the TargetUrl field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetTargetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetUrl, true
}

// SetTargetUrl sets field value
func (o *DeploymentStatus) SetTargetUrl(v string) {
	o.TargetUrl = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *DeploymentStatus) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *DeploymentStatus) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *DeploymentStatus) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *DeploymentStatus) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetDeploymentUrl returns the DeploymentUrl field value
func (o *DeploymentStatus) GetDeploymentUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeploymentUrl
}

// GetDeploymentUrlOk returns a tuple with the DeploymentUrl field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetDeploymentUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentUrl, true
}

// SetDeploymentUrl sets field value
func (o *DeploymentStatus) SetDeploymentUrl(v string) {
	o.DeploymentUrl = v
}

// GetRepositoryUrl returns the RepositoryUrl field value
func (o *DeploymentStatus) GetRepositoryUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositoryUrl
}

// GetRepositoryUrlOk returns a tuple with the RepositoryUrl field value
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetRepositoryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositoryUrl, true
}

// SetRepositoryUrl sets field value
func (o *DeploymentStatus) SetRepositoryUrl(v string) {
	o.RepositoryUrl = v
}

// GetEnvironmentUrl returns the EnvironmentUrl field value if set, zero value otherwise.
func (o *DeploymentStatus) GetEnvironmentUrl() string {
	if o == nil || o.EnvironmentUrl == nil {
		var ret string
		return ret
	}
	return *o.EnvironmentUrl
}

// GetEnvironmentUrlOk returns a tuple with the EnvironmentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetEnvironmentUrlOk() (*string, bool) {
	if o == nil || o.EnvironmentUrl == nil {
		return nil, false
	}
	return o.EnvironmentUrl, true
}

// HasEnvironmentUrl returns a boolean if a field has been set.
func (o *DeploymentStatus) HasEnvironmentUrl() bool {
	if o != nil && o.EnvironmentUrl != nil {
		return true
	}

	return false
}

// SetEnvironmentUrl gets a reference to the given string and assigns it to the EnvironmentUrl field.
func (o *DeploymentStatus) SetEnvironmentUrl(v string) {
	o.EnvironmentUrl = &v
}

// GetLogUrl returns the LogUrl field value if set, zero value otherwise.
func (o *DeploymentStatus) GetLogUrl() string {
	if o == nil || o.LogUrl == nil {
		var ret string
		return ret
	}
	return *o.LogUrl
}

// GetLogUrlOk returns a tuple with the LogUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentStatus) GetLogUrlOk() (*string, bool) {
	if o == nil || o.LogUrl == nil {
		return nil, false
	}
	return o.LogUrl, true
}

// HasLogUrl returns a boolean if a field has been set.
func (o *DeploymentStatus) HasLogUrl() bool {
	if o != nil && o.LogUrl != nil {
		return true
	}

	return false
}

// SetLogUrl gets a reference to the given string and assigns it to the LogUrl field.
func (o *DeploymentStatus) SetLogUrl(v string) {
	o.LogUrl = &v
}

// GetPerformedViaGithubApp returns the PerformedViaGithubApp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeploymentStatus) GetPerformedViaGithubApp() NullableIntegration {
	if o == nil || o.PerformedViaGithubApp.Get() == nil {
		var ret NullableIntegration
		return ret
	}
	return *o.PerformedViaGithubApp.Get()
}

// GetPerformedViaGithubAppOk returns a tuple with the PerformedViaGithubApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeploymentStatus) GetPerformedViaGithubAppOk() (*NullableIntegration, bool) {
	if o == nil {
		return nil, false
	}
	return o.PerformedViaGithubApp.Get(), o.PerformedViaGithubApp.IsSet()
}

// HasPerformedViaGithubApp returns a boolean if a field has been set.
func (o *DeploymentStatus) HasPerformedViaGithubApp() bool {
	if o != nil && o.PerformedViaGithubApp.IsSet() {
		return true
	}

	return false
}

// SetPerformedViaGithubApp gets a reference to the given NullableNullableIntegration and assigns it to the PerformedViaGithubApp field.
func (o *DeploymentStatus) SetPerformedViaGithubApp(v NullableIntegration) {
	o.PerformedViaGithubApp.Set(&v)
}
// SetPerformedViaGithubAppNil sets the value for PerformedViaGithubApp to be an explicit nil
func (o *DeploymentStatus) SetPerformedViaGithubAppNil() {
	o.PerformedViaGithubApp.Set(nil)
}

// UnsetPerformedViaGithubApp ensures that no value is present for PerformedViaGithubApp, not even an explicit nil
func (o *DeploymentStatus) UnsetPerformedViaGithubApp() {
	o.PerformedViaGithubApp.Unset()
}

func (o DeploymentStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["creator"] = o.Creator.Get()
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if o.Environment != nil {
		toSerialize["environment"] = o.Environment
	}
	if true {
		toSerialize["target_url"] = o.TargetUrl
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["deployment_url"] = o.DeploymentUrl
	}
	if true {
		toSerialize["repository_url"] = o.RepositoryUrl
	}
	if o.EnvironmentUrl != nil {
		toSerialize["environment_url"] = o.EnvironmentUrl
	}
	if o.LogUrl != nil {
		toSerialize["log_url"] = o.LogUrl
	}
	if o.PerformedViaGithubApp.IsSet() {
		toSerialize["performed_via_github_app"] = o.PerformedViaGithubApp.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentStatus struct {
	value *DeploymentStatus
	isSet bool
}

func (v NullableDeploymentStatus) Get() *DeploymentStatus {
	return v.value
}

func (v *NullableDeploymentStatus) Set(val *DeploymentStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentStatus(val *DeploymentStatus) *NullableDeploymentStatus {
	return &NullableDeploymentStatus{value: val, isSet: true}
}

func (v NullableDeploymentStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


