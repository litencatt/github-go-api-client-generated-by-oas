/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// HookDeliveryResponse struct for HookDeliveryResponse
type HookDeliveryResponse struct {
	// The response headers received when the delivery was made.
	Headers map[string]interface{} `json:"headers"`
	// The response payload received.
	Payload map[string]interface{} `json:"payload"`
}

// NewHookDeliveryResponse instantiates a new HookDeliveryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHookDeliveryResponse(headers map[string]interface{}, payload map[string]interface{}) *HookDeliveryResponse {
	this := HookDeliveryResponse{}
	this.Headers = headers
	this.Payload = payload
	return &this
}

// NewHookDeliveryResponseWithDefaults instantiates a new HookDeliveryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHookDeliveryResponseWithDefaults() *HookDeliveryResponse {
	this := HookDeliveryResponse{}
	return &this
}

// GetHeaders returns the Headers field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *HookDeliveryResponse) GetHeaders() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HookDeliveryResponse) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || o.Headers == nil {
		return nil, false
	}
	return o.Headers, true
}

// SetHeaders sets field value
func (o *HookDeliveryResponse) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

// GetPayload returns the Payload field value
// If the value is explicit nil, the zero value for map[string]interface{} will be returned
func (o *HookDeliveryResponse) GetPayload() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HookDeliveryResponse) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// SetPayload sets field value
func (o *HookDeliveryResponse) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o HookDeliveryResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Headers != nil {
		toSerialize["headers"] = o.Headers
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	return json.Marshal(toSerialize)
}

type NullableHookDeliveryResponse struct {
	value *HookDeliveryResponse
	isSet bool
}

func (v NullableHookDeliveryResponse) Get() *HookDeliveryResponse {
	return v.value
}

func (v *NullableHookDeliveryResponse) Set(val *HookDeliveryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHookDeliveryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHookDeliveryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHookDeliveryResponse(val *HookDeliveryResponse) *NullableHookDeliveryResponse {
	return &NullableHookDeliveryResponse{value: val, isSet: true}
}

func (v NullableHookDeliveryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHookDeliveryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


