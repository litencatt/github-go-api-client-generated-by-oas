/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// StatusCheckPolicy Status Check Policy
type StatusCheckPolicy struct {
	Url string `json:"url"`
	Strict bool `json:"strict"`
	Contexts []string `json:"contexts"`
	Checks []StatusCheckPolicyChecksInner `json:"checks"`
	ContextsUrl string `json:"contexts_url"`
}

// NewStatusCheckPolicy instantiates a new StatusCheckPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusCheckPolicy(url string, strict bool, contexts []string, checks []StatusCheckPolicyChecksInner, contextsUrl string) *StatusCheckPolicy {
	this := StatusCheckPolicy{}
	this.Url = url
	this.Strict = strict
	this.Contexts = contexts
	this.Checks = checks
	this.ContextsUrl = contextsUrl
	return &this
}

// NewStatusCheckPolicyWithDefaults instantiates a new StatusCheckPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusCheckPolicyWithDefaults() *StatusCheckPolicy {
	this := StatusCheckPolicy{}
	return &this
}

// GetUrl returns the Url field value
func (o *StatusCheckPolicy) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *StatusCheckPolicy) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *StatusCheckPolicy) SetUrl(v string) {
	o.Url = v
}

// GetStrict returns the Strict field value
func (o *StatusCheckPolicy) GetStrict() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Strict
}

// GetStrictOk returns a tuple with the Strict field value
// and a boolean to check if the value has been set.
func (o *StatusCheckPolicy) GetStrictOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strict, true
}

// SetStrict sets field value
func (o *StatusCheckPolicy) SetStrict(v bool) {
	o.Strict = v
}

// GetContexts returns the Contexts field value
func (o *StatusCheckPolicy) GetContexts() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Contexts
}

// GetContextsOk returns a tuple with the Contexts field value
// and a boolean to check if the value has been set.
func (o *StatusCheckPolicy) GetContextsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Contexts, true
}

// SetContexts sets field value
func (o *StatusCheckPolicy) SetContexts(v []string) {
	o.Contexts = v
}

// GetChecks returns the Checks field value
func (o *StatusCheckPolicy) GetChecks() []StatusCheckPolicyChecksInner {
	if o == nil {
		var ret []StatusCheckPolicyChecksInner
		return ret
	}

	return o.Checks
}

// GetChecksOk returns a tuple with the Checks field value
// and a boolean to check if the value has been set.
func (o *StatusCheckPolicy) GetChecksOk() ([]StatusCheckPolicyChecksInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Checks, true
}

// SetChecks sets field value
func (o *StatusCheckPolicy) SetChecks(v []StatusCheckPolicyChecksInner) {
	o.Checks = v
}

// GetContextsUrl returns the ContextsUrl field value
func (o *StatusCheckPolicy) GetContextsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContextsUrl
}

// GetContextsUrlOk returns a tuple with the ContextsUrl field value
// and a boolean to check if the value has been set.
func (o *StatusCheckPolicy) GetContextsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContextsUrl, true
}

// SetContextsUrl sets field value
func (o *StatusCheckPolicy) SetContextsUrl(v string) {
	o.ContextsUrl = v
}

func (o StatusCheckPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["strict"] = o.Strict
	}
	if true {
		toSerialize["contexts"] = o.Contexts
	}
	if true {
		toSerialize["checks"] = o.Checks
	}
	if true {
		toSerialize["contexts_url"] = o.ContextsUrl
	}
	return json.Marshal(toSerialize)
}

type NullableStatusCheckPolicy struct {
	value *StatusCheckPolicy
	isSet bool
}

func (v NullableStatusCheckPolicy) Get() *StatusCheckPolicy {
	return v.value
}

func (v *NullableStatusCheckPolicy) Set(val *StatusCheckPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusCheckPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusCheckPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusCheckPolicy(val *StatusCheckPolicy) *NullableStatusCheckPolicy {
	return &NullableStatusCheckPolicy{value: val, isSet: true}
}

func (v NullableStatusCheckPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusCheckPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


