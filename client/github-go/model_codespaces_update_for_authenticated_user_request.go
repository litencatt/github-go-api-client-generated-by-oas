/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CodespacesUpdateForAuthenticatedUserRequest struct for CodespacesUpdateForAuthenticatedUserRequest
type CodespacesUpdateForAuthenticatedUserRequest struct {
	// A valid machine to transition this codespace to.
	Machine *string `json:"machine,omitempty"`
	// Display name for this codespace
	DisplayName *string `json:"display_name,omitempty"`
	// Recently opened folders inside the codespace. It is currently used by the clients to determine the folder path to load the codespace in.
	RecentFolders []string `json:"recent_folders,omitempty"`
}

// NewCodespacesUpdateForAuthenticatedUserRequest instantiates a new CodespacesUpdateForAuthenticatedUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodespacesUpdateForAuthenticatedUserRequest() *CodespacesUpdateForAuthenticatedUserRequest {
	this := CodespacesUpdateForAuthenticatedUserRequest{}
	return &this
}

// NewCodespacesUpdateForAuthenticatedUserRequestWithDefaults instantiates a new CodespacesUpdateForAuthenticatedUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodespacesUpdateForAuthenticatedUserRequestWithDefaults() *CodespacesUpdateForAuthenticatedUserRequest {
	this := CodespacesUpdateForAuthenticatedUserRequest{}
	return &this
}

// GetMachine returns the Machine field value if set, zero value otherwise.
func (o *CodespacesUpdateForAuthenticatedUserRequest) GetMachine() string {
	if o == nil || o.Machine == nil {
		var ret string
		return ret
	}
	return *o.Machine
}

// GetMachineOk returns a tuple with the Machine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodespacesUpdateForAuthenticatedUserRequest) GetMachineOk() (*string, bool) {
	if o == nil || o.Machine == nil {
		return nil, false
	}
	return o.Machine, true
}

// HasMachine returns a boolean if a field has been set.
func (o *CodespacesUpdateForAuthenticatedUserRequest) HasMachine() bool {
	if o != nil && o.Machine != nil {
		return true
	}

	return false
}

// SetMachine gets a reference to the given string and assigns it to the Machine field.
func (o *CodespacesUpdateForAuthenticatedUserRequest) SetMachine(v string) {
	o.Machine = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CodespacesUpdateForAuthenticatedUserRequest) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodespacesUpdateForAuthenticatedUserRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CodespacesUpdateForAuthenticatedUserRequest) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CodespacesUpdateForAuthenticatedUserRequest) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetRecentFolders returns the RecentFolders field value if set, zero value otherwise.
func (o *CodespacesUpdateForAuthenticatedUserRequest) GetRecentFolders() []string {
	if o == nil || o.RecentFolders == nil {
		var ret []string
		return ret
	}
	return o.RecentFolders
}

// GetRecentFoldersOk returns a tuple with the RecentFolders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodespacesUpdateForAuthenticatedUserRequest) GetRecentFoldersOk() ([]string, bool) {
	if o == nil || o.RecentFolders == nil {
		return nil, false
	}
	return o.RecentFolders, true
}

// HasRecentFolders returns a boolean if a field has been set.
func (o *CodespacesUpdateForAuthenticatedUserRequest) HasRecentFolders() bool {
	if o != nil && o.RecentFolders != nil {
		return true
	}

	return false
}

// SetRecentFolders gets a reference to the given []string and assigns it to the RecentFolders field.
func (o *CodespacesUpdateForAuthenticatedUserRequest) SetRecentFolders(v []string) {
	o.RecentFolders = v
}

func (o CodespacesUpdateForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Machine != nil {
		toSerialize["machine"] = o.Machine
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.RecentFolders != nil {
		toSerialize["recent_folders"] = o.RecentFolders
	}
	return json.Marshal(toSerialize)
}

type NullableCodespacesUpdateForAuthenticatedUserRequest struct {
	value *CodespacesUpdateForAuthenticatedUserRequest
	isSet bool
}

func (v NullableCodespacesUpdateForAuthenticatedUserRequest) Get() *CodespacesUpdateForAuthenticatedUserRequest {
	return v.value
}

func (v *NullableCodespacesUpdateForAuthenticatedUserRequest) Set(val *CodespacesUpdateForAuthenticatedUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCodespacesUpdateForAuthenticatedUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCodespacesUpdateForAuthenticatedUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodespacesUpdateForAuthenticatedUserRequest(val *CodespacesUpdateForAuthenticatedUserRequest) *NullableCodespacesUpdateForAuthenticatedUserRequest {
	return &NullableCodespacesUpdateForAuthenticatedUserRequest{value: val, isSet: true}
}

func (v NullableCodespacesUpdateForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodespacesUpdateForAuthenticatedUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


