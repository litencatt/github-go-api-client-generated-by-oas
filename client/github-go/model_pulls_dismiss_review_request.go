/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PullsDismissReviewRequest struct for PullsDismissReviewRequest
type PullsDismissReviewRequest struct {
	// The message for the pull request review dismissal
	Message string `json:"message"`
	Event *string `json:"event,omitempty"`
}

// NewPullsDismissReviewRequest instantiates a new PullsDismissReviewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullsDismissReviewRequest(message string) *PullsDismissReviewRequest {
	this := PullsDismissReviewRequest{}
	this.Message = message
	return &this
}

// NewPullsDismissReviewRequestWithDefaults instantiates a new PullsDismissReviewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullsDismissReviewRequestWithDefaults() *PullsDismissReviewRequest {
	this := PullsDismissReviewRequest{}
	return &this
}

// GetMessage returns the Message field value
func (o *PullsDismissReviewRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *PullsDismissReviewRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *PullsDismissReviewRequest) SetMessage(v string) {
	o.Message = v
}

// GetEvent returns the Event field value if set, zero value otherwise.
func (o *PullsDismissReviewRequest) GetEvent() string {
	if o == nil || o.Event == nil {
		var ret string
		return ret
	}
	return *o.Event
}

// GetEventOk returns a tuple with the Event field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullsDismissReviewRequest) GetEventOk() (*string, bool) {
	if o == nil || o.Event == nil {
		return nil, false
	}
	return o.Event, true
}

// HasEvent returns a boolean if a field has been set.
func (o *PullsDismissReviewRequest) HasEvent() bool {
	if o != nil && o.Event != nil {
		return true
	}

	return false
}

// SetEvent gets a reference to the given string and assigns it to the Event field.
func (o *PullsDismissReviewRequest) SetEvent(v string) {
	o.Event = &v
}

func (o PullsDismissReviewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if o.Event != nil {
		toSerialize["event"] = o.Event
	}
	return json.Marshal(toSerialize)
}

type NullablePullsDismissReviewRequest struct {
	value *PullsDismissReviewRequest
	isSet bool
}

func (v NullablePullsDismissReviewRequest) Get() *PullsDismissReviewRequest {
	return v.value
}

func (v *NullablePullsDismissReviewRequest) Set(val *PullsDismissReviewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePullsDismissReviewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePullsDismissReviewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullsDismissReviewRequest(val *PullsDismissReviewRequest) *NullablePullsDismissReviewRequest {
	return &NullablePullsDismissReviewRequest{value: val, isSet: true}
}

func (v NullablePullsDismissReviewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullsDismissReviewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


