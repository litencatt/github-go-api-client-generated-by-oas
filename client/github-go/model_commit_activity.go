/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CommitActivity Commit Activity
type CommitActivity struct {
	Days []int32 `json:"days"`
	Total int32 `json:"total"`
	Week int32 `json:"week"`
}

// NewCommitActivity instantiates a new CommitActivity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommitActivity(days []int32, total int32, week int32) *CommitActivity {
	this := CommitActivity{}
	this.Days = days
	this.Total = total
	this.Week = week
	return &this
}

// NewCommitActivityWithDefaults instantiates a new CommitActivity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommitActivityWithDefaults() *CommitActivity {
	this := CommitActivity{}
	return &this
}

// GetDays returns the Days field value
func (o *CommitActivity) GetDays() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Days
}

// GetDaysOk returns a tuple with the Days field value
// and a boolean to check if the value has been set.
func (o *CommitActivity) GetDaysOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Days, true
}

// SetDays sets field value
func (o *CommitActivity) SetDays(v []int32) {
	o.Days = v
}

// GetTotal returns the Total field value
func (o *CommitActivity) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *CommitActivity) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *CommitActivity) SetTotal(v int32) {
	o.Total = v
}

// GetWeek returns the Week field value
func (o *CommitActivity) GetWeek() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Week
}

// GetWeekOk returns a tuple with the Week field value
// and a boolean to check if the value has been set.
func (o *CommitActivity) GetWeekOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Week, true
}

// SetWeek sets field value
func (o *CommitActivity) SetWeek(v int32) {
	o.Week = v
}

func (o CommitActivity) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["days"] = o.Days
	}
	if true {
		toSerialize["total"] = o.Total
	}
	if true {
		toSerialize["week"] = o.Week
	}
	return json.Marshal(toSerialize)
}

type NullableCommitActivity struct {
	value *CommitActivity
	isSet bool
}

func (v NullableCommitActivity) Get() *CommitActivity {
	return v.value
}

func (v *NullableCommitActivity) Set(val *CommitActivity) {
	v.value = val
	v.isSet = true
}

func (v NullableCommitActivity) IsSet() bool {
	return v.isSet
}

func (v *NullableCommitActivity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommitActivity(val *CommitActivity) *NullableCommitActivity {
	return &NullableCommitActivity{value: val, isSet: true}
}

func (v NullableCommitActivity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommitActivity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


