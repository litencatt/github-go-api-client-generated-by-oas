/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// IssuesAddAssigneesRequest struct for IssuesAddAssigneesRequest
type IssuesAddAssigneesRequest struct {
	// Usernames of people to assign this issue to. _NOTE: Only users with push access can add assignees to an issue. Assignees are silently ignored otherwise._
	Assignees []string `json:"assignees,omitempty"`
}

// NewIssuesAddAssigneesRequest instantiates a new IssuesAddAssigneesRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssuesAddAssigneesRequest() *IssuesAddAssigneesRequest {
	this := IssuesAddAssigneesRequest{}
	return &this
}

// NewIssuesAddAssigneesRequestWithDefaults instantiates a new IssuesAddAssigneesRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuesAddAssigneesRequestWithDefaults() *IssuesAddAssigneesRequest {
	this := IssuesAddAssigneesRequest{}
	return &this
}

// GetAssignees returns the Assignees field value if set, zero value otherwise.
func (o *IssuesAddAssigneesRequest) GetAssignees() []string {
	if o == nil || o.Assignees == nil {
		var ret []string
		return ret
	}
	return o.Assignees
}

// GetAssigneesOk returns a tuple with the Assignees field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesAddAssigneesRequest) GetAssigneesOk() ([]string, bool) {
	if o == nil || o.Assignees == nil {
		return nil, false
	}
	return o.Assignees, true
}

// HasAssignees returns a boolean if a field has been set.
func (o *IssuesAddAssigneesRequest) HasAssignees() bool {
	if o != nil && o.Assignees != nil {
		return true
	}

	return false
}

// SetAssignees gets a reference to the given []string and assigns it to the Assignees field.
func (o *IssuesAddAssigneesRequest) SetAssignees(v []string) {
	o.Assignees = v
}

func (o IssuesAddAssigneesRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Assignees != nil {
		toSerialize["assignees"] = o.Assignees
	}
	return json.Marshal(toSerialize)
}

type NullableIssuesAddAssigneesRequest struct {
	value *IssuesAddAssigneesRequest
	isSet bool
}

func (v NullableIssuesAddAssigneesRequest) Get() *IssuesAddAssigneesRequest {
	return v.value
}

func (v *NullableIssuesAddAssigneesRequest) Set(val *IssuesAddAssigneesRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableIssuesAddAssigneesRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableIssuesAddAssigneesRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssuesAddAssigneesRequest(val *IssuesAddAssigneesRequest) *NullableIssuesAddAssigneesRequest {
	return &NullableIssuesAddAssigneesRequest{value: val, isSet: true}
}

func (v NullableIssuesAddAssigneesRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssuesAddAssigneesRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


