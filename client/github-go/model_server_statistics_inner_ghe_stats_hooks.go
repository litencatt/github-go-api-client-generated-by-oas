/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ServerStatisticsInnerGheStatsHooks struct for ServerStatisticsInnerGheStatsHooks
type ServerStatisticsInnerGheStatsHooks struct {
	TotalHooks *int32 `json:"total_hooks,omitempty"`
	ActiveHooks *int32 `json:"active_hooks,omitempty"`
	InactiveHooks *int32 `json:"inactive_hooks,omitempty"`
}

// NewServerStatisticsInnerGheStatsHooks instantiates a new ServerStatisticsInnerGheStatsHooks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerStatisticsInnerGheStatsHooks() *ServerStatisticsInnerGheStatsHooks {
	this := ServerStatisticsInnerGheStatsHooks{}
	return &this
}

// NewServerStatisticsInnerGheStatsHooksWithDefaults instantiates a new ServerStatisticsInnerGheStatsHooks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerStatisticsInnerGheStatsHooksWithDefaults() *ServerStatisticsInnerGheStatsHooks {
	this := ServerStatisticsInnerGheStatsHooks{}
	return &this
}

// GetTotalHooks returns the TotalHooks field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsHooks) GetTotalHooks() int32 {
	if o == nil || o.TotalHooks == nil {
		var ret int32
		return ret
	}
	return *o.TotalHooks
}

// GetTotalHooksOk returns a tuple with the TotalHooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsHooks) GetTotalHooksOk() (*int32, bool) {
	if o == nil || o.TotalHooks == nil {
		return nil, false
	}
	return o.TotalHooks, true
}

// HasTotalHooks returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsHooks) HasTotalHooks() bool {
	if o != nil && o.TotalHooks != nil {
		return true
	}

	return false
}

// SetTotalHooks gets a reference to the given int32 and assigns it to the TotalHooks field.
func (o *ServerStatisticsInnerGheStatsHooks) SetTotalHooks(v int32) {
	o.TotalHooks = &v
}

// GetActiveHooks returns the ActiveHooks field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsHooks) GetActiveHooks() int32 {
	if o == nil || o.ActiveHooks == nil {
		var ret int32
		return ret
	}
	return *o.ActiveHooks
}

// GetActiveHooksOk returns a tuple with the ActiveHooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsHooks) GetActiveHooksOk() (*int32, bool) {
	if o == nil || o.ActiveHooks == nil {
		return nil, false
	}
	return o.ActiveHooks, true
}

// HasActiveHooks returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsHooks) HasActiveHooks() bool {
	if o != nil && o.ActiveHooks != nil {
		return true
	}

	return false
}

// SetActiveHooks gets a reference to the given int32 and assigns it to the ActiveHooks field.
func (o *ServerStatisticsInnerGheStatsHooks) SetActiveHooks(v int32) {
	o.ActiveHooks = &v
}

// GetInactiveHooks returns the InactiveHooks field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsHooks) GetInactiveHooks() int32 {
	if o == nil || o.InactiveHooks == nil {
		var ret int32
		return ret
	}
	return *o.InactiveHooks
}

// GetInactiveHooksOk returns a tuple with the InactiveHooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsHooks) GetInactiveHooksOk() (*int32, bool) {
	if o == nil || o.InactiveHooks == nil {
		return nil, false
	}
	return o.InactiveHooks, true
}

// HasInactiveHooks returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsHooks) HasInactiveHooks() bool {
	if o != nil && o.InactiveHooks != nil {
		return true
	}

	return false
}

// SetInactiveHooks gets a reference to the given int32 and assigns it to the InactiveHooks field.
func (o *ServerStatisticsInnerGheStatsHooks) SetInactiveHooks(v int32) {
	o.InactiveHooks = &v
}

func (o ServerStatisticsInnerGheStatsHooks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalHooks != nil {
		toSerialize["total_hooks"] = o.TotalHooks
	}
	if o.ActiveHooks != nil {
		toSerialize["active_hooks"] = o.ActiveHooks
	}
	if o.InactiveHooks != nil {
		toSerialize["inactive_hooks"] = o.InactiveHooks
	}
	return json.Marshal(toSerialize)
}

type NullableServerStatisticsInnerGheStatsHooks struct {
	value *ServerStatisticsInnerGheStatsHooks
	isSet bool
}

func (v NullableServerStatisticsInnerGheStatsHooks) Get() *ServerStatisticsInnerGheStatsHooks {
	return v.value
}

func (v *NullableServerStatisticsInnerGheStatsHooks) Set(val *ServerStatisticsInnerGheStatsHooks) {
	v.value = val
	v.isSet = true
}

func (v NullableServerStatisticsInnerGheStatsHooks) IsSet() bool {
	return v.isSet
}

func (v *NullableServerStatisticsInnerGheStatsHooks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerStatisticsInnerGheStatsHooks(val *ServerStatisticsInnerGheStatsHooks) *NullableServerStatisticsInnerGheStatsHooks {
	return &NullableServerStatisticsInnerGheStatsHooks{value: val, isSet: true}
}

func (v NullableServerStatisticsInnerGheStatsHooks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerStatisticsInnerGheStatsHooks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


