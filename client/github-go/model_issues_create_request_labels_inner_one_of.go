/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// IssuesCreateRequestLabelsInnerOneOf struct for IssuesCreateRequestLabelsInnerOneOf
type IssuesCreateRequestLabelsInnerOneOf struct {
	Id *int32 `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Color NullableString `json:"color,omitempty"`
}

// NewIssuesCreateRequestLabelsInnerOneOf instantiates a new IssuesCreateRequestLabelsInnerOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssuesCreateRequestLabelsInnerOneOf() *IssuesCreateRequestLabelsInnerOneOf {
	this := IssuesCreateRequestLabelsInnerOneOf{}
	return &this
}

// NewIssuesCreateRequestLabelsInnerOneOfWithDefaults instantiates a new IssuesCreateRequestLabelsInnerOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssuesCreateRequestLabelsInnerOneOfWithDefaults() *IssuesCreateRequestLabelsInnerOneOf {
	this := IssuesCreateRequestLabelsInnerOneOf{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *IssuesCreateRequestLabelsInnerOneOf) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesCreateRequestLabelsInnerOneOf) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *IssuesCreateRequestLabelsInnerOneOf) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *IssuesCreateRequestLabelsInnerOneOf) SetId(v int32) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *IssuesCreateRequestLabelsInnerOneOf) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssuesCreateRequestLabelsInnerOneOf) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *IssuesCreateRequestLabelsInnerOneOf) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *IssuesCreateRequestLabelsInnerOneOf) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IssuesCreateRequestLabelsInnerOneOf) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssuesCreateRequestLabelsInnerOneOf) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *IssuesCreateRequestLabelsInnerOneOf) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *IssuesCreateRequestLabelsInnerOneOf) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *IssuesCreateRequestLabelsInnerOneOf) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *IssuesCreateRequestLabelsInnerOneOf) UnsetDescription() {
	o.Description.Unset()
}

// GetColor returns the Color field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IssuesCreateRequestLabelsInnerOneOf) GetColor() string {
	if o == nil || o.Color.Get() == nil {
		var ret string
		return ret
	}
	return *o.Color.Get()
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssuesCreateRequestLabelsInnerOneOf) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Color.Get(), o.Color.IsSet()
}

// HasColor returns a boolean if a field has been set.
func (o *IssuesCreateRequestLabelsInnerOneOf) HasColor() bool {
	if o != nil && o.Color.IsSet() {
		return true
	}

	return false
}

// SetColor gets a reference to the given NullableString and assigns it to the Color field.
func (o *IssuesCreateRequestLabelsInnerOneOf) SetColor(v string) {
	o.Color.Set(&v)
}
// SetColorNil sets the value for Color to be an explicit nil
func (o *IssuesCreateRequestLabelsInnerOneOf) SetColorNil() {
	o.Color.Set(nil)
}

// UnsetColor ensures that no value is present for Color, not even an explicit nil
func (o *IssuesCreateRequestLabelsInnerOneOf) UnsetColor() {
	o.Color.Unset()
}

func (o IssuesCreateRequestLabelsInnerOneOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.Color.IsSet() {
		toSerialize["color"] = o.Color.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableIssuesCreateRequestLabelsInnerOneOf struct {
	value *IssuesCreateRequestLabelsInnerOneOf
	isSet bool
}

func (v NullableIssuesCreateRequestLabelsInnerOneOf) Get() *IssuesCreateRequestLabelsInnerOneOf {
	return v.value
}

func (v *NullableIssuesCreateRequestLabelsInnerOneOf) Set(val *IssuesCreateRequestLabelsInnerOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIssuesCreateRequestLabelsInnerOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIssuesCreateRequestLabelsInnerOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssuesCreateRequestLabelsInnerOneOf(val *IssuesCreateRequestLabelsInnerOneOf) *NullableIssuesCreateRequestLabelsInnerOneOf {
	return &NullableIssuesCreateRequestLabelsInnerOneOf{value: val, isSet: true}
}

func (v NullableIssuesCreateRequestLabelsInnerOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssuesCreateRequestLabelsInnerOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


