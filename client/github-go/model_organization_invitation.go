/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// OrganizationInvitation Organization Invitation
type OrganizationInvitation struct {
	Id int32 `json:"id"`
	Login NullableString `json:"login"`
	Email NullableString `json:"email"`
	Role string `json:"role"`
	CreatedAt string `json:"created_at"`
	FailedAt NullableString `json:"failed_at,omitempty"`
	FailedReason NullableString `json:"failed_reason,omitempty"`
	Inviter SimpleUser `json:"inviter"`
	TeamCount int32 `json:"team_count"`
	NodeId string `json:"node_id"`
	InvitationTeamsUrl string `json:"invitation_teams_url"`
}

// NewOrganizationInvitation instantiates a new OrganizationInvitation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationInvitation(id int32, login NullableString, email NullableString, role string, createdAt string, inviter SimpleUser, teamCount int32, nodeId string, invitationTeamsUrl string) *OrganizationInvitation {
	this := OrganizationInvitation{}
	this.Id = id
	this.Login = login
	this.Email = email
	this.Role = role
	this.CreatedAt = createdAt
	this.Inviter = inviter
	this.TeamCount = teamCount
	this.NodeId = nodeId
	this.InvitationTeamsUrl = invitationTeamsUrl
	return &this
}

// NewOrganizationInvitationWithDefaults instantiates a new OrganizationInvitation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationInvitationWithDefaults() *OrganizationInvitation {
	this := OrganizationInvitation{}
	return &this
}

// GetId returns the Id field value
func (o *OrganizationInvitation) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrganizationInvitation) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrganizationInvitation) SetId(v int32) {
	o.Id = v
}

// GetLogin returns the Login field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OrganizationInvitation) GetLogin() string {
	if o == nil || o.Login.Get() == nil {
		var ret string
		return ret
	}

	return *o.Login.Get()
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationInvitation) GetLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Login.Get(), o.Login.IsSet()
}

// SetLogin sets field value
func (o *OrganizationInvitation) SetLogin(v string) {
	o.Login.Set(&v)
}

// GetEmail returns the Email field value
// If the value is explicit nil, the zero value for string will be returned
func (o *OrganizationInvitation) GetEmail() string {
	if o == nil || o.Email.Get() == nil {
		var ret string
		return ret
	}

	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationInvitation) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// SetEmail sets field value
func (o *OrganizationInvitation) SetEmail(v string) {
	o.Email.Set(&v)
}

// GetRole returns the Role field value
func (o *OrganizationInvitation) GetRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Role
}

// GetRoleOk returns a tuple with the Role field value
// and a boolean to check if the value has been set.
func (o *OrganizationInvitation) GetRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Role, true
}

// SetRole sets field value
func (o *OrganizationInvitation) SetRole(v string) {
	o.Role = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrganizationInvitation) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrganizationInvitation) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrganizationInvitation) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetFailedAt returns the FailedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationInvitation) GetFailedAt() string {
	if o == nil || o.FailedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.FailedAt.Get()
}

// GetFailedAtOk returns a tuple with the FailedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationInvitation) GetFailedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailedAt.Get(), o.FailedAt.IsSet()
}

// HasFailedAt returns a boolean if a field has been set.
func (o *OrganizationInvitation) HasFailedAt() bool {
	if o != nil && o.FailedAt.IsSet() {
		return true
	}

	return false
}

// SetFailedAt gets a reference to the given NullableString and assigns it to the FailedAt field.
func (o *OrganizationInvitation) SetFailedAt(v string) {
	o.FailedAt.Set(&v)
}
// SetFailedAtNil sets the value for FailedAt to be an explicit nil
func (o *OrganizationInvitation) SetFailedAtNil() {
	o.FailedAt.Set(nil)
}

// UnsetFailedAt ensures that no value is present for FailedAt, not even an explicit nil
func (o *OrganizationInvitation) UnsetFailedAt() {
	o.FailedAt.Unset()
}

// GetFailedReason returns the FailedReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrganizationInvitation) GetFailedReason() string {
	if o == nil || o.FailedReason.Get() == nil {
		var ret string
		return ret
	}
	return *o.FailedReason.Get()
}

// GetFailedReasonOk returns a tuple with the FailedReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrganizationInvitation) GetFailedReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailedReason.Get(), o.FailedReason.IsSet()
}

// HasFailedReason returns a boolean if a field has been set.
func (o *OrganizationInvitation) HasFailedReason() bool {
	if o != nil && o.FailedReason.IsSet() {
		return true
	}

	return false
}

// SetFailedReason gets a reference to the given NullableString and assigns it to the FailedReason field.
func (o *OrganizationInvitation) SetFailedReason(v string) {
	o.FailedReason.Set(&v)
}
// SetFailedReasonNil sets the value for FailedReason to be an explicit nil
func (o *OrganizationInvitation) SetFailedReasonNil() {
	o.FailedReason.Set(nil)
}

// UnsetFailedReason ensures that no value is present for FailedReason, not even an explicit nil
func (o *OrganizationInvitation) UnsetFailedReason() {
	o.FailedReason.Unset()
}

// GetInviter returns the Inviter field value
func (o *OrganizationInvitation) GetInviter() SimpleUser {
	if o == nil {
		var ret SimpleUser
		return ret
	}

	return o.Inviter
}

// GetInviterOk returns a tuple with the Inviter field value
// and a boolean to check if the value has been set.
func (o *OrganizationInvitation) GetInviterOk() (*SimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inviter, true
}

// SetInviter sets field value
func (o *OrganizationInvitation) SetInviter(v SimpleUser) {
	o.Inviter = v
}

// GetTeamCount returns the TeamCount field value
func (o *OrganizationInvitation) GetTeamCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TeamCount
}

// GetTeamCountOk returns a tuple with the TeamCount field value
// and a boolean to check if the value has been set.
func (o *OrganizationInvitation) GetTeamCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamCount, true
}

// SetTeamCount sets field value
func (o *OrganizationInvitation) SetTeamCount(v int32) {
	o.TeamCount = v
}

// GetNodeId returns the NodeId field value
func (o *OrganizationInvitation) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *OrganizationInvitation) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *OrganizationInvitation) SetNodeId(v string) {
	o.NodeId = v
}

// GetInvitationTeamsUrl returns the InvitationTeamsUrl field value
func (o *OrganizationInvitation) GetInvitationTeamsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InvitationTeamsUrl
}

// GetInvitationTeamsUrlOk returns a tuple with the InvitationTeamsUrl field value
// and a boolean to check if the value has been set.
func (o *OrganizationInvitation) GetInvitationTeamsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvitationTeamsUrl, true
}

// SetInvitationTeamsUrl sets field value
func (o *OrganizationInvitation) SetInvitationTeamsUrl(v string) {
	o.InvitationTeamsUrl = v
}

func (o OrganizationInvitation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["login"] = o.Login.Get()
	}
	if true {
		toSerialize["email"] = o.Email.Get()
	}
	if true {
		toSerialize["role"] = o.Role
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.FailedAt.IsSet() {
		toSerialize["failed_at"] = o.FailedAt.Get()
	}
	if o.FailedReason.IsSet() {
		toSerialize["failed_reason"] = o.FailedReason.Get()
	}
	if true {
		toSerialize["inviter"] = o.Inviter
	}
	if true {
		toSerialize["team_count"] = o.TeamCount
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["invitation_teams_url"] = o.InvitationTeamsUrl
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationInvitation struct {
	value *OrganizationInvitation
	isSet bool
}

func (v NullableOrganizationInvitation) Get() *OrganizationInvitation {
	return v.value
}

func (v *NullableOrganizationInvitation) Set(val *OrganizationInvitation) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationInvitation) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationInvitation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationInvitation(val *OrganizationInvitation) *NullableOrganizationInvitation {
	return &NullableOrganizationInvitation{value: val, isSet: true}
}

func (v NullableOrganizationInvitation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationInvitation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


