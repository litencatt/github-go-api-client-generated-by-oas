/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ActionsReviewPendingDeploymentsForRunRequest struct for ActionsReviewPendingDeploymentsForRunRequest
type ActionsReviewPendingDeploymentsForRunRequest struct {
	// The list of environment ids to approve or reject
	EnvironmentIds []int32 `json:"environment_ids"`
	// Whether to approve or reject deployment to the specified environments.
	State string `json:"state"`
	// A comment to accompany the deployment review
	Comment string `json:"comment"`
}

// NewActionsReviewPendingDeploymentsForRunRequest instantiates a new ActionsReviewPendingDeploymentsForRunRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsReviewPendingDeploymentsForRunRequest(environmentIds []int32, state string, comment string) *ActionsReviewPendingDeploymentsForRunRequest {
	this := ActionsReviewPendingDeploymentsForRunRequest{}
	this.EnvironmentIds = environmentIds
	this.State = state
	this.Comment = comment
	return &this
}

// NewActionsReviewPendingDeploymentsForRunRequestWithDefaults instantiates a new ActionsReviewPendingDeploymentsForRunRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsReviewPendingDeploymentsForRunRequestWithDefaults() *ActionsReviewPendingDeploymentsForRunRequest {
	this := ActionsReviewPendingDeploymentsForRunRequest{}
	return &this
}

// GetEnvironmentIds returns the EnvironmentIds field value
func (o *ActionsReviewPendingDeploymentsForRunRequest) GetEnvironmentIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.EnvironmentIds
}

// GetEnvironmentIdsOk returns a tuple with the EnvironmentIds field value
// and a boolean to check if the value has been set.
func (o *ActionsReviewPendingDeploymentsForRunRequest) GetEnvironmentIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.EnvironmentIds, true
}

// SetEnvironmentIds sets field value
func (o *ActionsReviewPendingDeploymentsForRunRequest) SetEnvironmentIds(v []int32) {
	o.EnvironmentIds = v
}

// GetState returns the State field value
func (o *ActionsReviewPendingDeploymentsForRunRequest) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *ActionsReviewPendingDeploymentsForRunRequest) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *ActionsReviewPendingDeploymentsForRunRequest) SetState(v string) {
	o.State = v
}

// GetComment returns the Comment field value
func (o *ActionsReviewPendingDeploymentsForRunRequest) GetComment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Comment
}

// GetCommentOk returns a tuple with the Comment field value
// and a boolean to check if the value has been set.
func (o *ActionsReviewPendingDeploymentsForRunRequest) GetCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comment, true
}

// SetComment sets field value
func (o *ActionsReviewPendingDeploymentsForRunRequest) SetComment(v string) {
	o.Comment = v
}

func (o ActionsReviewPendingDeploymentsForRunRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["environment_ids"] = o.EnvironmentIds
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["comment"] = o.Comment
	}
	return json.Marshal(toSerialize)
}

type NullableActionsReviewPendingDeploymentsForRunRequest struct {
	value *ActionsReviewPendingDeploymentsForRunRequest
	isSet bool
}

func (v NullableActionsReviewPendingDeploymentsForRunRequest) Get() *ActionsReviewPendingDeploymentsForRunRequest {
	return v.value
}

func (v *NullableActionsReviewPendingDeploymentsForRunRequest) Set(val *ActionsReviewPendingDeploymentsForRunRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsReviewPendingDeploymentsForRunRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsReviewPendingDeploymentsForRunRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsReviewPendingDeploymentsForRunRequest(val *ActionsReviewPendingDeploymentsForRunRequest) *NullableActionsReviewPendingDeploymentsForRunRequest {
	return &NullableActionsReviewPendingDeploymentsForRunRequest{value: val, isSet: true}
}

func (v NullableActionsReviewPendingDeploymentsForRunRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsReviewPendingDeploymentsForRunRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


