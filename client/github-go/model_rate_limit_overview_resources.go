/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// RateLimitOverviewResources struct for RateLimitOverviewResources
type RateLimitOverviewResources struct {
	Core RateLimit `json:"core"`
	Graphql *RateLimit `json:"graphql,omitempty"`
	Search RateLimit `json:"search"`
	SourceImport *RateLimit `json:"source_import,omitempty"`
	IntegrationManifest *RateLimit `json:"integration_manifest,omitempty"`
	CodeScanningUpload *RateLimit `json:"code_scanning_upload,omitempty"`
	ActionsRunnerRegistration *RateLimit `json:"actions_runner_registration,omitempty"`
	Scim *RateLimit `json:"scim,omitempty"`
	DependencySnapshots *RateLimit `json:"dependency_snapshots,omitempty"`
}

// NewRateLimitOverviewResources instantiates a new RateLimitOverviewResources object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRateLimitOverviewResources(core RateLimit, search RateLimit) *RateLimitOverviewResources {
	this := RateLimitOverviewResources{}
	this.Core = core
	this.Search = search
	return &this
}

// NewRateLimitOverviewResourcesWithDefaults instantiates a new RateLimitOverviewResources object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRateLimitOverviewResourcesWithDefaults() *RateLimitOverviewResources {
	this := RateLimitOverviewResources{}
	return &this
}

// GetCore returns the Core field value
func (o *RateLimitOverviewResources) GetCore() RateLimit {
	if o == nil {
		var ret RateLimit
		return ret
	}

	return o.Core
}

// GetCoreOk returns a tuple with the Core field value
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetCoreOk() (*RateLimit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Core, true
}

// SetCore sets field value
func (o *RateLimitOverviewResources) SetCore(v RateLimit) {
	o.Core = v
}

// GetGraphql returns the Graphql field value if set, zero value otherwise.
func (o *RateLimitOverviewResources) GetGraphql() RateLimit {
	if o == nil || o.Graphql == nil {
		var ret RateLimit
		return ret
	}
	return *o.Graphql
}

// GetGraphqlOk returns a tuple with the Graphql field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetGraphqlOk() (*RateLimit, bool) {
	if o == nil || o.Graphql == nil {
		return nil, false
	}
	return o.Graphql, true
}

// HasGraphql returns a boolean if a field has been set.
func (o *RateLimitOverviewResources) HasGraphql() bool {
	if o != nil && o.Graphql != nil {
		return true
	}

	return false
}

// SetGraphql gets a reference to the given RateLimit and assigns it to the Graphql field.
func (o *RateLimitOverviewResources) SetGraphql(v RateLimit) {
	o.Graphql = &v
}

// GetSearch returns the Search field value
func (o *RateLimitOverviewResources) GetSearch() RateLimit {
	if o == nil {
		var ret RateLimit
		return ret
	}

	return o.Search
}

// GetSearchOk returns a tuple with the Search field value
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetSearchOk() (*RateLimit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Search, true
}

// SetSearch sets field value
func (o *RateLimitOverviewResources) SetSearch(v RateLimit) {
	o.Search = v
}

// GetSourceImport returns the SourceImport field value if set, zero value otherwise.
func (o *RateLimitOverviewResources) GetSourceImport() RateLimit {
	if o == nil || o.SourceImport == nil {
		var ret RateLimit
		return ret
	}
	return *o.SourceImport
}

// GetSourceImportOk returns a tuple with the SourceImport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetSourceImportOk() (*RateLimit, bool) {
	if o == nil || o.SourceImport == nil {
		return nil, false
	}
	return o.SourceImport, true
}

// HasSourceImport returns a boolean if a field has been set.
func (o *RateLimitOverviewResources) HasSourceImport() bool {
	if o != nil && o.SourceImport != nil {
		return true
	}

	return false
}

// SetSourceImport gets a reference to the given RateLimit and assigns it to the SourceImport field.
func (o *RateLimitOverviewResources) SetSourceImport(v RateLimit) {
	o.SourceImport = &v
}

// GetIntegrationManifest returns the IntegrationManifest field value if set, zero value otherwise.
func (o *RateLimitOverviewResources) GetIntegrationManifest() RateLimit {
	if o == nil || o.IntegrationManifest == nil {
		var ret RateLimit
		return ret
	}
	return *o.IntegrationManifest
}

// GetIntegrationManifestOk returns a tuple with the IntegrationManifest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetIntegrationManifestOk() (*RateLimit, bool) {
	if o == nil || o.IntegrationManifest == nil {
		return nil, false
	}
	return o.IntegrationManifest, true
}

// HasIntegrationManifest returns a boolean if a field has been set.
func (o *RateLimitOverviewResources) HasIntegrationManifest() bool {
	if o != nil && o.IntegrationManifest != nil {
		return true
	}

	return false
}

// SetIntegrationManifest gets a reference to the given RateLimit and assigns it to the IntegrationManifest field.
func (o *RateLimitOverviewResources) SetIntegrationManifest(v RateLimit) {
	o.IntegrationManifest = &v
}

// GetCodeScanningUpload returns the CodeScanningUpload field value if set, zero value otherwise.
func (o *RateLimitOverviewResources) GetCodeScanningUpload() RateLimit {
	if o == nil || o.CodeScanningUpload == nil {
		var ret RateLimit
		return ret
	}
	return *o.CodeScanningUpload
}

// GetCodeScanningUploadOk returns a tuple with the CodeScanningUpload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetCodeScanningUploadOk() (*RateLimit, bool) {
	if o == nil || o.CodeScanningUpload == nil {
		return nil, false
	}
	return o.CodeScanningUpload, true
}

// HasCodeScanningUpload returns a boolean if a field has been set.
func (o *RateLimitOverviewResources) HasCodeScanningUpload() bool {
	if o != nil && o.CodeScanningUpload != nil {
		return true
	}

	return false
}

// SetCodeScanningUpload gets a reference to the given RateLimit and assigns it to the CodeScanningUpload field.
func (o *RateLimitOverviewResources) SetCodeScanningUpload(v RateLimit) {
	o.CodeScanningUpload = &v
}

// GetActionsRunnerRegistration returns the ActionsRunnerRegistration field value if set, zero value otherwise.
func (o *RateLimitOverviewResources) GetActionsRunnerRegistration() RateLimit {
	if o == nil || o.ActionsRunnerRegistration == nil {
		var ret RateLimit
		return ret
	}
	return *o.ActionsRunnerRegistration
}

// GetActionsRunnerRegistrationOk returns a tuple with the ActionsRunnerRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetActionsRunnerRegistrationOk() (*RateLimit, bool) {
	if o == nil || o.ActionsRunnerRegistration == nil {
		return nil, false
	}
	return o.ActionsRunnerRegistration, true
}

// HasActionsRunnerRegistration returns a boolean if a field has been set.
func (o *RateLimitOverviewResources) HasActionsRunnerRegistration() bool {
	if o != nil && o.ActionsRunnerRegistration != nil {
		return true
	}

	return false
}

// SetActionsRunnerRegistration gets a reference to the given RateLimit and assigns it to the ActionsRunnerRegistration field.
func (o *RateLimitOverviewResources) SetActionsRunnerRegistration(v RateLimit) {
	o.ActionsRunnerRegistration = &v
}

// GetScim returns the Scim field value if set, zero value otherwise.
func (o *RateLimitOverviewResources) GetScim() RateLimit {
	if o == nil || o.Scim == nil {
		var ret RateLimit
		return ret
	}
	return *o.Scim
}

// GetScimOk returns a tuple with the Scim field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetScimOk() (*RateLimit, bool) {
	if o == nil || o.Scim == nil {
		return nil, false
	}
	return o.Scim, true
}

// HasScim returns a boolean if a field has been set.
func (o *RateLimitOverviewResources) HasScim() bool {
	if o != nil && o.Scim != nil {
		return true
	}

	return false
}

// SetScim gets a reference to the given RateLimit and assigns it to the Scim field.
func (o *RateLimitOverviewResources) SetScim(v RateLimit) {
	o.Scim = &v
}

// GetDependencySnapshots returns the DependencySnapshots field value if set, zero value otherwise.
func (o *RateLimitOverviewResources) GetDependencySnapshots() RateLimit {
	if o == nil || o.DependencySnapshots == nil {
		var ret RateLimit
		return ret
	}
	return *o.DependencySnapshots
}

// GetDependencySnapshotsOk returns a tuple with the DependencySnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RateLimitOverviewResources) GetDependencySnapshotsOk() (*RateLimit, bool) {
	if o == nil || o.DependencySnapshots == nil {
		return nil, false
	}
	return o.DependencySnapshots, true
}

// HasDependencySnapshots returns a boolean if a field has been set.
func (o *RateLimitOverviewResources) HasDependencySnapshots() bool {
	if o != nil && o.DependencySnapshots != nil {
		return true
	}

	return false
}

// SetDependencySnapshots gets a reference to the given RateLimit and assigns it to the DependencySnapshots field.
func (o *RateLimitOverviewResources) SetDependencySnapshots(v RateLimit) {
	o.DependencySnapshots = &v
}

func (o RateLimitOverviewResources) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["core"] = o.Core
	}
	if o.Graphql != nil {
		toSerialize["graphql"] = o.Graphql
	}
	if true {
		toSerialize["search"] = o.Search
	}
	if o.SourceImport != nil {
		toSerialize["source_import"] = o.SourceImport
	}
	if o.IntegrationManifest != nil {
		toSerialize["integration_manifest"] = o.IntegrationManifest
	}
	if o.CodeScanningUpload != nil {
		toSerialize["code_scanning_upload"] = o.CodeScanningUpload
	}
	if o.ActionsRunnerRegistration != nil {
		toSerialize["actions_runner_registration"] = o.ActionsRunnerRegistration
	}
	if o.Scim != nil {
		toSerialize["scim"] = o.Scim
	}
	if o.DependencySnapshots != nil {
		toSerialize["dependency_snapshots"] = o.DependencySnapshots
	}
	return json.Marshal(toSerialize)
}

type NullableRateLimitOverviewResources struct {
	value *RateLimitOverviewResources
	isSet bool
}

func (v NullableRateLimitOverviewResources) Get() *RateLimitOverviewResources {
	return v.value
}

func (v *NullableRateLimitOverviewResources) Set(val *RateLimitOverviewResources) {
	v.value = val
	v.isSet = true
}

func (v NullableRateLimitOverviewResources) IsSet() bool {
	return v.isSet
}

func (v *NullableRateLimitOverviewResources) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRateLimitOverviewResources(val *RateLimitOverviewResources) *NullableRateLimitOverviewResources {
	return &NullableRateLimitOverviewResources{value: val, isSet: true}
}

func (v NullableRateLimitOverviewResources) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRateLimitOverviewResources) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


