/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// ProjectColumn Project columns contain cards of work.
type ProjectColumn struct {
	Url string `json:"url"`
	ProjectUrl string `json:"project_url"`
	CardsUrl string `json:"cards_url"`
	// The unique identifier of the project column
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	// Name of the project column
	Name string `json:"name"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
}

// NewProjectColumn instantiates a new ProjectColumn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectColumn(url string, projectUrl string, cardsUrl string, id int32, nodeId string, name string, createdAt time.Time, updatedAt time.Time) *ProjectColumn {
	this := ProjectColumn{}
	this.Url = url
	this.ProjectUrl = projectUrl
	this.CardsUrl = cardsUrl
	this.Id = id
	this.NodeId = nodeId
	this.Name = name
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewProjectColumnWithDefaults instantiates a new ProjectColumn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectColumnWithDefaults() *ProjectColumn {
	this := ProjectColumn{}
	return &this
}

// GetUrl returns the Url field value
func (o *ProjectColumn) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ProjectColumn) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ProjectColumn) SetUrl(v string) {
	o.Url = v
}

// GetProjectUrl returns the ProjectUrl field value
func (o *ProjectColumn) GetProjectUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectUrl
}

// GetProjectUrlOk returns a tuple with the ProjectUrl field value
// and a boolean to check if the value has been set.
func (o *ProjectColumn) GetProjectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectUrl, true
}

// SetProjectUrl sets field value
func (o *ProjectColumn) SetProjectUrl(v string) {
	o.ProjectUrl = v
}

// GetCardsUrl returns the CardsUrl field value
func (o *ProjectColumn) GetCardsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CardsUrl
}

// GetCardsUrlOk returns a tuple with the CardsUrl field value
// and a boolean to check if the value has been set.
func (o *ProjectColumn) GetCardsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CardsUrl, true
}

// SetCardsUrl sets field value
func (o *ProjectColumn) SetCardsUrl(v string) {
	o.CardsUrl = v
}

// GetId returns the Id field value
func (o *ProjectColumn) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProjectColumn) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProjectColumn) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *ProjectColumn) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ProjectColumn) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ProjectColumn) SetNodeId(v string) {
	o.NodeId = v
}

// GetName returns the Name field value
func (o *ProjectColumn) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProjectColumn) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProjectColumn) SetName(v string) {
	o.Name = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ProjectColumn) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ProjectColumn) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ProjectColumn) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ProjectColumn) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ProjectColumn) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ProjectColumn) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o ProjectColumn) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["project_url"] = o.ProjectUrl
	}
	if true {
		toSerialize["cards_url"] = o.CardsUrl
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableProjectColumn struct {
	value *ProjectColumn
	isSet bool
}

func (v NullableProjectColumn) Get() *ProjectColumn {
	return v.value
}

func (v *NullableProjectColumn) Set(val *ProjectColumn) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectColumn) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectColumn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectColumn(val *ProjectColumn) *NullableProjectColumn {
	return &NullableProjectColumn{value: val, isSet: true}
}

func (v NullableProjectColumn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectColumn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


