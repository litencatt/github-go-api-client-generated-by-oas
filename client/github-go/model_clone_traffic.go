/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CloneTraffic Clone Traffic
type CloneTraffic struct {
	Count int32 `json:"count"`
	Uniques int32 `json:"uniques"`
	Clones []Traffic `json:"clones"`
}

// NewCloneTraffic instantiates a new CloneTraffic object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCloneTraffic(count int32, uniques int32, clones []Traffic) *CloneTraffic {
	this := CloneTraffic{}
	this.Count = count
	this.Uniques = uniques
	this.Clones = clones
	return &this
}

// NewCloneTrafficWithDefaults instantiates a new CloneTraffic object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCloneTrafficWithDefaults() *CloneTraffic {
	this := CloneTraffic{}
	return &this
}

// GetCount returns the Count field value
func (o *CloneTraffic) GetCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Count
}

// GetCountOk returns a tuple with the Count field value
// and a boolean to check if the value has been set.
func (o *CloneTraffic) GetCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Count, true
}

// SetCount sets field value
func (o *CloneTraffic) SetCount(v int32) {
	o.Count = v
}

// GetUniques returns the Uniques field value
func (o *CloneTraffic) GetUniques() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Uniques
}

// GetUniquesOk returns a tuple with the Uniques field value
// and a boolean to check if the value has been set.
func (o *CloneTraffic) GetUniquesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uniques, true
}

// SetUniques sets field value
func (o *CloneTraffic) SetUniques(v int32) {
	o.Uniques = v
}

// GetClones returns the Clones field value
func (o *CloneTraffic) GetClones() []Traffic {
	if o == nil {
		var ret []Traffic
		return ret
	}

	return o.Clones
}

// GetClonesOk returns a tuple with the Clones field value
// and a boolean to check if the value has been set.
func (o *CloneTraffic) GetClonesOk() ([]Traffic, bool) {
	if o == nil {
		return nil, false
	}
	return o.Clones, true
}

// SetClones sets field value
func (o *CloneTraffic) SetClones(v []Traffic) {
	o.Clones = v
}

func (o CloneTraffic) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["count"] = o.Count
	}
	if true {
		toSerialize["uniques"] = o.Uniques
	}
	if true {
		toSerialize["clones"] = o.Clones
	}
	return json.Marshal(toSerialize)
}

type NullableCloneTraffic struct {
	value *CloneTraffic
	isSet bool
}

func (v NullableCloneTraffic) Get() *CloneTraffic {
	return v.value
}

func (v *NullableCloneTraffic) Set(val *CloneTraffic) {
	v.value = val
	v.isSet = true
}

func (v NullableCloneTraffic) IsSet() bool {
	return v.isSet
}

func (v *NullableCloneTraffic) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCloneTraffic(val *CloneTraffic) *NullableCloneTraffic {
	return &NullableCloneTraffic{value: val, isSet: true}
}

func (v NullableCloneTraffic) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCloneTraffic) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


