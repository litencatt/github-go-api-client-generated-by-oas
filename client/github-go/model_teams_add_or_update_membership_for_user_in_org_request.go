/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// TeamsAddOrUpdateMembershipForUserInOrgRequest struct for TeamsAddOrUpdateMembershipForUserInOrgRequest
type TeamsAddOrUpdateMembershipForUserInOrgRequest struct {
	// The role that this user should have in the team.
	Role *string `json:"role,omitempty"`
}

// NewTeamsAddOrUpdateMembershipForUserInOrgRequest instantiates a new TeamsAddOrUpdateMembershipForUserInOrgRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamsAddOrUpdateMembershipForUserInOrgRequest() *TeamsAddOrUpdateMembershipForUserInOrgRequest {
	this := TeamsAddOrUpdateMembershipForUserInOrgRequest{}
	var role string = "member"
	this.Role = &role
	return &this
}

// NewTeamsAddOrUpdateMembershipForUserInOrgRequestWithDefaults instantiates a new TeamsAddOrUpdateMembershipForUserInOrgRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamsAddOrUpdateMembershipForUserInOrgRequestWithDefaults() *TeamsAddOrUpdateMembershipForUserInOrgRequest {
	this := TeamsAddOrUpdateMembershipForUserInOrgRequest{}
	var role string = "member"
	this.Role = &role
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *TeamsAddOrUpdateMembershipForUserInOrgRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamsAddOrUpdateMembershipForUserInOrgRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *TeamsAddOrUpdateMembershipForUserInOrgRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *TeamsAddOrUpdateMembershipForUserInOrgRequest) SetRole(v string) {
	o.Role = &v
}

func (o TeamsAddOrUpdateMembershipForUserInOrgRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableTeamsAddOrUpdateMembershipForUserInOrgRequest struct {
	value *TeamsAddOrUpdateMembershipForUserInOrgRequest
	isSet bool
}

func (v NullableTeamsAddOrUpdateMembershipForUserInOrgRequest) Get() *TeamsAddOrUpdateMembershipForUserInOrgRequest {
	return v.value
}

func (v *NullableTeamsAddOrUpdateMembershipForUserInOrgRequest) Set(val *TeamsAddOrUpdateMembershipForUserInOrgRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamsAddOrUpdateMembershipForUserInOrgRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamsAddOrUpdateMembershipForUserInOrgRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamsAddOrUpdateMembershipForUserInOrgRequest(val *TeamsAddOrUpdateMembershipForUserInOrgRequest) *NullableTeamsAddOrUpdateMembershipForUserInOrgRequest {
	return &NullableTeamsAddOrUpdateMembershipForUserInOrgRequest{value: val, isSet: true}
}

func (v NullableTeamsAddOrUpdateMembershipForUserInOrgRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamsAddOrUpdateMembershipForUserInOrgRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


