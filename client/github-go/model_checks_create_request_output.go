/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ChecksCreateRequestOutput Check runs can accept a variety of data in the `output` object, including a `title` and `summary` and can optionally provide descriptive details about the run. See the [`output` object](https://docs.github.com/rest/reference/checks#output-object) description.
type ChecksCreateRequestOutput struct {
	// The title of the check run.
	Title string `json:"title"`
	// The summary of the check run. This parameter supports Markdown.
	Summary string `json:"summary"`
	// The details of the check run. This parameter supports Markdown.
	Text *string `json:"text,omitempty"`
	// Adds information from your analysis to specific lines of code. Annotations are visible on GitHub in the **Checks** and **Files changed** tab of the pull request. The Checks API limits the number of annotations to a maximum of 50 per API request. To create more than 50 annotations, you have to make multiple requests to the [Update a check run](https://docs.github.com/rest/reference/checks#update-a-check-run) endpoint. Each time you update the check run, annotations are appended to the list of annotations that already exist for the check run. For details about how you can view annotations on GitHub, see \"[About status checks](https://docs.github.com/articles/about-status-checks#checks)\". See the [`annotations` object](https://docs.github.com/rest/reference/checks#annotations-object) description for details about how to use this parameter.
	Annotations []ChecksCreateRequestOutputAnnotationsInner `json:"annotations,omitempty"`
	// Adds images to the output displayed in the GitHub pull request UI. See the [`images` object](https://docs.github.com/rest/reference/checks#images-object) description for details.
	Images []ChecksCreateRequestOutputImagesInner `json:"images,omitempty"`
}

// NewChecksCreateRequestOutput instantiates a new ChecksCreateRequestOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChecksCreateRequestOutput(title string, summary string) *ChecksCreateRequestOutput {
	this := ChecksCreateRequestOutput{}
	this.Title = title
	this.Summary = summary
	return &this
}

// NewChecksCreateRequestOutputWithDefaults instantiates a new ChecksCreateRequestOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChecksCreateRequestOutputWithDefaults() *ChecksCreateRequestOutput {
	this := ChecksCreateRequestOutput{}
	return &this
}

// GetTitle returns the Title field value
func (o *ChecksCreateRequestOutput) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ChecksCreateRequestOutput) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ChecksCreateRequestOutput) SetTitle(v string) {
	o.Title = v
}

// GetSummary returns the Summary field value
func (o *ChecksCreateRequestOutput) GetSummary() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value
// and a boolean to check if the value has been set.
func (o *ChecksCreateRequestOutput) GetSummaryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Summary, true
}

// SetSummary sets field value
func (o *ChecksCreateRequestOutput) SetSummary(v string) {
	o.Summary = v
}

// GetText returns the Text field value if set, zero value otherwise.
func (o *ChecksCreateRequestOutput) GetText() string {
	if o == nil || o.Text == nil {
		var ret string
		return ret
	}
	return *o.Text
}

// GetTextOk returns a tuple with the Text field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChecksCreateRequestOutput) GetTextOk() (*string, bool) {
	if o == nil || o.Text == nil {
		return nil, false
	}
	return o.Text, true
}

// HasText returns a boolean if a field has been set.
func (o *ChecksCreateRequestOutput) HasText() bool {
	if o != nil && o.Text != nil {
		return true
	}

	return false
}

// SetText gets a reference to the given string and assigns it to the Text field.
func (o *ChecksCreateRequestOutput) SetText(v string) {
	o.Text = &v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *ChecksCreateRequestOutput) GetAnnotations() []ChecksCreateRequestOutputAnnotationsInner {
	if o == nil || o.Annotations == nil {
		var ret []ChecksCreateRequestOutputAnnotationsInner
		return ret
	}
	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChecksCreateRequestOutput) GetAnnotationsOk() ([]ChecksCreateRequestOutputAnnotationsInner, bool) {
	if o == nil || o.Annotations == nil {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *ChecksCreateRequestOutput) HasAnnotations() bool {
	if o != nil && o.Annotations != nil {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given []ChecksCreateRequestOutputAnnotationsInner and assigns it to the Annotations field.
func (o *ChecksCreateRequestOutput) SetAnnotations(v []ChecksCreateRequestOutputAnnotationsInner) {
	o.Annotations = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *ChecksCreateRequestOutput) GetImages() []ChecksCreateRequestOutputImagesInner {
	if o == nil || o.Images == nil {
		var ret []ChecksCreateRequestOutputImagesInner
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChecksCreateRequestOutput) GetImagesOk() ([]ChecksCreateRequestOutputImagesInner, bool) {
	if o == nil || o.Images == nil {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ChecksCreateRequestOutput) HasImages() bool {
	if o != nil && o.Images != nil {
		return true
	}

	return false
}

// SetImages gets a reference to the given []ChecksCreateRequestOutputImagesInner and assigns it to the Images field.
func (o *ChecksCreateRequestOutput) SetImages(v []ChecksCreateRequestOutputImagesInner) {
	o.Images = v
}

func (o ChecksCreateRequestOutput) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["summary"] = o.Summary
	}
	if o.Text != nil {
		toSerialize["text"] = o.Text
	}
	if o.Annotations != nil {
		toSerialize["annotations"] = o.Annotations
	}
	if o.Images != nil {
		toSerialize["images"] = o.Images
	}
	return json.Marshal(toSerialize)
}

type NullableChecksCreateRequestOutput struct {
	value *ChecksCreateRequestOutput
	isSet bool
}

func (v NullableChecksCreateRequestOutput) Get() *ChecksCreateRequestOutput {
	return v.value
}

func (v *NullableChecksCreateRequestOutput) Set(val *ChecksCreateRequestOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableChecksCreateRequestOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableChecksCreateRequestOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChecksCreateRequestOutput(val *ChecksCreateRequestOutput) *NullableChecksCreateRequestOutput {
	return &NullableChecksCreateRequestOutput{value: val, isSet: true}
}

func (v NullableChecksCreateRequestOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChecksCreateRequestOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


