/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposCreateOrUpdateFileContentsRequestAuthor The author of the file. Default: The `committer` or the authenticated user if you omit `committer`.
type ReposCreateOrUpdateFileContentsRequestAuthor struct {
	// The name of the author or committer of the commit. You'll receive a `422` status code if `name` is omitted.
	Name string `json:"name"`
	// The email of the author or committer of the commit. You'll receive a `422` status code if `email` is omitted.
	Email string `json:"email"`
	Date *string `json:"date,omitempty"`
}

// NewReposCreateOrUpdateFileContentsRequestAuthor instantiates a new ReposCreateOrUpdateFileContentsRequestAuthor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposCreateOrUpdateFileContentsRequestAuthor(name string, email string) *ReposCreateOrUpdateFileContentsRequestAuthor {
	this := ReposCreateOrUpdateFileContentsRequestAuthor{}
	this.Name = name
	this.Email = email
	return &this
}

// NewReposCreateOrUpdateFileContentsRequestAuthorWithDefaults instantiates a new ReposCreateOrUpdateFileContentsRequestAuthor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposCreateOrUpdateFileContentsRequestAuthorWithDefaults() *ReposCreateOrUpdateFileContentsRequestAuthor {
	this := ReposCreateOrUpdateFileContentsRequestAuthor{}
	return &this
}

// GetName returns the Name field value
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) SetName(v string) {
	o.Name = v
}

// GetEmail returns the Email field value
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) SetEmail(v string) {
	o.Email = v
}

// GetDate returns the Date field value if set, zero value otherwise.
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) GetDate() string {
	if o == nil || o.Date == nil {
		var ret string
		return ret
	}
	return *o.Date
}

// GetDateOk returns a tuple with the Date field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) GetDateOk() (*string, bool) {
	if o == nil || o.Date == nil {
		return nil, false
	}
	return o.Date, true
}

// HasDate returns a boolean if a field has been set.
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) HasDate() bool {
	if o != nil && o.Date != nil {
		return true
	}

	return false
}

// SetDate gets a reference to the given string and assigns it to the Date field.
func (o *ReposCreateOrUpdateFileContentsRequestAuthor) SetDate(v string) {
	o.Date = &v
}

func (o ReposCreateOrUpdateFileContentsRequestAuthor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.Date != nil {
		toSerialize["date"] = o.Date
	}
	return json.Marshal(toSerialize)
}

type NullableReposCreateOrUpdateFileContentsRequestAuthor struct {
	value *ReposCreateOrUpdateFileContentsRequestAuthor
	isSet bool
}

func (v NullableReposCreateOrUpdateFileContentsRequestAuthor) Get() *ReposCreateOrUpdateFileContentsRequestAuthor {
	return v.value
}

func (v *NullableReposCreateOrUpdateFileContentsRequestAuthor) Set(val *ReposCreateOrUpdateFileContentsRequestAuthor) {
	v.value = val
	v.isSet = true
}

func (v NullableReposCreateOrUpdateFileContentsRequestAuthor) IsSet() bool {
	return v.isSet
}

func (v *NullableReposCreateOrUpdateFileContentsRequestAuthor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposCreateOrUpdateFileContentsRequestAuthor(val *ReposCreateOrUpdateFileContentsRequestAuthor) *NullableReposCreateOrUpdateFileContentsRequestAuthor {
	return &NullableReposCreateOrUpdateFileContentsRequestAuthor{value: val, isSet: true}
}

func (v NullableReposCreateOrUpdateFileContentsRequestAuthor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposCreateOrUpdateFileContentsRequestAuthor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


