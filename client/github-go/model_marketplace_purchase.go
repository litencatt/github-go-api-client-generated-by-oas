/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// MarketplacePurchase Marketplace Purchase
type MarketplacePurchase struct {
	Url string `json:"url"`
	Type string `json:"type"`
	Id int32 `json:"id"`
	Login string `json:"login"`
	OrganizationBillingEmail *string `json:"organization_billing_email,omitempty"`
	Email NullableString `json:"email,omitempty"`
	MarketplacePendingChange NullableMarketplacePurchaseMarketplacePendingChange `json:"marketplace_pending_change,omitempty"`
	MarketplacePurchase MarketplacePurchaseMarketplacePurchase `json:"marketplace_purchase"`
}

// NewMarketplacePurchase instantiates a new MarketplacePurchase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplacePurchase(url string, type_ string, id int32, login string, marketplacePurchase MarketplacePurchaseMarketplacePurchase) *MarketplacePurchase {
	this := MarketplacePurchase{}
	this.Url = url
	this.Type = type_
	this.Id = id
	this.Login = login
	this.MarketplacePurchase = marketplacePurchase
	return &this
}

// NewMarketplacePurchaseWithDefaults instantiates a new MarketplacePurchase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplacePurchaseWithDefaults() *MarketplacePurchase {
	this := MarketplacePurchase{}
	return &this
}

// GetUrl returns the Url field value
func (o *MarketplacePurchase) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *MarketplacePurchase) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *MarketplacePurchase) SetUrl(v string) {
	o.Url = v
}

// GetType returns the Type field value
func (o *MarketplacePurchase) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *MarketplacePurchase) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *MarketplacePurchase) SetType(v string) {
	o.Type = v
}

// GetId returns the Id field value
func (o *MarketplacePurchase) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MarketplacePurchase) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MarketplacePurchase) SetId(v int32) {
	o.Id = v
}

// GetLogin returns the Login field value
func (o *MarketplacePurchase) GetLogin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Login
}

// GetLoginOk returns a tuple with the Login field value
// and a boolean to check if the value has been set.
func (o *MarketplacePurchase) GetLoginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Login, true
}

// SetLogin sets field value
func (o *MarketplacePurchase) SetLogin(v string) {
	o.Login = v
}

// GetOrganizationBillingEmail returns the OrganizationBillingEmail field value if set, zero value otherwise.
func (o *MarketplacePurchase) GetOrganizationBillingEmail() string {
	if o == nil || o.OrganizationBillingEmail == nil {
		var ret string
		return ret
	}
	return *o.OrganizationBillingEmail
}

// GetOrganizationBillingEmailOk returns a tuple with the OrganizationBillingEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchase) GetOrganizationBillingEmailOk() (*string, bool) {
	if o == nil || o.OrganizationBillingEmail == nil {
		return nil, false
	}
	return o.OrganizationBillingEmail, true
}

// HasOrganizationBillingEmail returns a boolean if a field has been set.
func (o *MarketplacePurchase) HasOrganizationBillingEmail() bool {
	if o != nil && o.OrganizationBillingEmail != nil {
		return true
	}

	return false
}

// SetOrganizationBillingEmail gets a reference to the given string and assigns it to the OrganizationBillingEmail field.
func (o *MarketplacePurchase) SetOrganizationBillingEmail(v string) {
	o.OrganizationBillingEmail = &v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketplacePurchase) GetEmail() string {
	if o == nil || o.Email.Get() == nil {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketplacePurchase) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *MarketplacePurchase) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *MarketplacePurchase) SetEmail(v string) {
	o.Email.Set(&v)
}
// SetEmailNil sets the value for Email to be an explicit nil
func (o *MarketplacePurchase) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *MarketplacePurchase) UnsetEmail() {
	o.Email.Unset()
}

// GetMarketplacePendingChange returns the MarketplacePendingChange field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketplacePurchase) GetMarketplacePendingChange() MarketplacePurchaseMarketplacePendingChange {
	if o == nil || o.MarketplacePendingChange.Get() == nil {
		var ret MarketplacePurchaseMarketplacePendingChange
		return ret
	}
	return *o.MarketplacePendingChange.Get()
}

// GetMarketplacePendingChangeOk returns a tuple with the MarketplacePendingChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketplacePurchase) GetMarketplacePendingChangeOk() (*MarketplacePurchaseMarketplacePendingChange, bool) {
	if o == nil {
		return nil, false
	}
	return o.MarketplacePendingChange.Get(), o.MarketplacePendingChange.IsSet()
}

// HasMarketplacePendingChange returns a boolean if a field has been set.
func (o *MarketplacePurchase) HasMarketplacePendingChange() bool {
	if o != nil && o.MarketplacePendingChange.IsSet() {
		return true
	}

	return false
}

// SetMarketplacePendingChange gets a reference to the given NullableMarketplacePurchaseMarketplacePendingChange and assigns it to the MarketplacePendingChange field.
func (o *MarketplacePurchase) SetMarketplacePendingChange(v MarketplacePurchaseMarketplacePendingChange) {
	o.MarketplacePendingChange.Set(&v)
}
// SetMarketplacePendingChangeNil sets the value for MarketplacePendingChange to be an explicit nil
func (o *MarketplacePurchase) SetMarketplacePendingChangeNil() {
	o.MarketplacePendingChange.Set(nil)
}

// UnsetMarketplacePendingChange ensures that no value is present for MarketplacePendingChange, not even an explicit nil
func (o *MarketplacePurchase) UnsetMarketplacePendingChange() {
	o.MarketplacePendingChange.Unset()
}

// GetMarketplacePurchase returns the MarketplacePurchase field value
func (o *MarketplacePurchase) GetMarketplacePurchase() MarketplacePurchaseMarketplacePurchase {
	if o == nil {
		var ret MarketplacePurchaseMarketplacePurchase
		return ret
	}

	return o.MarketplacePurchase
}

// GetMarketplacePurchaseOk returns a tuple with the MarketplacePurchase field value
// and a boolean to check if the value has been set.
func (o *MarketplacePurchase) GetMarketplacePurchaseOk() (*MarketplacePurchaseMarketplacePurchase, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketplacePurchase, true
}

// SetMarketplacePurchase sets field value
func (o *MarketplacePurchase) SetMarketplacePurchase(v MarketplacePurchaseMarketplacePurchase) {
	o.MarketplacePurchase = v
}

func (o MarketplacePurchase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["login"] = o.Login
	}
	if o.OrganizationBillingEmail != nil {
		toSerialize["organization_billing_email"] = o.OrganizationBillingEmail
	}
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if o.MarketplacePendingChange.IsSet() {
		toSerialize["marketplace_pending_change"] = o.MarketplacePendingChange.Get()
	}
	if true {
		toSerialize["marketplace_purchase"] = o.MarketplacePurchase
	}
	return json.Marshal(toSerialize)
}

type NullableMarketplacePurchase struct {
	value *MarketplacePurchase
	isSet bool
}

func (v NullableMarketplacePurchase) Get() *MarketplacePurchase {
	return v.value
}

func (v *NullableMarketplacePurchase) Set(val *MarketplacePurchase) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplacePurchase) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplacePurchase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplacePurchase(val *MarketplacePurchase) *NullableMarketplacePurchase {
	return &NullableMarketplacePurchase{value: val, isSet: true}
}

func (v NullableMarketplacePurchase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplacePurchase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


