/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"fmt"
)

// ActionsDefaultWorkflowPermissions The default workflow permissions granted to the GITHUB_TOKEN when running workflows.
type ActionsDefaultWorkflowPermissions string

// List of actions-default-workflow-permissions
const (
	READ ActionsDefaultWorkflowPermissions = "read"
	WRITE ActionsDefaultWorkflowPermissions = "write"
)

// All allowed values of ActionsDefaultWorkflowPermissions enum
var AllowedActionsDefaultWorkflowPermissionsEnumValues = []ActionsDefaultWorkflowPermissions{
	"read",
	"write",
}

func (v *ActionsDefaultWorkflowPermissions) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ActionsDefaultWorkflowPermissions(value)
	for _, existing := range AllowedActionsDefaultWorkflowPermissionsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ActionsDefaultWorkflowPermissions", value)
}

// NewActionsDefaultWorkflowPermissionsFromValue returns a pointer to a valid ActionsDefaultWorkflowPermissions
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewActionsDefaultWorkflowPermissionsFromValue(v string) (*ActionsDefaultWorkflowPermissions, error) {
	ev := ActionsDefaultWorkflowPermissions(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ActionsDefaultWorkflowPermissions: valid values are %v", v, AllowedActionsDefaultWorkflowPermissionsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ActionsDefaultWorkflowPermissions) IsValid() bool {
	for _, existing := range AllowedActionsDefaultWorkflowPermissionsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to actions-default-workflow-permissions value
func (v ActionsDefaultWorkflowPermissions) Ptr() *ActionsDefaultWorkflowPermissions {
	return &v
}

type NullableActionsDefaultWorkflowPermissions struct {
	value *ActionsDefaultWorkflowPermissions
	isSet bool
}

func (v NullableActionsDefaultWorkflowPermissions) Get() *ActionsDefaultWorkflowPermissions {
	return v.value
}

func (v *NullableActionsDefaultWorkflowPermissions) Set(val *ActionsDefaultWorkflowPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsDefaultWorkflowPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsDefaultWorkflowPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsDefaultWorkflowPermissions(val *ActionsDefaultWorkflowPermissions) *NullableActionsDefaultWorkflowPermissions {
	return &NullableActionsDefaultWorkflowPermissions{value: val, isSet: true}
}

func (v NullableActionsDefaultWorkflowPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsDefaultWorkflowPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

