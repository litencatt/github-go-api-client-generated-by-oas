/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// NullableCommunityHealthFile struct for NullableCommunityHealthFile
type NullableCommunityHealthFile struct {
	Url string `json:"url"`
	HtmlUrl string `json:"html_url"`
}

// NewNullableCommunityHealthFile instantiates a new NullableCommunityHealthFile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNullableCommunityHealthFile(url string, htmlUrl string) *NullableCommunityHealthFile {
	this := NullableCommunityHealthFile{}
	this.Url = url
	this.HtmlUrl = htmlUrl
	return &this
}

// NewNullableCommunityHealthFileWithDefaults instantiates a new NullableCommunityHealthFile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNullableCommunityHealthFileWithDefaults() *NullableCommunityHealthFile {
	this := NullableCommunityHealthFile{}
	return &this
}

// GetUrl returns the Url field value
func (o *NullableCommunityHealthFile) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *NullableCommunityHealthFile) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *NullableCommunityHealthFile) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *NullableCommunityHealthFile) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *NullableCommunityHealthFile) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *NullableCommunityHealthFile) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

func (o NullableCommunityHealthFile) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	return json.Marshal(toSerialize)
}

type NullableNullableCommunityHealthFile struct {
	value *NullableCommunityHealthFile
	isSet bool
}

func (v NullableNullableCommunityHealthFile) Get() *NullableCommunityHealthFile {
	return v.value
}

func (v *NullableNullableCommunityHealthFile) Set(val *NullableCommunityHealthFile) {
	v.value = val
	v.isSet = true
}

func (v NullableNullableCommunityHealthFile) IsSet() bool {
	return v.isSet
}

func (v *NullableNullableCommunityHealthFile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNullableCommunityHealthFile(val *NullableCommunityHealthFile) *NullableNullableCommunityHealthFile {
	return &NullableNullableCommunityHealthFile{value: val, isSet: true}
}

func (v NullableNullableCommunityHealthFile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNullableCommunityHealthFile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


