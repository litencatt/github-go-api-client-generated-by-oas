/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"fmt"
)

// CodespacesCreateForAuthenticatedUserRequest - struct for CodespacesCreateForAuthenticatedUserRequest
type CodespacesCreateForAuthenticatedUserRequest struct {
	CodespacesCreateForAuthenticatedUserRequestOneOf *CodespacesCreateForAuthenticatedUserRequestOneOf
	CodespacesCreateForAuthenticatedUserRequestOneOf1 *CodespacesCreateForAuthenticatedUserRequestOneOf1
}

// CodespacesCreateForAuthenticatedUserRequestOneOfAsCodespacesCreateForAuthenticatedUserRequest is a convenience function that returns CodespacesCreateForAuthenticatedUserRequestOneOf wrapped in CodespacesCreateForAuthenticatedUserRequest
func CodespacesCreateForAuthenticatedUserRequestOneOfAsCodespacesCreateForAuthenticatedUserRequest(v *CodespacesCreateForAuthenticatedUserRequestOneOf) CodespacesCreateForAuthenticatedUserRequest {
	return CodespacesCreateForAuthenticatedUserRequest{
		CodespacesCreateForAuthenticatedUserRequestOneOf: v,
	}
}

// CodespacesCreateForAuthenticatedUserRequestOneOf1AsCodespacesCreateForAuthenticatedUserRequest is a convenience function that returns CodespacesCreateForAuthenticatedUserRequestOneOf1 wrapped in CodespacesCreateForAuthenticatedUserRequest
func CodespacesCreateForAuthenticatedUserRequestOneOf1AsCodespacesCreateForAuthenticatedUserRequest(v *CodespacesCreateForAuthenticatedUserRequestOneOf1) CodespacesCreateForAuthenticatedUserRequest {
	return CodespacesCreateForAuthenticatedUserRequest{
		CodespacesCreateForAuthenticatedUserRequestOneOf1: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *CodespacesCreateForAuthenticatedUserRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CodespacesCreateForAuthenticatedUserRequestOneOf
	err = newStrictDecoder(data).Decode(&dst.CodespacesCreateForAuthenticatedUserRequestOneOf)
	if err == nil {
		jsonCodespacesCreateForAuthenticatedUserRequestOneOf, _ := json.Marshal(dst.CodespacesCreateForAuthenticatedUserRequestOneOf)
		if string(jsonCodespacesCreateForAuthenticatedUserRequestOneOf) == "{}" { // empty struct
			dst.CodespacesCreateForAuthenticatedUserRequestOneOf = nil
		} else {
			match++
		}
	} else {
		dst.CodespacesCreateForAuthenticatedUserRequestOneOf = nil
	}

	// try to unmarshal data into CodespacesCreateForAuthenticatedUserRequestOneOf1
	err = newStrictDecoder(data).Decode(&dst.CodespacesCreateForAuthenticatedUserRequestOneOf1)
	if err == nil {
		jsonCodespacesCreateForAuthenticatedUserRequestOneOf1, _ := json.Marshal(dst.CodespacesCreateForAuthenticatedUserRequestOneOf1)
		if string(jsonCodespacesCreateForAuthenticatedUserRequestOneOf1) == "{}" { // empty struct
			dst.CodespacesCreateForAuthenticatedUserRequestOneOf1 = nil
		} else {
			match++
		}
	} else {
		dst.CodespacesCreateForAuthenticatedUserRequestOneOf1 = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CodespacesCreateForAuthenticatedUserRequestOneOf = nil
		dst.CodespacesCreateForAuthenticatedUserRequestOneOf1 = nil

		return fmt.Errorf("Data matches more than one schema in oneOf(CodespacesCreateForAuthenticatedUserRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("Data failed to match schemas in oneOf(CodespacesCreateForAuthenticatedUserRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src CodespacesCreateForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	if src.CodespacesCreateForAuthenticatedUserRequestOneOf != nil {
		return json.Marshal(&src.CodespacesCreateForAuthenticatedUserRequestOneOf)
	}

	if src.CodespacesCreateForAuthenticatedUserRequestOneOf1 != nil {
		return json.Marshal(&src.CodespacesCreateForAuthenticatedUserRequestOneOf1)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *CodespacesCreateForAuthenticatedUserRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CodespacesCreateForAuthenticatedUserRequestOneOf != nil {
		return obj.CodespacesCreateForAuthenticatedUserRequestOneOf
	}

	if obj.CodespacesCreateForAuthenticatedUserRequestOneOf1 != nil {
		return obj.CodespacesCreateForAuthenticatedUserRequestOneOf1
	}

	// all schemas are nil
	return nil
}

type NullableCodespacesCreateForAuthenticatedUserRequest struct {
	value *CodespacesCreateForAuthenticatedUserRequest
	isSet bool
}

func (v NullableCodespacesCreateForAuthenticatedUserRequest) Get() *CodespacesCreateForAuthenticatedUserRequest {
	return v.value
}

func (v *NullableCodespacesCreateForAuthenticatedUserRequest) Set(val *CodespacesCreateForAuthenticatedUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCodespacesCreateForAuthenticatedUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCodespacesCreateForAuthenticatedUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodespacesCreateForAuthenticatedUserRequest(val *CodespacesCreateForAuthenticatedUserRequest) *NullableCodespacesCreateForAuthenticatedUserRequest {
	return &NullableCodespacesCreateForAuthenticatedUserRequest{value: val, isSet: true}
}

func (v NullableCodespacesCreateForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodespacesCreateForAuthenticatedUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


