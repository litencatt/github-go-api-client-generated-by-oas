/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// Environment Details of a deployment environment
type Environment struct {
	// The id of the environment.
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	// The name of the environment.
	Name string `json:"name"`
	Url string `json:"url"`
	HtmlUrl string `json:"html_url"`
	// The time that the environment was created, in ISO 8601 format.
	CreatedAt time.Time `json:"created_at"`
	// The time that the environment was last updated, in ISO 8601 format.
	UpdatedAt time.Time `json:"updated_at"`
	ProtectionRules []EnvironmentProtectionRulesInner `json:"protection_rules,omitempty"`
	DeploymentBranchPolicy NullableDeploymentBranchPolicy `json:"deployment_branch_policy,omitempty"`
}

// NewEnvironment instantiates a new Environment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironment(id int32, nodeId string, name string, url string, htmlUrl string, createdAt time.Time, updatedAt time.Time) *Environment {
	this := Environment{}
	this.Id = id
	this.NodeId = nodeId
	this.Name = name
	this.Url = url
	this.HtmlUrl = htmlUrl
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewEnvironmentWithDefaults instantiates a new Environment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentWithDefaults() *Environment {
	this := Environment{}
	return &this
}

// GetId returns the Id field value
func (o *Environment) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Environment) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Environment) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *Environment) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *Environment) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *Environment) SetNodeId(v string) {
	o.NodeId = v
}

// GetName returns the Name field value
func (o *Environment) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Environment) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Environment) SetName(v string) {
	o.Name = v
}

// GetUrl returns the Url field value
func (o *Environment) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Environment) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Environment) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *Environment) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *Environment) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *Environment) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Environment) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Environment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Environment) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Environment) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Environment) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Environment) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetProtectionRules returns the ProtectionRules field value if set, zero value otherwise.
func (o *Environment) GetProtectionRules() []EnvironmentProtectionRulesInner {
	if o == nil || o.ProtectionRules == nil {
		var ret []EnvironmentProtectionRulesInner
		return ret
	}
	return o.ProtectionRules
}

// GetProtectionRulesOk returns a tuple with the ProtectionRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Environment) GetProtectionRulesOk() ([]EnvironmentProtectionRulesInner, bool) {
	if o == nil || o.ProtectionRules == nil {
		return nil, false
	}
	return o.ProtectionRules, true
}

// HasProtectionRules returns a boolean if a field has been set.
func (o *Environment) HasProtectionRules() bool {
	if o != nil && o.ProtectionRules != nil {
		return true
	}

	return false
}

// SetProtectionRules gets a reference to the given []EnvironmentProtectionRulesInner and assigns it to the ProtectionRules field.
func (o *Environment) SetProtectionRules(v []EnvironmentProtectionRulesInner) {
	o.ProtectionRules = v
}

// GetDeploymentBranchPolicy returns the DeploymentBranchPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Environment) GetDeploymentBranchPolicy() DeploymentBranchPolicy {
	if o == nil || o.DeploymentBranchPolicy.Get() == nil {
		var ret DeploymentBranchPolicy
		return ret
	}
	return *o.DeploymentBranchPolicy.Get()
}

// GetDeploymentBranchPolicyOk returns a tuple with the DeploymentBranchPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Environment) GetDeploymentBranchPolicyOk() (*DeploymentBranchPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeploymentBranchPolicy.Get(), o.DeploymentBranchPolicy.IsSet()
}

// HasDeploymentBranchPolicy returns a boolean if a field has been set.
func (o *Environment) HasDeploymentBranchPolicy() bool {
	if o != nil && o.DeploymentBranchPolicy.IsSet() {
		return true
	}

	return false
}

// SetDeploymentBranchPolicy gets a reference to the given NullableDeploymentBranchPolicy and assigns it to the DeploymentBranchPolicy field.
func (o *Environment) SetDeploymentBranchPolicy(v DeploymentBranchPolicy) {
	o.DeploymentBranchPolicy.Set(&v)
}
// SetDeploymentBranchPolicyNil sets the value for DeploymentBranchPolicy to be an explicit nil
func (o *Environment) SetDeploymentBranchPolicyNil() {
	o.DeploymentBranchPolicy.Set(nil)
}

// UnsetDeploymentBranchPolicy ensures that no value is present for DeploymentBranchPolicy, not even an explicit nil
func (o *Environment) UnsetDeploymentBranchPolicy() {
	o.DeploymentBranchPolicy.Unset()
}

func (o Environment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.ProtectionRules != nil {
		toSerialize["protection_rules"] = o.ProtectionRules
	}
	if o.DeploymentBranchPolicy.IsSet() {
		toSerialize["deployment_branch_policy"] = o.DeploymentBranchPolicy.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableEnvironment struct {
	value *Environment
	isSet bool
}

func (v NullableEnvironment) Get() *Environment {
	return v.value
}

func (v *NullableEnvironment) Set(val *Environment) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironment) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironment(val *Environment) *NullableEnvironment {
	return &NullableEnvironment{value: val, isSet: true}
}

func (v NullableEnvironment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


