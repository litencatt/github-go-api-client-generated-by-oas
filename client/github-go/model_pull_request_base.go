/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PullRequestBase struct for PullRequestBase
type PullRequestBase struct {
	Label string `json:"label"`
	Ref string `json:"ref"`
	Repo PullRequestBaseRepo `json:"repo"`
	Sha string `json:"sha"`
	User PullRequestHeadRepoOwner `json:"user"`
}

// NewPullRequestBase instantiates a new PullRequestBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestBase(label string, ref string, repo PullRequestBaseRepo, sha string, user PullRequestHeadRepoOwner) *PullRequestBase {
	this := PullRequestBase{}
	this.Label = label
	this.Ref = ref
	this.Repo = repo
	this.Sha = sha
	this.User = user
	return &this
}

// NewPullRequestBaseWithDefaults instantiates a new PullRequestBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestBaseWithDefaults() *PullRequestBase {
	this := PullRequestBase{}
	return &this
}

// GetLabel returns the Label field value
func (o *PullRequestBase) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *PullRequestBase) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *PullRequestBase) SetLabel(v string) {
	o.Label = v
}

// GetRef returns the Ref field value
func (o *PullRequestBase) GetRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ref
}

// GetRefOk returns a tuple with the Ref field value
// and a boolean to check if the value has been set.
func (o *PullRequestBase) GetRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ref, true
}

// SetRef sets field value
func (o *PullRequestBase) SetRef(v string) {
	o.Ref = v
}

// GetRepo returns the Repo field value
func (o *PullRequestBase) GetRepo() PullRequestBaseRepo {
	if o == nil {
		var ret PullRequestBaseRepo
		return ret
	}

	return o.Repo
}

// GetRepoOk returns a tuple with the Repo field value
// and a boolean to check if the value has been set.
func (o *PullRequestBase) GetRepoOk() (*PullRequestBaseRepo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repo, true
}

// SetRepo sets field value
func (o *PullRequestBase) SetRepo(v PullRequestBaseRepo) {
	o.Repo = v
}

// GetSha returns the Sha field value
func (o *PullRequestBase) GetSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sha
}

// GetShaOk returns a tuple with the Sha field value
// and a boolean to check if the value has been set.
func (o *PullRequestBase) GetShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sha, true
}

// SetSha sets field value
func (o *PullRequestBase) SetSha(v string) {
	o.Sha = v
}

// GetUser returns the User field value
func (o *PullRequestBase) GetUser() PullRequestHeadRepoOwner {
	if o == nil {
		var ret PullRequestHeadRepoOwner
		return ret
	}

	return o.User
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
func (o *PullRequestBase) GetUserOk() (*PullRequestHeadRepoOwner, bool) {
	if o == nil {
		return nil, false
	}
	return &o.User, true
}

// SetUser sets field value
func (o *PullRequestBase) SetUser(v PullRequestHeadRepoOwner) {
	o.User = v
}

func (o PullRequestBase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["label"] = o.Label
	}
	if true {
		toSerialize["ref"] = o.Ref
	}
	if true {
		toSerialize["repo"] = o.Repo
	}
	if true {
		toSerialize["sha"] = o.Sha
	}
	if true {
		toSerialize["user"] = o.User
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestBase struct {
	value *PullRequestBase
	isSet bool
}

func (v NullablePullRequestBase) Get() *PullRequestBase {
	return v.value
}

func (v *NullablePullRequestBase) Set(val *PullRequestBase) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestBase) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestBase(val *PullRequestBase) *NullablePullRequestBase {
	return &NullablePullRequestBase{value: val, isSet: true}
}

func (v NullablePullRequestBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


