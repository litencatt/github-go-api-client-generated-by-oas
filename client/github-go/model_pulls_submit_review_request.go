/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PullsSubmitReviewRequest struct for PullsSubmitReviewRequest
type PullsSubmitReviewRequest struct {
	// The body text of the pull request review
	Body *string `json:"body,omitempty"`
	// The review action you want to perform. The review actions include: `APPROVE`, `REQUEST_CHANGES`, or `COMMENT`. When you leave this blank, the API returns _HTTP 422 (Unrecognizable entity)_ and sets the review action state to `PENDING`, which means you will need to re-submit the pull request review using a review action.
	Event string `json:"event"`
}

// NewPullsSubmitReviewRequest instantiates a new PullsSubmitReviewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullsSubmitReviewRequest(event string) *PullsSubmitReviewRequest {
	this := PullsSubmitReviewRequest{}
	this.Event = event
	return &this
}

// NewPullsSubmitReviewRequestWithDefaults instantiates a new PullsSubmitReviewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullsSubmitReviewRequestWithDefaults() *PullsSubmitReviewRequest {
	this := PullsSubmitReviewRequest{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *PullsSubmitReviewRequest) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullsSubmitReviewRequest) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *PullsSubmitReviewRequest) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *PullsSubmitReviewRequest) SetBody(v string) {
	o.Body = &v
}

// GetEvent returns the Event field value
func (o *PullsSubmitReviewRequest) GetEvent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *PullsSubmitReviewRequest) GetEventOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *PullsSubmitReviewRequest) SetEvent(v string) {
	o.Event = v
}

func (o PullsSubmitReviewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if true {
		toSerialize["event"] = o.Event
	}
	return json.Marshal(toSerialize)
}

type NullablePullsSubmitReviewRequest struct {
	value *PullsSubmitReviewRequest
	isSet bool
}

func (v NullablePullsSubmitReviewRequest) Get() *PullsSubmitReviewRequest {
	return v.value
}

func (v *NullablePullsSubmitReviewRequest) Set(val *PullsSubmitReviewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePullsSubmitReviewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePullsSubmitReviewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullsSubmitReviewRequest(val *PullsSubmitReviewRequest) *NullablePullsSubmitReviewRequest {
	return &NullablePullsSubmitReviewRequest{value: val, isSet: true}
}

func (v NullablePullsSubmitReviewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullsSubmitReviewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


