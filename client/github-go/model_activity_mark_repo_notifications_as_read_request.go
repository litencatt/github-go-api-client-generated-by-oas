/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// ActivityMarkRepoNotificationsAsReadRequest struct for ActivityMarkRepoNotificationsAsReadRequest
type ActivityMarkRepoNotificationsAsReadRequest struct {
	// Describes the last point that notifications were checked. Anything updated since this time will not be marked as read. If you omit this parameter, all notifications are marked as read. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`. Default: The current timestamp.
	LastReadAt *time.Time `json:"last_read_at,omitempty"`
}

// NewActivityMarkRepoNotificationsAsReadRequest instantiates a new ActivityMarkRepoNotificationsAsReadRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActivityMarkRepoNotificationsAsReadRequest() *ActivityMarkRepoNotificationsAsReadRequest {
	this := ActivityMarkRepoNotificationsAsReadRequest{}
	return &this
}

// NewActivityMarkRepoNotificationsAsReadRequestWithDefaults instantiates a new ActivityMarkRepoNotificationsAsReadRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActivityMarkRepoNotificationsAsReadRequestWithDefaults() *ActivityMarkRepoNotificationsAsReadRequest {
	this := ActivityMarkRepoNotificationsAsReadRequest{}
	return &this
}

// GetLastReadAt returns the LastReadAt field value if set, zero value otherwise.
func (o *ActivityMarkRepoNotificationsAsReadRequest) GetLastReadAt() time.Time {
	if o == nil || o.LastReadAt == nil {
		var ret time.Time
		return ret
	}
	return *o.LastReadAt
}

// GetLastReadAtOk returns a tuple with the LastReadAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActivityMarkRepoNotificationsAsReadRequest) GetLastReadAtOk() (*time.Time, bool) {
	if o == nil || o.LastReadAt == nil {
		return nil, false
	}
	return o.LastReadAt, true
}

// HasLastReadAt returns a boolean if a field has been set.
func (o *ActivityMarkRepoNotificationsAsReadRequest) HasLastReadAt() bool {
	if o != nil && o.LastReadAt != nil {
		return true
	}

	return false
}

// SetLastReadAt gets a reference to the given time.Time and assigns it to the LastReadAt field.
func (o *ActivityMarkRepoNotificationsAsReadRequest) SetLastReadAt(v time.Time) {
	o.LastReadAt = &v
}

func (o ActivityMarkRepoNotificationsAsReadRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastReadAt != nil {
		toSerialize["last_read_at"] = o.LastReadAt
	}
	return json.Marshal(toSerialize)
}

type NullableActivityMarkRepoNotificationsAsReadRequest struct {
	value *ActivityMarkRepoNotificationsAsReadRequest
	isSet bool
}

func (v NullableActivityMarkRepoNotificationsAsReadRequest) Get() *ActivityMarkRepoNotificationsAsReadRequest {
	return v.value
}

func (v *NullableActivityMarkRepoNotificationsAsReadRequest) Set(val *ActivityMarkRepoNotificationsAsReadRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityMarkRepoNotificationsAsReadRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityMarkRepoNotificationsAsReadRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityMarkRepoNotificationsAsReadRequest(val *ActivityMarkRepoNotificationsAsReadRequest) *NullableActivityMarkRepoNotificationsAsReadRequest {
	return &NullableActivityMarkRepoNotificationsAsReadRequest{value: val, isSet: true}
}

func (v NullableActivityMarkRepoNotificationsAsReadRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityMarkRepoNotificationsAsReadRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


