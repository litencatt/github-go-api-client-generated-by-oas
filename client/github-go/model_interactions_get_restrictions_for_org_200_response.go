/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
	"fmt"
)

// InteractionsGetRestrictionsForOrg200Response struct for InteractionsGetRestrictionsForOrg200Response
type InteractionsGetRestrictionsForOrg200Response struct {
	InteractionLimitResponse *InteractionLimitResponse
	map[string]interface{} *map[string]interface{}
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *InteractionsGetRestrictionsForOrg200Response) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into InteractionLimitResponse
	err = json.Unmarshal(data, &dst.InteractionLimitResponse);
	if err == nil {
		jsonInteractionLimitResponse, _ := json.Marshal(dst.InteractionLimitResponse)
		if string(jsonInteractionLimitResponse) == "{}" { // empty struct
			dst.InteractionLimitResponse = nil
		} else {
			return nil // data stored in dst.InteractionLimitResponse, return on the first match
		}
	} else {
		dst.InteractionLimitResponse = nil
	}

	// try to unmarshal JSON data into map[string]interface{}
	err = json.Unmarshal(data, &dst.map[string]interface{});
	if err == nil {
		jsonmap[string]interface{}, _ := json.Marshal(dst.map[string]interface{})
		if string(jsonmap[string]interface{}) == "{}" { // empty struct
			dst.map[string]interface{} = nil
		} else {
			return nil // data stored in dst.map[string]interface{}, return on the first match
		}
	} else {
		dst.map[string]interface{} = nil
	}

	return fmt.Errorf("Data failed to match schemas in anyOf(InteractionsGetRestrictionsForOrg200Response)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *InteractionsGetRestrictionsForOrg200Response) MarshalJSON() ([]byte, error) {
	if src.InteractionLimitResponse != nil {
		return json.Marshal(&src.InteractionLimitResponse)
	}

	if src.map[string]interface{} != nil {
		return json.Marshal(&src.map[string]interface{})
	}

	return nil, nil // no data in anyOf schemas
}

type NullableInteractionsGetRestrictionsForOrg200Response struct {
	value *InteractionsGetRestrictionsForOrg200Response
	isSet bool
}

func (v NullableInteractionsGetRestrictionsForOrg200Response) Get() *InteractionsGetRestrictionsForOrg200Response {
	return v.value
}

func (v *NullableInteractionsGetRestrictionsForOrg200Response) Set(val *InteractionsGetRestrictionsForOrg200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableInteractionsGetRestrictionsForOrg200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableInteractionsGetRestrictionsForOrg200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInteractionsGetRestrictionsForOrg200Response(val *InteractionsGetRestrictionsForOrg200Response) *NullableInteractionsGetRestrictionsForOrg200Response {
	return &NullableInteractionsGetRestrictionsForOrg200Response{value: val, isSet: true}
}

func (v NullableInteractionsGetRestrictionsForOrg200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInteractionsGetRestrictionsForOrg200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


