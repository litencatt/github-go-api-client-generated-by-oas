/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReferencedWorkflow A workflow referenced/reused by the initial caller workflow
type ReferencedWorkflow struct {
	Path string `json:"path"`
	Sha string `json:"sha"`
	Ref *string `json:"ref,omitempty"`
}

// NewReferencedWorkflow instantiates a new ReferencedWorkflow object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReferencedWorkflow(path string, sha string) *ReferencedWorkflow {
	this := ReferencedWorkflow{}
	this.Path = path
	this.Sha = sha
	return &this
}

// NewReferencedWorkflowWithDefaults instantiates a new ReferencedWorkflow object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReferencedWorkflowWithDefaults() *ReferencedWorkflow {
	this := ReferencedWorkflow{}
	return &this
}

// GetPath returns the Path field value
func (o *ReferencedWorkflow) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *ReferencedWorkflow) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *ReferencedWorkflow) SetPath(v string) {
	o.Path = v
}

// GetSha returns the Sha field value
func (o *ReferencedWorkflow) GetSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sha
}

// GetShaOk returns a tuple with the Sha field value
// and a boolean to check if the value has been set.
func (o *ReferencedWorkflow) GetShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sha, true
}

// SetSha sets field value
func (o *ReferencedWorkflow) SetSha(v string) {
	o.Sha = v
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *ReferencedWorkflow) GetRef() string {
	if o == nil || o.Ref == nil {
		var ret string
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReferencedWorkflow) GetRefOk() (*string, bool) {
	if o == nil || o.Ref == nil {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *ReferencedWorkflow) HasRef() bool {
	if o != nil && o.Ref != nil {
		return true
	}

	return false
}

// SetRef gets a reference to the given string and assigns it to the Ref field.
func (o *ReferencedWorkflow) SetRef(v string) {
	o.Ref = &v
}

func (o ReferencedWorkflow) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["path"] = o.Path
	}
	if true {
		toSerialize["sha"] = o.Sha
	}
	if o.Ref != nil {
		toSerialize["ref"] = o.Ref
	}
	return json.Marshal(toSerialize)
}

type NullableReferencedWorkflow struct {
	value *ReferencedWorkflow
	isSet bool
}

func (v NullableReferencedWorkflow) Get() *ReferencedWorkflow {
	return v.value
}

func (v *NullableReferencedWorkflow) Set(val *ReferencedWorkflow) {
	v.value = val
	v.isSet = true
}

func (v NullableReferencedWorkflow) IsSet() bool {
	return v.isSet
}

func (v *NullableReferencedWorkflow) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReferencedWorkflow(val *ReferencedWorkflow) *NullableReferencedWorkflow {
	return &NullableReferencedWorkflow{value: val, isSet: true}
}

func (v NullableReferencedWorkflow) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReferencedWorkflow) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


