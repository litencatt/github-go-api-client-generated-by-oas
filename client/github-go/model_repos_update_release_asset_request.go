/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposUpdateReleaseAssetRequest struct for ReposUpdateReleaseAssetRequest
type ReposUpdateReleaseAssetRequest struct {
	// The file name of the asset.
	Name *string `json:"name,omitempty"`
	// An alternate short description of the asset. Used in place of the filename.
	Label *string `json:"label,omitempty"`
	State *string `json:"state,omitempty"`
}

// NewReposUpdateReleaseAssetRequest instantiates a new ReposUpdateReleaseAssetRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposUpdateReleaseAssetRequest() *ReposUpdateReleaseAssetRequest {
	this := ReposUpdateReleaseAssetRequest{}
	return &this
}

// NewReposUpdateReleaseAssetRequestWithDefaults instantiates a new ReposUpdateReleaseAssetRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposUpdateReleaseAssetRequestWithDefaults() *ReposUpdateReleaseAssetRequest {
	this := ReposUpdateReleaseAssetRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ReposUpdateReleaseAssetRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateReleaseAssetRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ReposUpdateReleaseAssetRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ReposUpdateReleaseAssetRequest) SetName(v string) {
	o.Name = &v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ReposUpdateReleaseAssetRequest) GetLabel() string {
	if o == nil || o.Label == nil {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateReleaseAssetRequest) GetLabelOk() (*string, bool) {
	if o == nil || o.Label == nil {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ReposUpdateReleaseAssetRequest) HasLabel() bool {
	if o != nil && o.Label != nil {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ReposUpdateReleaseAssetRequest) SetLabel(v string) {
	o.Label = &v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *ReposUpdateReleaseAssetRequest) GetState() string {
	if o == nil || o.State == nil {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateReleaseAssetRequest) GetStateOk() (*string, bool) {
	if o == nil || o.State == nil {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *ReposUpdateReleaseAssetRequest) HasState() bool {
	if o != nil && o.State != nil {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *ReposUpdateReleaseAssetRequest) SetState(v string) {
	o.State = &v
}

func (o ReposUpdateReleaseAssetRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Label != nil {
		toSerialize["label"] = o.Label
	}
	if o.State != nil {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableReposUpdateReleaseAssetRequest struct {
	value *ReposUpdateReleaseAssetRequest
	isSet bool
}

func (v NullableReposUpdateReleaseAssetRequest) Get() *ReposUpdateReleaseAssetRequest {
	return v.value
}

func (v *NullableReposUpdateReleaseAssetRequest) Set(val *ReposUpdateReleaseAssetRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposUpdateReleaseAssetRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposUpdateReleaseAssetRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposUpdateReleaseAssetRequest(val *ReposUpdateReleaseAssetRequest) *NullableReposUpdateReleaseAssetRequest {
	return &NullableReposUpdateReleaseAssetRequest{value: val, isSet: true}
}

func (v NullableReposUpdateReleaseAssetRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposUpdateReleaseAssetRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


