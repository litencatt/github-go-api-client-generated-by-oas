/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// Contributor Contributor
type Contributor struct {
	Login *string `json:"login,omitempty"`
	Id *int32 `json:"id,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	AvatarUrl *string `json:"avatar_url,omitempty"`
	GravatarId NullableString `json:"gravatar_id,omitempty"`
	Url *string `json:"url,omitempty"`
	HtmlUrl *string `json:"html_url,omitempty"`
	FollowersUrl *string `json:"followers_url,omitempty"`
	FollowingUrl *string `json:"following_url,omitempty"`
	GistsUrl *string `json:"gists_url,omitempty"`
	StarredUrl *string `json:"starred_url,omitempty"`
	SubscriptionsUrl *string `json:"subscriptions_url,omitempty"`
	OrganizationsUrl *string `json:"organizations_url,omitempty"`
	ReposUrl *string `json:"repos_url,omitempty"`
	EventsUrl *string `json:"events_url,omitempty"`
	ReceivedEventsUrl *string `json:"received_events_url,omitempty"`
	Type string `json:"type"`
	SiteAdmin *bool `json:"site_admin,omitempty"`
	Contributions int32 `json:"contributions"`
	Email *string `json:"email,omitempty"`
	Name *string `json:"name,omitempty"`
}

// NewContributor instantiates a new Contributor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContributor(type_ string, contributions int32) *Contributor {
	this := Contributor{}
	this.Type = type_
	this.Contributions = contributions
	return &this
}

// NewContributorWithDefaults instantiates a new Contributor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContributorWithDefaults() *Contributor {
	this := Contributor{}
	return &this
}

// GetLogin returns the Login field value if set, zero value otherwise.
func (o *Contributor) GetLogin() string {
	if o == nil || o.Login == nil {
		var ret string
		return ret
	}
	return *o.Login
}

// GetLoginOk returns a tuple with the Login field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetLoginOk() (*string, bool) {
	if o == nil || o.Login == nil {
		return nil, false
	}
	return o.Login, true
}

// HasLogin returns a boolean if a field has been set.
func (o *Contributor) HasLogin() bool {
	if o != nil && o.Login != nil {
		return true
	}

	return false
}

// SetLogin gets a reference to the given string and assigns it to the Login field.
func (o *Contributor) SetLogin(v string) {
	o.Login = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Contributor) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Contributor) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *Contributor) SetId(v int32) {
	o.Id = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *Contributor) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *Contributor) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *Contributor) SetNodeId(v string) {
	o.NodeId = &v
}

// GetAvatarUrl returns the AvatarUrl field value if set, zero value otherwise.
func (o *Contributor) GetAvatarUrl() string {
	if o == nil || o.AvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.AvatarUrl
}

// GetAvatarUrlOk returns a tuple with the AvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetAvatarUrlOk() (*string, bool) {
	if o == nil || o.AvatarUrl == nil {
		return nil, false
	}
	return o.AvatarUrl, true
}

// HasAvatarUrl returns a boolean if a field has been set.
func (o *Contributor) HasAvatarUrl() bool {
	if o != nil && o.AvatarUrl != nil {
		return true
	}

	return false
}

// SetAvatarUrl gets a reference to the given string and assigns it to the AvatarUrl field.
func (o *Contributor) SetAvatarUrl(v string) {
	o.AvatarUrl = &v
}

// GetGravatarId returns the GravatarId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Contributor) GetGravatarId() string {
	if o == nil || o.GravatarId.Get() == nil {
		var ret string
		return ret
	}
	return *o.GravatarId.Get()
}

// GetGravatarIdOk returns a tuple with the GravatarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Contributor) GetGravatarIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.GravatarId.Get(), o.GravatarId.IsSet()
}

// HasGravatarId returns a boolean if a field has been set.
func (o *Contributor) HasGravatarId() bool {
	if o != nil && o.GravatarId.IsSet() {
		return true
	}

	return false
}

// SetGravatarId gets a reference to the given NullableString and assigns it to the GravatarId field.
func (o *Contributor) SetGravatarId(v string) {
	o.GravatarId.Set(&v)
}
// SetGravatarIdNil sets the value for GravatarId to be an explicit nil
func (o *Contributor) SetGravatarIdNil() {
	o.GravatarId.Set(nil)
}

// UnsetGravatarId ensures that no value is present for GravatarId, not even an explicit nil
func (o *Contributor) UnsetGravatarId() {
	o.GravatarId.Unset()
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *Contributor) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *Contributor) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *Contributor) SetUrl(v string) {
	o.Url = &v
}

// GetHtmlUrl returns the HtmlUrl field value if set, zero value otherwise.
func (o *Contributor) GetHtmlUrl() string {
	if o == nil || o.HtmlUrl == nil {
		var ret string
		return ret
	}
	return *o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetHtmlUrlOk() (*string, bool) {
	if o == nil || o.HtmlUrl == nil {
		return nil, false
	}
	return o.HtmlUrl, true
}

// HasHtmlUrl returns a boolean if a field has been set.
func (o *Contributor) HasHtmlUrl() bool {
	if o != nil && o.HtmlUrl != nil {
		return true
	}

	return false
}

// SetHtmlUrl gets a reference to the given string and assigns it to the HtmlUrl field.
func (o *Contributor) SetHtmlUrl(v string) {
	o.HtmlUrl = &v
}

// GetFollowersUrl returns the FollowersUrl field value if set, zero value otherwise.
func (o *Contributor) GetFollowersUrl() string {
	if o == nil || o.FollowersUrl == nil {
		var ret string
		return ret
	}
	return *o.FollowersUrl
}

// GetFollowersUrlOk returns a tuple with the FollowersUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetFollowersUrlOk() (*string, bool) {
	if o == nil || o.FollowersUrl == nil {
		return nil, false
	}
	return o.FollowersUrl, true
}

// HasFollowersUrl returns a boolean if a field has been set.
func (o *Contributor) HasFollowersUrl() bool {
	if o != nil && o.FollowersUrl != nil {
		return true
	}

	return false
}

// SetFollowersUrl gets a reference to the given string and assigns it to the FollowersUrl field.
func (o *Contributor) SetFollowersUrl(v string) {
	o.FollowersUrl = &v
}

// GetFollowingUrl returns the FollowingUrl field value if set, zero value otherwise.
func (o *Contributor) GetFollowingUrl() string {
	if o == nil || o.FollowingUrl == nil {
		var ret string
		return ret
	}
	return *o.FollowingUrl
}

// GetFollowingUrlOk returns a tuple with the FollowingUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetFollowingUrlOk() (*string, bool) {
	if o == nil || o.FollowingUrl == nil {
		return nil, false
	}
	return o.FollowingUrl, true
}

// HasFollowingUrl returns a boolean if a field has been set.
func (o *Contributor) HasFollowingUrl() bool {
	if o != nil && o.FollowingUrl != nil {
		return true
	}

	return false
}

// SetFollowingUrl gets a reference to the given string and assigns it to the FollowingUrl field.
func (o *Contributor) SetFollowingUrl(v string) {
	o.FollowingUrl = &v
}

// GetGistsUrl returns the GistsUrl field value if set, zero value otherwise.
func (o *Contributor) GetGistsUrl() string {
	if o == nil || o.GistsUrl == nil {
		var ret string
		return ret
	}
	return *o.GistsUrl
}

// GetGistsUrlOk returns a tuple with the GistsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetGistsUrlOk() (*string, bool) {
	if o == nil || o.GistsUrl == nil {
		return nil, false
	}
	return o.GistsUrl, true
}

// HasGistsUrl returns a boolean if a field has been set.
func (o *Contributor) HasGistsUrl() bool {
	if o != nil && o.GistsUrl != nil {
		return true
	}

	return false
}

// SetGistsUrl gets a reference to the given string and assigns it to the GistsUrl field.
func (o *Contributor) SetGistsUrl(v string) {
	o.GistsUrl = &v
}

// GetStarredUrl returns the StarredUrl field value if set, zero value otherwise.
func (o *Contributor) GetStarredUrl() string {
	if o == nil || o.StarredUrl == nil {
		var ret string
		return ret
	}
	return *o.StarredUrl
}

// GetStarredUrlOk returns a tuple with the StarredUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetStarredUrlOk() (*string, bool) {
	if o == nil || o.StarredUrl == nil {
		return nil, false
	}
	return o.StarredUrl, true
}

// HasStarredUrl returns a boolean if a field has been set.
func (o *Contributor) HasStarredUrl() bool {
	if o != nil && o.StarredUrl != nil {
		return true
	}

	return false
}

// SetStarredUrl gets a reference to the given string and assigns it to the StarredUrl field.
func (o *Contributor) SetStarredUrl(v string) {
	o.StarredUrl = &v
}

// GetSubscriptionsUrl returns the SubscriptionsUrl field value if set, zero value otherwise.
func (o *Contributor) GetSubscriptionsUrl() string {
	if o == nil || o.SubscriptionsUrl == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionsUrl
}

// GetSubscriptionsUrlOk returns a tuple with the SubscriptionsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetSubscriptionsUrlOk() (*string, bool) {
	if o == nil || o.SubscriptionsUrl == nil {
		return nil, false
	}
	return o.SubscriptionsUrl, true
}

// HasSubscriptionsUrl returns a boolean if a field has been set.
func (o *Contributor) HasSubscriptionsUrl() bool {
	if o != nil && o.SubscriptionsUrl != nil {
		return true
	}

	return false
}

// SetSubscriptionsUrl gets a reference to the given string and assigns it to the SubscriptionsUrl field.
func (o *Contributor) SetSubscriptionsUrl(v string) {
	o.SubscriptionsUrl = &v
}

// GetOrganizationsUrl returns the OrganizationsUrl field value if set, zero value otherwise.
func (o *Contributor) GetOrganizationsUrl() string {
	if o == nil || o.OrganizationsUrl == nil {
		var ret string
		return ret
	}
	return *o.OrganizationsUrl
}

// GetOrganizationsUrlOk returns a tuple with the OrganizationsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetOrganizationsUrlOk() (*string, bool) {
	if o == nil || o.OrganizationsUrl == nil {
		return nil, false
	}
	return o.OrganizationsUrl, true
}

// HasOrganizationsUrl returns a boolean if a field has been set.
func (o *Contributor) HasOrganizationsUrl() bool {
	if o != nil && o.OrganizationsUrl != nil {
		return true
	}

	return false
}

// SetOrganizationsUrl gets a reference to the given string and assigns it to the OrganizationsUrl field.
func (o *Contributor) SetOrganizationsUrl(v string) {
	o.OrganizationsUrl = &v
}

// GetReposUrl returns the ReposUrl field value if set, zero value otherwise.
func (o *Contributor) GetReposUrl() string {
	if o == nil || o.ReposUrl == nil {
		var ret string
		return ret
	}
	return *o.ReposUrl
}

// GetReposUrlOk returns a tuple with the ReposUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetReposUrlOk() (*string, bool) {
	if o == nil || o.ReposUrl == nil {
		return nil, false
	}
	return o.ReposUrl, true
}

// HasReposUrl returns a boolean if a field has been set.
func (o *Contributor) HasReposUrl() bool {
	if o != nil && o.ReposUrl != nil {
		return true
	}

	return false
}

// SetReposUrl gets a reference to the given string and assigns it to the ReposUrl field.
func (o *Contributor) SetReposUrl(v string) {
	o.ReposUrl = &v
}

// GetEventsUrl returns the EventsUrl field value if set, zero value otherwise.
func (o *Contributor) GetEventsUrl() string {
	if o == nil || o.EventsUrl == nil {
		var ret string
		return ret
	}
	return *o.EventsUrl
}

// GetEventsUrlOk returns a tuple with the EventsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetEventsUrlOk() (*string, bool) {
	if o == nil || o.EventsUrl == nil {
		return nil, false
	}
	return o.EventsUrl, true
}

// HasEventsUrl returns a boolean if a field has been set.
func (o *Contributor) HasEventsUrl() bool {
	if o != nil && o.EventsUrl != nil {
		return true
	}

	return false
}

// SetEventsUrl gets a reference to the given string and assigns it to the EventsUrl field.
func (o *Contributor) SetEventsUrl(v string) {
	o.EventsUrl = &v
}

// GetReceivedEventsUrl returns the ReceivedEventsUrl field value if set, zero value otherwise.
func (o *Contributor) GetReceivedEventsUrl() string {
	if o == nil || o.ReceivedEventsUrl == nil {
		var ret string
		return ret
	}
	return *o.ReceivedEventsUrl
}

// GetReceivedEventsUrlOk returns a tuple with the ReceivedEventsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetReceivedEventsUrlOk() (*string, bool) {
	if o == nil || o.ReceivedEventsUrl == nil {
		return nil, false
	}
	return o.ReceivedEventsUrl, true
}

// HasReceivedEventsUrl returns a boolean if a field has been set.
func (o *Contributor) HasReceivedEventsUrl() bool {
	if o != nil && o.ReceivedEventsUrl != nil {
		return true
	}

	return false
}

// SetReceivedEventsUrl gets a reference to the given string and assigns it to the ReceivedEventsUrl field.
func (o *Contributor) SetReceivedEventsUrl(v string) {
	o.ReceivedEventsUrl = &v
}

// GetType returns the Type field value
func (o *Contributor) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *Contributor) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *Contributor) SetType(v string) {
	o.Type = v
}

// GetSiteAdmin returns the SiteAdmin field value if set, zero value otherwise.
func (o *Contributor) GetSiteAdmin() bool {
	if o == nil || o.SiteAdmin == nil {
		var ret bool
		return ret
	}
	return *o.SiteAdmin
}

// GetSiteAdminOk returns a tuple with the SiteAdmin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetSiteAdminOk() (*bool, bool) {
	if o == nil || o.SiteAdmin == nil {
		return nil, false
	}
	return o.SiteAdmin, true
}

// HasSiteAdmin returns a boolean if a field has been set.
func (o *Contributor) HasSiteAdmin() bool {
	if o != nil && o.SiteAdmin != nil {
		return true
	}

	return false
}

// SetSiteAdmin gets a reference to the given bool and assigns it to the SiteAdmin field.
func (o *Contributor) SetSiteAdmin(v bool) {
	o.SiteAdmin = &v
}

// GetContributions returns the Contributions field value
func (o *Contributor) GetContributions() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Contributions
}

// GetContributionsOk returns a tuple with the Contributions field value
// and a boolean to check if the value has been set.
func (o *Contributor) GetContributionsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contributions, true
}

// SetContributions sets field value
func (o *Contributor) SetContributions(v int32) {
	o.Contributions = v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *Contributor) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *Contributor) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *Contributor) SetEmail(v string) {
	o.Email = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *Contributor) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Contributor) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *Contributor) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *Contributor) SetName(v string) {
	o.Name = &v
}

func (o Contributor) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Login != nil {
		toSerialize["login"] = o.Login
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NodeId != nil {
		toSerialize["node_id"] = o.NodeId
	}
	if o.AvatarUrl != nil {
		toSerialize["avatar_url"] = o.AvatarUrl
	}
	if o.GravatarId.IsSet() {
		toSerialize["gravatar_id"] = o.GravatarId.Get()
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.HtmlUrl != nil {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if o.FollowersUrl != nil {
		toSerialize["followers_url"] = o.FollowersUrl
	}
	if o.FollowingUrl != nil {
		toSerialize["following_url"] = o.FollowingUrl
	}
	if o.GistsUrl != nil {
		toSerialize["gists_url"] = o.GistsUrl
	}
	if o.StarredUrl != nil {
		toSerialize["starred_url"] = o.StarredUrl
	}
	if o.SubscriptionsUrl != nil {
		toSerialize["subscriptions_url"] = o.SubscriptionsUrl
	}
	if o.OrganizationsUrl != nil {
		toSerialize["organizations_url"] = o.OrganizationsUrl
	}
	if o.ReposUrl != nil {
		toSerialize["repos_url"] = o.ReposUrl
	}
	if o.EventsUrl != nil {
		toSerialize["events_url"] = o.EventsUrl
	}
	if o.ReceivedEventsUrl != nil {
		toSerialize["received_events_url"] = o.ReceivedEventsUrl
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.SiteAdmin != nil {
		toSerialize["site_admin"] = o.SiteAdmin
	}
	if true {
		toSerialize["contributions"] = o.Contributions
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableContributor struct {
	value *Contributor
	isSet bool
}

func (v NullableContributor) Get() *Contributor {
	return v.value
}

func (v *NullableContributor) Set(val *Contributor) {
	v.value = val
	v.isSet = true
}

func (v NullableContributor) IsSet() bool {
	return v.isSet
}

func (v *NullableContributor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContributor(val *Contributor) *NullableContributor {
	return &NullableContributor{value: val, isSet: true}
}

func (v NullableContributor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContributor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


