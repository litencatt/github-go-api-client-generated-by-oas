/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ActionsPublicKey The public key used for setting Actions Secrets.
type ActionsPublicKey struct {
	// The identifier for the key.
	KeyId string `json:"key_id"`
	// The Base64 encoded public key.
	Key string `json:"key"`
	Id *int32 `json:"id,omitempty"`
	Url *string `json:"url,omitempty"`
	Title *string `json:"title,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
}

// NewActionsPublicKey instantiates a new ActionsPublicKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsPublicKey(keyId string, key string) *ActionsPublicKey {
	this := ActionsPublicKey{}
	this.KeyId = keyId
	this.Key = key
	return &this
}

// NewActionsPublicKeyWithDefaults instantiates a new ActionsPublicKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsPublicKeyWithDefaults() *ActionsPublicKey {
	this := ActionsPublicKey{}
	return &this
}

// GetKeyId returns the KeyId field value
func (o *ActionsPublicKey) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *ActionsPublicKey) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *ActionsPublicKey) SetKeyId(v string) {
	o.KeyId = v
}

// GetKey returns the Key field value
func (o *ActionsPublicKey) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ActionsPublicKey) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ActionsPublicKey) SetKey(v string) {
	o.Key = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ActionsPublicKey) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsPublicKey) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ActionsPublicKey) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *ActionsPublicKey) SetId(v int32) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ActionsPublicKey) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsPublicKey) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ActionsPublicKey) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ActionsPublicKey) SetUrl(v string) {
	o.Url = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ActionsPublicKey) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsPublicKey) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ActionsPublicKey) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ActionsPublicKey) SetTitle(v string) {
	o.Title = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *ActionsPublicKey) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsPublicKey) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *ActionsPublicKey) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *ActionsPublicKey) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

func (o ActionsPublicKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key_id"] = o.KeyId
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	return json.Marshal(toSerialize)
}

type NullableActionsPublicKey struct {
	value *ActionsPublicKey
	isSet bool
}

func (v NullableActionsPublicKey) Get() *ActionsPublicKey {
	return v.value
}

func (v *NullableActionsPublicKey) Set(val *ActionsPublicKey) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsPublicKey) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsPublicKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsPublicKey(val *ActionsPublicKey) *NullableActionsPublicKey {
	return &NullableActionsPublicKey{value: val, isSet: true}
}

func (v NullableActionsPublicKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsPublicKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


