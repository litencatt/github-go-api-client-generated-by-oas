/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ContentTreeEntriesInnerLinks struct for ContentTreeEntriesInnerLinks
type ContentTreeEntriesInnerLinks struct {
	Git NullableString `json:"git"`
	Html NullableString `json:"html"`
	Self string `json:"self"`
}

// NewContentTreeEntriesInnerLinks instantiates a new ContentTreeEntriesInnerLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentTreeEntriesInnerLinks(git NullableString, html NullableString, self string) *ContentTreeEntriesInnerLinks {
	this := ContentTreeEntriesInnerLinks{}
	this.Git = git
	this.Html = html
	this.Self = self
	return &this
}

// NewContentTreeEntriesInnerLinksWithDefaults instantiates a new ContentTreeEntriesInnerLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentTreeEntriesInnerLinksWithDefaults() *ContentTreeEntriesInnerLinks {
	this := ContentTreeEntriesInnerLinks{}
	return &this
}

// GetGit returns the Git field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ContentTreeEntriesInnerLinks) GetGit() string {
	if o == nil || o.Git.Get() == nil {
		var ret string
		return ret
	}

	return *o.Git.Get()
}

// GetGitOk returns a tuple with the Git field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContentTreeEntriesInnerLinks) GetGitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Git.Get(), o.Git.IsSet()
}

// SetGit sets field value
func (o *ContentTreeEntriesInnerLinks) SetGit(v string) {
	o.Git.Set(&v)
}

// GetHtml returns the Html field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ContentTreeEntriesInnerLinks) GetHtml() string {
	if o == nil || o.Html.Get() == nil {
		var ret string
		return ret
	}

	return *o.Html.Get()
}

// GetHtmlOk returns a tuple with the Html field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContentTreeEntriesInnerLinks) GetHtmlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Html.Get(), o.Html.IsSet()
}

// SetHtml sets field value
func (o *ContentTreeEntriesInnerLinks) SetHtml(v string) {
	o.Html.Set(&v)
}

// GetSelf returns the Self field value
func (o *ContentTreeEntriesInnerLinks) GetSelf() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *ContentTreeEntriesInnerLinks) GetSelfOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *ContentTreeEntriesInnerLinks) SetSelf(v string) {
	o.Self = v
}

func (o ContentTreeEntriesInnerLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["git"] = o.Git.Get()
	}
	if true {
		toSerialize["html"] = o.Html.Get()
	}
	if true {
		toSerialize["self"] = o.Self
	}
	return json.Marshal(toSerialize)
}

type NullableContentTreeEntriesInnerLinks struct {
	value *ContentTreeEntriesInnerLinks
	isSet bool
}

func (v NullableContentTreeEntriesInnerLinks) Get() *ContentTreeEntriesInnerLinks {
	return v.value
}

func (v *NullableContentTreeEntriesInnerLinks) Set(val *ContentTreeEntriesInnerLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableContentTreeEntriesInnerLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableContentTreeEntriesInnerLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentTreeEntriesInnerLinks(val *ContentTreeEntriesInnerLinks) *NullableContentTreeEntriesInnerLinks {
	return &NullableContentTreeEntriesInnerLinks{value: val, isSet: true}
}

func (v NullableContentTreeEntriesInnerLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentTreeEntriesInnerLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


