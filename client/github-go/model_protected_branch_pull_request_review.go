/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ProtectedBranchPullRequestReview Protected Branch Pull Request Review
type ProtectedBranchPullRequestReview struct {
	Url *string `json:"url,omitempty"`
	DismissalRestrictions *ProtectedBranchPullRequestReviewDismissalRestrictions `json:"dismissal_restrictions,omitempty"`
	BypassPullRequestAllowances *ProtectedBranchPullRequestReviewBypassPullRequestAllowances `json:"bypass_pull_request_allowances,omitempty"`
	DismissStaleReviews bool `json:"dismiss_stale_reviews"`
	RequireCodeOwnerReviews bool `json:"require_code_owner_reviews"`
	RequiredApprovingReviewCount *int32 `json:"required_approving_review_count,omitempty"`
}

// NewProtectedBranchPullRequestReview instantiates a new ProtectedBranchPullRequestReview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedBranchPullRequestReview(dismissStaleReviews bool, requireCodeOwnerReviews bool) *ProtectedBranchPullRequestReview {
	this := ProtectedBranchPullRequestReview{}
	this.DismissStaleReviews = dismissStaleReviews
	this.RequireCodeOwnerReviews = requireCodeOwnerReviews
	return &this
}

// NewProtectedBranchPullRequestReviewWithDefaults instantiates a new ProtectedBranchPullRequestReview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedBranchPullRequestReviewWithDefaults() *ProtectedBranchPullRequestReview {
	this := ProtectedBranchPullRequestReview{}
	return &this
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ProtectedBranchPullRequestReview) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchPullRequestReview) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ProtectedBranchPullRequestReview) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ProtectedBranchPullRequestReview) SetUrl(v string) {
	o.Url = &v
}

// GetDismissalRestrictions returns the DismissalRestrictions field value if set, zero value otherwise.
func (o *ProtectedBranchPullRequestReview) GetDismissalRestrictions() ProtectedBranchPullRequestReviewDismissalRestrictions {
	if o == nil || o.DismissalRestrictions == nil {
		var ret ProtectedBranchPullRequestReviewDismissalRestrictions
		return ret
	}
	return *o.DismissalRestrictions
}

// GetDismissalRestrictionsOk returns a tuple with the DismissalRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchPullRequestReview) GetDismissalRestrictionsOk() (*ProtectedBranchPullRequestReviewDismissalRestrictions, bool) {
	if o == nil || o.DismissalRestrictions == nil {
		return nil, false
	}
	return o.DismissalRestrictions, true
}

// HasDismissalRestrictions returns a boolean if a field has been set.
func (o *ProtectedBranchPullRequestReview) HasDismissalRestrictions() bool {
	if o != nil && o.DismissalRestrictions != nil {
		return true
	}

	return false
}

// SetDismissalRestrictions gets a reference to the given ProtectedBranchPullRequestReviewDismissalRestrictions and assigns it to the DismissalRestrictions field.
func (o *ProtectedBranchPullRequestReview) SetDismissalRestrictions(v ProtectedBranchPullRequestReviewDismissalRestrictions) {
	o.DismissalRestrictions = &v
}

// GetBypassPullRequestAllowances returns the BypassPullRequestAllowances field value if set, zero value otherwise.
func (o *ProtectedBranchPullRequestReview) GetBypassPullRequestAllowances() ProtectedBranchPullRequestReviewBypassPullRequestAllowances {
	if o == nil || o.BypassPullRequestAllowances == nil {
		var ret ProtectedBranchPullRequestReviewBypassPullRequestAllowances
		return ret
	}
	return *o.BypassPullRequestAllowances
}

// GetBypassPullRequestAllowancesOk returns a tuple with the BypassPullRequestAllowances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchPullRequestReview) GetBypassPullRequestAllowancesOk() (*ProtectedBranchPullRequestReviewBypassPullRequestAllowances, bool) {
	if o == nil || o.BypassPullRequestAllowances == nil {
		return nil, false
	}
	return o.BypassPullRequestAllowances, true
}

// HasBypassPullRequestAllowances returns a boolean if a field has been set.
func (o *ProtectedBranchPullRequestReview) HasBypassPullRequestAllowances() bool {
	if o != nil && o.BypassPullRequestAllowances != nil {
		return true
	}

	return false
}

// SetBypassPullRequestAllowances gets a reference to the given ProtectedBranchPullRequestReviewBypassPullRequestAllowances and assigns it to the BypassPullRequestAllowances field.
func (o *ProtectedBranchPullRequestReview) SetBypassPullRequestAllowances(v ProtectedBranchPullRequestReviewBypassPullRequestAllowances) {
	o.BypassPullRequestAllowances = &v
}

// GetDismissStaleReviews returns the DismissStaleReviews field value
func (o *ProtectedBranchPullRequestReview) GetDismissStaleReviews() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.DismissStaleReviews
}

// GetDismissStaleReviewsOk returns a tuple with the DismissStaleReviews field value
// and a boolean to check if the value has been set.
func (o *ProtectedBranchPullRequestReview) GetDismissStaleReviewsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DismissStaleReviews, true
}

// SetDismissStaleReviews sets field value
func (o *ProtectedBranchPullRequestReview) SetDismissStaleReviews(v bool) {
	o.DismissStaleReviews = v
}

// GetRequireCodeOwnerReviews returns the RequireCodeOwnerReviews field value
func (o *ProtectedBranchPullRequestReview) GetRequireCodeOwnerReviews() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RequireCodeOwnerReviews
}

// GetRequireCodeOwnerReviewsOk returns a tuple with the RequireCodeOwnerReviews field value
// and a boolean to check if the value has been set.
func (o *ProtectedBranchPullRequestReview) GetRequireCodeOwnerReviewsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequireCodeOwnerReviews, true
}

// SetRequireCodeOwnerReviews sets field value
func (o *ProtectedBranchPullRequestReview) SetRequireCodeOwnerReviews(v bool) {
	o.RequireCodeOwnerReviews = v
}

// GetRequiredApprovingReviewCount returns the RequiredApprovingReviewCount field value if set, zero value otherwise.
func (o *ProtectedBranchPullRequestReview) GetRequiredApprovingReviewCount() int32 {
	if o == nil || o.RequiredApprovingReviewCount == nil {
		var ret int32
		return ret
	}
	return *o.RequiredApprovingReviewCount
}

// GetRequiredApprovingReviewCountOk returns a tuple with the RequiredApprovingReviewCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchPullRequestReview) GetRequiredApprovingReviewCountOk() (*int32, bool) {
	if o == nil || o.RequiredApprovingReviewCount == nil {
		return nil, false
	}
	return o.RequiredApprovingReviewCount, true
}

// HasRequiredApprovingReviewCount returns a boolean if a field has been set.
func (o *ProtectedBranchPullRequestReview) HasRequiredApprovingReviewCount() bool {
	if o != nil && o.RequiredApprovingReviewCount != nil {
		return true
	}

	return false
}

// SetRequiredApprovingReviewCount gets a reference to the given int32 and assigns it to the RequiredApprovingReviewCount field.
func (o *ProtectedBranchPullRequestReview) SetRequiredApprovingReviewCount(v int32) {
	o.RequiredApprovingReviewCount = &v
}

func (o ProtectedBranchPullRequestReview) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.DismissalRestrictions != nil {
		toSerialize["dismissal_restrictions"] = o.DismissalRestrictions
	}
	if o.BypassPullRequestAllowances != nil {
		toSerialize["bypass_pull_request_allowances"] = o.BypassPullRequestAllowances
	}
	if true {
		toSerialize["dismiss_stale_reviews"] = o.DismissStaleReviews
	}
	if true {
		toSerialize["require_code_owner_reviews"] = o.RequireCodeOwnerReviews
	}
	if o.RequiredApprovingReviewCount != nil {
		toSerialize["required_approving_review_count"] = o.RequiredApprovingReviewCount
	}
	return json.Marshal(toSerialize)
}

type NullableProtectedBranchPullRequestReview struct {
	value *ProtectedBranchPullRequestReview
	isSet bool
}

func (v NullableProtectedBranchPullRequestReview) Get() *ProtectedBranchPullRequestReview {
	return v.value
}

func (v *NullableProtectedBranchPullRequestReview) Set(val *ProtectedBranchPullRequestReview) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedBranchPullRequestReview) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedBranchPullRequestReview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedBranchPullRequestReview(val *ProtectedBranchPullRequestReview) *NullableProtectedBranchPullRequestReview {
	return &NullableProtectedBranchPullRequestReview{value: val, isSet: true}
}

func (v NullableProtectedBranchPullRequestReview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedBranchPullRequestReview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


