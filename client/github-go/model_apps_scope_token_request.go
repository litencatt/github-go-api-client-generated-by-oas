/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// AppsScopeTokenRequest struct for AppsScopeTokenRequest
type AppsScopeTokenRequest struct {
	// The OAuth access token used to authenticate to the GitHub API.
	AccessToken string `json:"access_token"`
	// The name of the user or organization to scope the user-to-server access token to. **Required** unless `target_id` is specified.
	Target *string `json:"target,omitempty"`
	// The ID of the user or organization to scope the user-to-server access token to. **Required** unless `target` is specified.
	TargetId *int32 `json:"target_id,omitempty"`
	// The list of repository names to scope the user-to-server access token to. `repositories` may not be specified if `repository_ids` is specified.
	Repositories []string `json:"repositories,omitempty"`
	// The list of repository IDs to scope the user-to-server access token to. `repository_ids` may not be specified if `repositories` is specified.
	RepositoryIds []int32 `json:"repository_ids,omitempty"`
	Permissions *AppPermissions `json:"permissions,omitempty"`
}

// NewAppsScopeTokenRequest instantiates a new AppsScopeTokenRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppsScopeTokenRequest(accessToken string) *AppsScopeTokenRequest {
	this := AppsScopeTokenRequest{}
	this.AccessToken = accessToken
	return &this
}

// NewAppsScopeTokenRequestWithDefaults instantiates a new AppsScopeTokenRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppsScopeTokenRequestWithDefaults() *AppsScopeTokenRequest {
	this := AppsScopeTokenRequest{}
	return &this
}

// GetAccessToken returns the AccessToken field value
func (o *AppsScopeTokenRequest) GetAccessToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessToken
}

// GetAccessTokenOk returns a tuple with the AccessToken field value
// and a boolean to check if the value has been set.
func (o *AppsScopeTokenRequest) GetAccessTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessToken, true
}

// SetAccessToken sets field value
func (o *AppsScopeTokenRequest) SetAccessToken(v string) {
	o.AccessToken = v
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *AppsScopeTokenRequest) GetTarget() string {
	if o == nil || o.Target == nil {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsScopeTokenRequest) GetTargetOk() (*string, bool) {
	if o == nil || o.Target == nil {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *AppsScopeTokenRequest) HasTarget() bool {
	if o != nil && o.Target != nil {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *AppsScopeTokenRequest) SetTarget(v string) {
	o.Target = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *AppsScopeTokenRequest) GetTargetId() int32 {
	if o == nil || o.TargetId == nil {
		var ret int32
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsScopeTokenRequest) GetTargetIdOk() (*int32, bool) {
	if o == nil || o.TargetId == nil {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *AppsScopeTokenRequest) HasTargetId() bool {
	if o != nil && o.TargetId != nil {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given int32 and assigns it to the TargetId field.
func (o *AppsScopeTokenRequest) SetTargetId(v int32) {
	o.TargetId = &v
}

// GetRepositories returns the Repositories field value if set, zero value otherwise.
func (o *AppsScopeTokenRequest) GetRepositories() []string {
	if o == nil || o.Repositories == nil {
		var ret []string
		return ret
	}
	return o.Repositories
}

// GetRepositoriesOk returns a tuple with the Repositories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsScopeTokenRequest) GetRepositoriesOk() ([]string, bool) {
	if o == nil || o.Repositories == nil {
		return nil, false
	}
	return o.Repositories, true
}

// HasRepositories returns a boolean if a field has been set.
func (o *AppsScopeTokenRequest) HasRepositories() bool {
	if o != nil && o.Repositories != nil {
		return true
	}

	return false
}

// SetRepositories gets a reference to the given []string and assigns it to the Repositories field.
func (o *AppsScopeTokenRequest) SetRepositories(v []string) {
	o.Repositories = v
}

// GetRepositoryIds returns the RepositoryIds field value if set, zero value otherwise.
func (o *AppsScopeTokenRequest) GetRepositoryIds() []int32 {
	if o == nil || o.RepositoryIds == nil {
		var ret []int32
		return ret
	}
	return o.RepositoryIds
}

// GetRepositoryIdsOk returns a tuple with the RepositoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsScopeTokenRequest) GetRepositoryIdsOk() ([]int32, bool) {
	if o == nil || o.RepositoryIds == nil {
		return nil, false
	}
	return o.RepositoryIds, true
}

// HasRepositoryIds returns a boolean if a field has been set.
func (o *AppsScopeTokenRequest) HasRepositoryIds() bool {
	if o != nil && o.RepositoryIds != nil {
		return true
	}

	return false
}

// SetRepositoryIds gets a reference to the given []int32 and assigns it to the RepositoryIds field.
func (o *AppsScopeTokenRequest) SetRepositoryIds(v []int32) {
	o.RepositoryIds = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *AppsScopeTokenRequest) GetPermissions() AppPermissions {
	if o == nil || o.Permissions == nil {
		var ret AppPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppsScopeTokenRequest) GetPermissionsOk() (*AppPermissions, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *AppsScopeTokenRequest) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given AppPermissions and assigns it to the Permissions field.
func (o *AppsScopeTokenRequest) SetPermissions(v AppPermissions) {
	o.Permissions = &v
}

func (o AppsScopeTokenRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["access_token"] = o.AccessToken
	}
	if o.Target != nil {
		toSerialize["target"] = o.Target
	}
	if o.TargetId != nil {
		toSerialize["target_id"] = o.TargetId
	}
	if o.Repositories != nil {
		toSerialize["repositories"] = o.Repositories
	}
	if o.RepositoryIds != nil {
		toSerialize["repository_ids"] = o.RepositoryIds
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableAppsScopeTokenRequest struct {
	value *AppsScopeTokenRequest
	isSet bool
}

func (v NullableAppsScopeTokenRequest) Get() *AppsScopeTokenRequest {
	return v.value
}

func (v *NullableAppsScopeTokenRequest) Set(val *AppsScopeTokenRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAppsScopeTokenRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAppsScopeTokenRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppsScopeTokenRequest(val *AppsScopeTokenRequest) *NullableAppsScopeTokenRequest {
	return &NullableAppsScopeTokenRequest{value: val, isSet: true}
}

func (v NullableAppsScopeTokenRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppsScopeTokenRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


