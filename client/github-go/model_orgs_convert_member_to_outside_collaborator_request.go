/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// OrgsConvertMemberToOutsideCollaboratorRequest struct for OrgsConvertMemberToOutsideCollaboratorRequest
type OrgsConvertMemberToOutsideCollaboratorRequest struct {
	// When set to `true`, the request will be performed asynchronously. Returns a 202 status code when the job is successfully queued.
	Async *bool `json:"async,omitempty"`
}

// NewOrgsConvertMemberToOutsideCollaboratorRequest instantiates a new OrgsConvertMemberToOutsideCollaboratorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgsConvertMemberToOutsideCollaboratorRequest() *OrgsConvertMemberToOutsideCollaboratorRequest {
	this := OrgsConvertMemberToOutsideCollaboratorRequest{}
	var async bool = false
	this.Async = &async
	return &this
}

// NewOrgsConvertMemberToOutsideCollaboratorRequestWithDefaults instantiates a new OrgsConvertMemberToOutsideCollaboratorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgsConvertMemberToOutsideCollaboratorRequestWithDefaults() *OrgsConvertMemberToOutsideCollaboratorRequest {
	this := OrgsConvertMemberToOutsideCollaboratorRequest{}
	var async bool = false
	this.Async = &async
	return &this
}

// GetAsync returns the Async field value if set, zero value otherwise.
func (o *OrgsConvertMemberToOutsideCollaboratorRequest) GetAsync() bool {
	if o == nil || o.Async == nil {
		var ret bool
		return ret
	}
	return *o.Async
}

// GetAsyncOk returns a tuple with the Async field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsConvertMemberToOutsideCollaboratorRequest) GetAsyncOk() (*bool, bool) {
	if o == nil || o.Async == nil {
		return nil, false
	}
	return o.Async, true
}

// HasAsync returns a boolean if a field has been set.
func (o *OrgsConvertMemberToOutsideCollaboratorRequest) HasAsync() bool {
	if o != nil && o.Async != nil {
		return true
	}

	return false
}

// SetAsync gets a reference to the given bool and assigns it to the Async field.
func (o *OrgsConvertMemberToOutsideCollaboratorRequest) SetAsync(v bool) {
	o.Async = &v
}

func (o OrgsConvertMemberToOutsideCollaboratorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Async != nil {
		toSerialize["async"] = o.Async
	}
	return json.Marshal(toSerialize)
}

type NullableOrgsConvertMemberToOutsideCollaboratorRequest struct {
	value *OrgsConvertMemberToOutsideCollaboratorRequest
	isSet bool
}

func (v NullableOrgsConvertMemberToOutsideCollaboratorRequest) Get() *OrgsConvertMemberToOutsideCollaboratorRequest {
	return v.value
}

func (v *NullableOrgsConvertMemberToOutsideCollaboratorRequest) Set(val *OrgsConvertMemberToOutsideCollaboratorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgsConvertMemberToOutsideCollaboratorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgsConvertMemberToOutsideCollaboratorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgsConvertMemberToOutsideCollaboratorRequest(val *OrgsConvertMemberToOutsideCollaboratorRequest) *NullableOrgsConvertMemberToOutsideCollaboratorRequest {
	return &NullableOrgsConvertMemberToOutsideCollaboratorRequest{value: val, isSet: true}
}

func (v NullableOrgsConvertMemberToOutsideCollaboratorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgsConvertMemberToOutsideCollaboratorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


