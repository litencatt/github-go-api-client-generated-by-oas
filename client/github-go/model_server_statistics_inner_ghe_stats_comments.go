/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ServerStatisticsInnerGheStatsComments struct for ServerStatisticsInnerGheStatsComments
type ServerStatisticsInnerGheStatsComments struct {
	TotalCommitComments *int32 `json:"total_commit_comments,omitempty"`
	TotalGistComments *int32 `json:"total_gist_comments,omitempty"`
	TotalIssueComments *int32 `json:"total_issue_comments,omitempty"`
	TotalPullRequestComments *int32 `json:"total_pull_request_comments,omitempty"`
}

// NewServerStatisticsInnerGheStatsComments instantiates a new ServerStatisticsInnerGheStatsComments object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerStatisticsInnerGheStatsComments() *ServerStatisticsInnerGheStatsComments {
	this := ServerStatisticsInnerGheStatsComments{}
	return &this
}

// NewServerStatisticsInnerGheStatsCommentsWithDefaults instantiates a new ServerStatisticsInnerGheStatsComments object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerStatisticsInnerGheStatsCommentsWithDefaults() *ServerStatisticsInnerGheStatsComments {
	this := ServerStatisticsInnerGheStatsComments{}
	return &this
}

// GetTotalCommitComments returns the TotalCommitComments field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsComments) GetTotalCommitComments() int32 {
	if o == nil || o.TotalCommitComments == nil {
		var ret int32
		return ret
	}
	return *o.TotalCommitComments
}

// GetTotalCommitCommentsOk returns a tuple with the TotalCommitComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsComments) GetTotalCommitCommentsOk() (*int32, bool) {
	if o == nil || o.TotalCommitComments == nil {
		return nil, false
	}
	return o.TotalCommitComments, true
}

// HasTotalCommitComments returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsComments) HasTotalCommitComments() bool {
	if o != nil && o.TotalCommitComments != nil {
		return true
	}

	return false
}

// SetTotalCommitComments gets a reference to the given int32 and assigns it to the TotalCommitComments field.
func (o *ServerStatisticsInnerGheStatsComments) SetTotalCommitComments(v int32) {
	o.TotalCommitComments = &v
}

// GetTotalGistComments returns the TotalGistComments field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsComments) GetTotalGistComments() int32 {
	if o == nil || o.TotalGistComments == nil {
		var ret int32
		return ret
	}
	return *o.TotalGistComments
}

// GetTotalGistCommentsOk returns a tuple with the TotalGistComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsComments) GetTotalGistCommentsOk() (*int32, bool) {
	if o == nil || o.TotalGistComments == nil {
		return nil, false
	}
	return o.TotalGistComments, true
}

// HasTotalGistComments returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsComments) HasTotalGistComments() bool {
	if o != nil && o.TotalGistComments != nil {
		return true
	}

	return false
}

// SetTotalGistComments gets a reference to the given int32 and assigns it to the TotalGistComments field.
func (o *ServerStatisticsInnerGheStatsComments) SetTotalGistComments(v int32) {
	o.TotalGistComments = &v
}

// GetTotalIssueComments returns the TotalIssueComments field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsComments) GetTotalIssueComments() int32 {
	if o == nil || o.TotalIssueComments == nil {
		var ret int32
		return ret
	}
	return *o.TotalIssueComments
}

// GetTotalIssueCommentsOk returns a tuple with the TotalIssueComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsComments) GetTotalIssueCommentsOk() (*int32, bool) {
	if o == nil || o.TotalIssueComments == nil {
		return nil, false
	}
	return o.TotalIssueComments, true
}

// HasTotalIssueComments returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsComments) HasTotalIssueComments() bool {
	if o != nil && o.TotalIssueComments != nil {
		return true
	}

	return false
}

// SetTotalIssueComments gets a reference to the given int32 and assigns it to the TotalIssueComments field.
func (o *ServerStatisticsInnerGheStatsComments) SetTotalIssueComments(v int32) {
	o.TotalIssueComments = &v
}

// GetTotalPullRequestComments returns the TotalPullRequestComments field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsComments) GetTotalPullRequestComments() int32 {
	if o == nil || o.TotalPullRequestComments == nil {
		var ret int32
		return ret
	}
	return *o.TotalPullRequestComments
}

// GetTotalPullRequestCommentsOk returns a tuple with the TotalPullRequestComments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsComments) GetTotalPullRequestCommentsOk() (*int32, bool) {
	if o == nil || o.TotalPullRequestComments == nil {
		return nil, false
	}
	return o.TotalPullRequestComments, true
}

// HasTotalPullRequestComments returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsComments) HasTotalPullRequestComments() bool {
	if o != nil && o.TotalPullRequestComments != nil {
		return true
	}

	return false
}

// SetTotalPullRequestComments gets a reference to the given int32 and assigns it to the TotalPullRequestComments field.
func (o *ServerStatisticsInnerGheStatsComments) SetTotalPullRequestComments(v int32) {
	o.TotalPullRequestComments = &v
}

func (o ServerStatisticsInnerGheStatsComments) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalCommitComments != nil {
		toSerialize["total_commit_comments"] = o.TotalCommitComments
	}
	if o.TotalGistComments != nil {
		toSerialize["total_gist_comments"] = o.TotalGistComments
	}
	if o.TotalIssueComments != nil {
		toSerialize["total_issue_comments"] = o.TotalIssueComments
	}
	if o.TotalPullRequestComments != nil {
		toSerialize["total_pull_request_comments"] = o.TotalPullRequestComments
	}
	return json.Marshal(toSerialize)
}

type NullableServerStatisticsInnerGheStatsComments struct {
	value *ServerStatisticsInnerGheStatsComments
	isSet bool
}

func (v NullableServerStatisticsInnerGheStatsComments) Get() *ServerStatisticsInnerGheStatsComments {
	return v.value
}

func (v *NullableServerStatisticsInnerGheStatsComments) Set(val *ServerStatisticsInnerGheStatsComments) {
	v.value = val
	v.isSet = true
}

func (v NullableServerStatisticsInnerGheStatsComments) IsSet() bool {
	return v.isSet
}

func (v *NullableServerStatisticsInnerGheStatsComments) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerStatisticsInnerGheStatsComments(val *ServerStatisticsInnerGheStatsComments) *NullableServerStatisticsInnerGheStatsComments {
	return &NullableServerStatisticsInnerGheStatsComments{value: val, isSet: true}
}

func (v NullableServerStatisticsInnerGheStatsComments) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerStatisticsInnerGheStatsComments) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


