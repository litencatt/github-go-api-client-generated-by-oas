/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GpgKeyEmailsInner struct for GpgKeyEmailsInner
type GpgKeyEmailsInner struct {
	Email *string `json:"email,omitempty"`
	Verified *bool `json:"verified,omitempty"`
}

// NewGpgKeyEmailsInner instantiates a new GpgKeyEmailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGpgKeyEmailsInner() *GpgKeyEmailsInner {
	this := GpgKeyEmailsInner{}
	return &this
}

// NewGpgKeyEmailsInnerWithDefaults instantiates a new GpgKeyEmailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGpgKeyEmailsInnerWithDefaults() *GpgKeyEmailsInner {
	this := GpgKeyEmailsInner{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *GpgKeyEmailsInner) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpgKeyEmailsInner) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *GpgKeyEmailsInner) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *GpgKeyEmailsInner) SetEmail(v string) {
	o.Email = &v
}

// GetVerified returns the Verified field value if set, zero value otherwise.
func (o *GpgKeyEmailsInner) GetVerified() bool {
	if o == nil || o.Verified == nil {
		var ret bool
		return ret
	}
	return *o.Verified
}

// GetVerifiedOk returns a tuple with the Verified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GpgKeyEmailsInner) GetVerifiedOk() (*bool, bool) {
	if o == nil || o.Verified == nil {
		return nil, false
	}
	return o.Verified, true
}

// HasVerified returns a boolean if a field has been set.
func (o *GpgKeyEmailsInner) HasVerified() bool {
	if o != nil && o.Verified != nil {
		return true
	}

	return false
}

// SetVerified gets a reference to the given bool and assigns it to the Verified field.
func (o *GpgKeyEmailsInner) SetVerified(v bool) {
	o.Verified = &v
}

func (o GpgKeyEmailsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Verified != nil {
		toSerialize["verified"] = o.Verified
	}
	return json.Marshal(toSerialize)
}

type NullableGpgKeyEmailsInner struct {
	value *GpgKeyEmailsInner
	isSet bool
}

func (v NullableGpgKeyEmailsInner) Get() *GpgKeyEmailsInner {
	return v.value
}

func (v *NullableGpgKeyEmailsInner) Set(val *GpgKeyEmailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGpgKeyEmailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGpgKeyEmailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGpgKeyEmailsInner(val *GpgKeyEmailsInner) *NullableGpgKeyEmailsInner {
	return &NullableGpgKeyEmailsInner{value: val, isSet: true}
}

func (v NullableGpgKeyEmailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGpgKeyEmailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


