/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// MigrationsSetLfsPreferenceRequest struct for MigrationsSetLfsPreferenceRequest
type MigrationsSetLfsPreferenceRequest struct {
	// Whether to store large files during the import. `opt_in` means large files will be stored using Git LFS. `opt_out` means large files will be removed during the import.
	UseLfs string `json:"use_lfs"`
}

// NewMigrationsSetLfsPreferenceRequest instantiates a new MigrationsSetLfsPreferenceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationsSetLfsPreferenceRequest(useLfs string) *MigrationsSetLfsPreferenceRequest {
	this := MigrationsSetLfsPreferenceRequest{}
	this.UseLfs = useLfs
	return &this
}

// NewMigrationsSetLfsPreferenceRequestWithDefaults instantiates a new MigrationsSetLfsPreferenceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationsSetLfsPreferenceRequestWithDefaults() *MigrationsSetLfsPreferenceRequest {
	this := MigrationsSetLfsPreferenceRequest{}
	return &this
}

// GetUseLfs returns the UseLfs field value
func (o *MigrationsSetLfsPreferenceRequest) GetUseLfs() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UseLfs
}

// GetUseLfsOk returns a tuple with the UseLfs field value
// and a boolean to check if the value has been set.
func (o *MigrationsSetLfsPreferenceRequest) GetUseLfsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseLfs, true
}

// SetUseLfs sets field value
func (o *MigrationsSetLfsPreferenceRequest) SetUseLfs(v string) {
	o.UseLfs = v
}

func (o MigrationsSetLfsPreferenceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["use_lfs"] = o.UseLfs
	}
	return json.Marshal(toSerialize)
}

type NullableMigrationsSetLfsPreferenceRequest struct {
	value *MigrationsSetLfsPreferenceRequest
	isSet bool
}

func (v NullableMigrationsSetLfsPreferenceRequest) Get() *MigrationsSetLfsPreferenceRequest {
	return v.value
}

func (v *NullableMigrationsSetLfsPreferenceRequest) Set(val *MigrationsSetLfsPreferenceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationsSetLfsPreferenceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationsSetLfsPreferenceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationsSetLfsPreferenceRequest(val *MigrationsSetLfsPreferenceRequest) *NullableMigrationsSetLfsPreferenceRequest {
	return &NullableMigrationsSetLfsPreferenceRequest{value: val, isSet: true}
}

func (v NullableMigrationsSetLfsPreferenceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationsSetLfsPreferenceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


