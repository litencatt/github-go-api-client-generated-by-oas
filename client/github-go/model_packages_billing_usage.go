/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PackagesBillingUsage struct for PackagesBillingUsage
type PackagesBillingUsage struct {
	// Sum of the free and paid storage space (GB) for GitHuub Packages.
	TotalGigabytesBandwidthUsed int32 `json:"total_gigabytes_bandwidth_used"`
	// Total paid storage space (GB) for GitHuub Packages.
	TotalPaidGigabytesBandwidthUsed int32 `json:"total_paid_gigabytes_bandwidth_used"`
	// Free storage space (GB) for GitHub Packages.
	IncludedGigabytesBandwidth int32 `json:"included_gigabytes_bandwidth"`
}

// NewPackagesBillingUsage instantiates a new PackagesBillingUsage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPackagesBillingUsage(totalGigabytesBandwidthUsed int32, totalPaidGigabytesBandwidthUsed int32, includedGigabytesBandwidth int32) *PackagesBillingUsage {
	this := PackagesBillingUsage{}
	this.TotalGigabytesBandwidthUsed = totalGigabytesBandwidthUsed
	this.TotalPaidGigabytesBandwidthUsed = totalPaidGigabytesBandwidthUsed
	this.IncludedGigabytesBandwidth = includedGigabytesBandwidth
	return &this
}

// NewPackagesBillingUsageWithDefaults instantiates a new PackagesBillingUsage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPackagesBillingUsageWithDefaults() *PackagesBillingUsage {
	this := PackagesBillingUsage{}
	return &this
}

// GetTotalGigabytesBandwidthUsed returns the TotalGigabytesBandwidthUsed field value
func (o *PackagesBillingUsage) GetTotalGigabytesBandwidthUsed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalGigabytesBandwidthUsed
}

// GetTotalGigabytesBandwidthUsedOk returns a tuple with the TotalGigabytesBandwidthUsed field value
// and a boolean to check if the value has been set.
func (o *PackagesBillingUsage) GetTotalGigabytesBandwidthUsedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalGigabytesBandwidthUsed, true
}

// SetTotalGigabytesBandwidthUsed sets field value
func (o *PackagesBillingUsage) SetTotalGigabytesBandwidthUsed(v int32) {
	o.TotalGigabytesBandwidthUsed = v
}

// GetTotalPaidGigabytesBandwidthUsed returns the TotalPaidGigabytesBandwidthUsed field value
func (o *PackagesBillingUsage) GetTotalPaidGigabytesBandwidthUsed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalPaidGigabytesBandwidthUsed
}

// GetTotalPaidGigabytesBandwidthUsedOk returns a tuple with the TotalPaidGigabytesBandwidthUsed field value
// and a boolean to check if the value has been set.
func (o *PackagesBillingUsage) GetTotalPaidGigabytesBandwidthUsedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalPaidGigabytesBandwidthUsed, true
}

// SetTotalPaidGigabytesBandwidthUsed sets field value
func (o *PackagesBillingUsage) SetTotalPaidGigabytesBandwidthUsed(v int32) {
	o.TotalPaidGigabytesBandwidthUsed = v
}

// GetIncludedGigabytesBandwidth returns the IncludedGigabytesBandwidth field value
func (o *PackagesBillingUsage) GetIncludedGigabytesBandwidth() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IncludedGigabytesBandwidth
}

// GetIncludedGigabytesBandwidthOk returns a tuple with the IncludedGigabytesBandwidth field value
// and a boolean to check if the value has been set.
func (o *PackagesBillingUsage) GetIncludedGigabytesBandwidthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedGigabytesBandwidth, true
}

// SetIncludedGigabytesBandwidth sets field value
func (o *PackagesBillingUsage) SetIncludedGigabytesBandwidth(v int32) {
	o.IncludedGigabytesBandwidth = v
}

func (o PackagesBillingUsage) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total_gigabytes_bandwidth_used"] = o.TotalGigabytesBandwidthUsed
	}
	if true {
		toSerialize["total_paid_gigabytes_bandwidth_used"] = o.TotalPaidGigabytesBandwidthUsed
	}
	if true {
		toSerialize["included_gigabytes_bandwidth"] = o.IncludedGigabytesBandwidth
	}
	return json.Marshal(toSerialize)
}

type NullablePackagesBillingUsage struct {
	value *PackagesBillingUsage
	isSet bool
}

func (v NullablePackagesBillingUsage) Get() *PackagesBillingUsage {
	return v.value
}

func (v *NullablePackagesBillingUsage) Set(val *PackagesBillingUsage) {
	v.value = val
	v.isSet = true
}

func (v NullablePackagesBillingUsage) IsSet() bool {
	return v.isSet
}

func (v *NullablePackagesBillingUsage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePackagesBillingUsage(val *PackagesBillingUsage) *NullablePackagesBillingUsage {
	return &NullablePackagesBillingUsage{value: val, isSet: true}
}

func (v NullablePackagesBillingUsage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePackagesBillingUsage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


