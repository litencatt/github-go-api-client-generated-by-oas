/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposCreateDispatchEventRequest struct for ReposCreateDispatchEventRequest
type ReposCreateDispatchEventRequest struct {
	// A custom webhook event name. Must be 100 characters or fewer.
	EventType string `json:"event_type"`
	// JSON payload with extra information about the webhook event that your action or workflow may use.
	ClientPayload map[string]interface{} `json:"client_payload,omitempty"`
}

// NewReposCreateDispatchEventRequest instantiates a new ReposCreateDispatchEventRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposCreateDispatchEventRequest(eventType string) *ReposCreateDispatchEventRequest {
	this := ReposCreateDispatchEventRequest{}
	this.EventType = eventType
	return &this
}

// NewReposCreateDispatchEventRequestWithDefaults instantiates a new ReposCreateDispatchEventRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposCreateDispatchEventRequestWithDefaults() *ReposCreateDispatchEventRequest {
	this := ReposCreateDispatchEventRequest{}
	return &this
}

// GetEventType returns the EventType field value
func (o *ReposCreateDispatchEventRequest) GetEventType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *ReposCreateDispatchEventRequest) GetEventTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *ReposCreateDispatchEventRequest) SetEventType(v string) {
	o.EventType = v
}

// GetClientPayload returns the ClientPayload field value if set, zero value otherwise.
func (o *ReposCreateDispatchEventRequest) GetClientPayload() map[string]interface{} {
	if o == nil || o.ClientPayload == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.ClientPayload
}

// GetClientPayloadOk returns a tuple with the ClientPayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateDispatchEventRequest) GetClientPayloadOk() (map[string]interface{}, bool) {
	if o == nil || o.ClientPayload == nil {
		return nil, false
	}
	return o.ClientPayload, true
}

// HasClientPayload returns a boolean if a field has been set.
func (o *ReposCreateDispatchEventRequest) HasClientPayload() bool {
	if o != nil && o.ClientPayload != nil {
		return true
	}

	return false
}

// SetClientPayload gets a reference to the given map[string]interface{} and assigns it to the ClientPayload field.
func (o *ReposCreateDispatchEventRequest) SetClientPayload(v map[string]interface{}) {
	o.ClientPayload = v
}

func (o ReposCreateDispatchEventRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["event_type"] = o.EventType
	}
	if o.ClientPayload != nil {
		toSerialize["client_payload"] = o.ClientPayload
	}
	return json.Marshal(toSerialize)
}

type NullableReposCreateDispatchEventRequest struct {
	value *ReposCreateDispatchEventRequest
	isSet bool
}

func (v NullableReposCreateDispatchEventRequest) Get() *ReposCreateDispatchEventRequest {
	return v.value
}

func (v *NullableReposCreateDispatchEventRequest) Set(val *ReposCreateDispatchEventRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposCreateDispatchEventRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposCreateDispatchEventRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposCreateDispatchEventRequest(val *ReposCreateDispatchEventRequest) *NullableReposCreateDispatchEventRequest {
	return &NullableReposCreateDispatchEventRequest{value: val, isSet: true}
}

func (v NullableReposCreateDispatchEventRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposCreateDispatchEventRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


