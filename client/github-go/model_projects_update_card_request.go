/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ProjectsUpdateCardRequest struct for ProjectsUpdateCardRequest
type ProjectsUpdateCardRequest struct {
	// The project card's note
	Note NullableString `json:"note,omitempty"`
	// Whether or not the card is archived
	Archived *bool `json:"archived,omitempty"`
}

// NewProjectsUpdateCardRequest instantiates a new ProjectsUpdateCardRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsUpdateCardRequest() *ProjectsUpdateCardRequest {
	this := ProjectsUpdateCardRequest{}
	return &this
}

// NewProjectsUpdateCardRequestWithDefaults instantiates a new ProjectsUpdateCardRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsUpdateCardRequestWithDefaults() *ProjectsUpdateCardRequest {
	this := ProjectsUpdateCardRequest{}
	return &this
}

// GetNote returns the Note field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectsUpdateCardRequest) GetNote() string {
	if o == nil || o.Note.Get() == nil {
		var ret string
		return ret
	}
	return *o.Note.Get()
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectsUpdateCardRequest) GetNoteOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Note.Get(), o.Note.IsSet()
}

// HasNote returns a boolean if a field has been set.
func (o *ProjectsUpdateCardRequest) HasNote() bool {
	if o != nil && o.Note.IsSet() {
		return true
	}

	return false
}

// SetNote gets a reference to the given NullableString and assigns it to the Note field.
func (o *ProjectsUpdateCardRequest) SetNote(v string) {
	o.Note.Set(&v)
}
// SetNoteNil sets the value for Note to be an explicit nil
func (o *ProjectsUpdateCardRequest) SetNoteNil() {
	o.Note.Set(nil)
}

// UnsetNote ensures that no value is present for Note, not even an explicit nil
func (o *ProjectsUpdateCardRequest) UnsetNote() {
	o.Note.Unset()
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *ProjectsUpdateCardRequest) GetArchived() bool {
	if o == nil || o.Archived == nil {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsUpdateCardRequest) GetArchivedOk() (*bool, bool) {
	if o == nil || o.Archived == nil {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *ProjectsUpdateCardRequest) HasArchived() bool {
	if o != nil && o.Archived != nil {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *ProjectsUpdateCardRequest) SetArchived(v bool) {
	o.Archived = &v
}

func (o ProjectsUpdateCardRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Note.IsSet() {
		toSerialize["note"] = o.Note.Get()
	}
	if o.Archived != nil {
		toSerialize["archived"] = o.Archived
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsUpdateCardRequest struct {
	value *ProjectsUpdateCardRequest
	isSet bool
}

func (v NullableProjectsUpdateCardRequest) Get() *ProjectsUpdateCardRequest {
	return v.value
}

func (v *NullableProjectsUpdateCardRequest) Set(val *ProjectsUpdateCardRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsUpdateCardRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsUpdateCardRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsUpdateCardRequest(val *ProjectsUpdateCardRequest) *NullableProjectsUpdateCardRequest {
	return &NullableProjectsUpdateCardRequest{value: val, isSet: true}
}

func (v NullableProjectsUpdateCardRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsUpdateCardRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


