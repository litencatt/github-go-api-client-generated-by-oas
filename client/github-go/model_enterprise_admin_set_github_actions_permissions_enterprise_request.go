/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest struct for EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest
type EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest struct {
	EnabledOrganizations EnabledOrganizations `json:"enabled_organizations"`
	AllowedActions *AllowedActions `json:"allowed_actions,omitempty"`
}

// NewEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest instantiates a new EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest(enabledOrganizations EnabledOrganizations) *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest {
	this := EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest{}
	this.EnabledOrganizations = enabledOrganizations
	return &this
}

// NewEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequestWithDefaults instantiates a new EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequestWithDefaults() *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest {
	this := EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest{}
	return &this
}

// GetEnabledOrganizations returns the EnabledOrganizations field value
func (o *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) GetEnabledOrganizations() EnabledOrganizations {
	if o == nil {
		var ret EnabledOrganizations
		return ret
	}

	return o.EnabledOrganizations
}

// GetEnabledOrganizationsOk returns a tuple with the EnabledOrganizations field value
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) GetEnabledOrganizationsOk() (*EnabledOrganizations, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnabledOrganizations, true
}

// SetEnabledOrganizations sets field value
func (o *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) SetEnabledOrganizations(v EnabledOrganizations) {
	o.EnabledOrganizations = v
}

// GetAllowedActions returns the AllowedActions field value if set, zero value otherwise.
func (o *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) GetAllowedActions() AllowedActions {
	if o == nil || o.AllowedActions == nil {
		var ret AllowedActions
		return ret
	}
	return *o.AllowedActions
}

// GetAllowedActionsOk returns a tuple with the AllowedActions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) GetAllowedActionsOk() (*AllowedActions, bool) {
	if o == nil || o.AllowedActions == nil {
		return nil, false
	}
	return o.AllowedActions, true
}

// HasAllowedActions returns a boolean if a field has been set.
func (o *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) HasAllowedActions() bool {
	if o != nil && o.AllowedActions != nil {
		return true
	}

	return false
}

// SetAllowedActions gets a reference to the given AllowedActions and assigns it to the AllowedActions field.
func (o *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) SetAllowedActions(v AllowedActions) {
	o.AllowedActions = &v
}

func (o EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enabled_organizations"] = o.EnabledOrganizations
	}
	if o.AllowedActions != nil {
		toSerialize["allowed_actions"] = o.AllowedActions
	}
	return json.Marshal(toSerialize)
}

type NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest struct {
	value *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest
	isSet bool
}

func (v NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) Get() *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest {
	return v.value
}

func (v *NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) Set(val *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest(val *EnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) *NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest {
	return &NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest{value: val, isSet: true}
}

func (v NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseAdminSetGithubActionsPermissionsEnterpriseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


