/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ScimUserListEnterpriseResourcesInnerName struct for ScimUserListEnterpriseResourcesInnerName
type ScimUserListEnterpriseResourcesInnerName struct {
	GivenName *string `json:"givenName,omitempty"`
	FamilyName *string `json:"familyName,omitempty"`
}

// NewScimUserListEnterpriseResourcesInnerName instantiates a new ScimUserListEnterpriseResourcesInnerName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimUserListEnterpriseResourcesInnerName() *ScimUserListEnterpriseResourcesInnerName {
	this := ScimUserListEnterpriseResourcesInnerName{}
	return &this
}

// NewScimUserListEnterpriseResourcesInnerNameWithDefaults instantiates a new ScimUserListEnterpriseResourcesInnerName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimUserListEnterpriseResourcesInnerNameWithDefaults() *ScimUserListEnterpriseResourcesInnerName {
	this := ScimUserListEnterpriseResourcesInnerName{}
	return &this
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *ScimUserListEnterpriseResourcesInnerName) GetGivenName() string {
	if o == nil || o.GivenName == nil {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimUserListEnterpriseResourcesInnerName) GetGivenNameOk() (*string, bool) {
	if o == nil || o.GivenName == nil {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *ScimUserListEnterpriseResourcesInnerName) HasGivenName() bool {
	if o != nil && o.GivenName != nil {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *ScimUserListEnterpriseResourcesInnerName) SetGivenName(v string) {
	o.GivenName = &v
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *ScimUserListEnterpriseResourcesInnerName) GetFamilyName() string {
	if o == nil || o.FamilyName == nil {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimUserListEnterpriseResourcesInnerName) GetFamilyNameOk() (*string, bool) {
	if o == nil || o.FamilyName == nil {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *ScimUserListEnterpriseResourcesInnerName) HasFamilyName() bool {
	if o != nil && o.FamilyName != nil {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *ScimUserListEnterpriseResourcesInnerName) SetFamilyName(v string) {
	o.FamilyName = &v
}

func (o ScimUserListEnterpriseResourcesInnerName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GivenName != nil {
		toSerialize["givenName"] = o.GivenName
	}
	if o.FamilyName != nil {
		toSerialize["familyName"] = o.FamilyName
	}
	return json.Marshal(toSerialize)
}

type NullableScimUserListEnterpriseResourcesInnerName struct {
	value *ScimUserListEnterpriseResourcesInnerName
	isSet bool
}

func (v NullableScimUserListEnterpriseResourcesInnerName) Get() *ScimUserListEnterpriseResourcesInnerName {
	return v.value
}

func (v *NullableScimUserListEnterpriseResourcesInnerName) Set(val *ScimUserListEnterpriseResourcesInnerName) {
	v.value = val
	v.isSet = true
}

func (v NullableScimUserListEnterpriseResourcesInnerName) IsSet() bool {
	return v.isSet
}

func (v *NullableScimUserListEnterpriseResourcesInnerName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimUserListEnterpriseResourcesInnerName(val *ScimUserListEnterpriseResourcesInnerName) *NullableScimUserListEnterpriseResourcesInnerName {
	return &NullableScimUserListEnterpriseResourcesInnerName{value: val, isSet: true}
}

func (v NullableScimUserListEnterpriseResourcesInnerName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimUserListEnterpriseResourcesInnerName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


