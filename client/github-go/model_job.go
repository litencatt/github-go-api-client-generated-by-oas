/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// Job Information of a job execution in a workflow run
type Job struct {
	// The id of the job.
	Id int32 `json:"id"`
	// The id of the associated workflow run.
	RunId int32 `json:"run_id"`
	RunUrl string `json:"run_url"`
	// Attempt number of the associated workflow run, 1 for first attempt and higher if the workflow was re-run.
	RunAttempt *int32 `json:"run_attempt,omitempty"`
	NodeId string `json:"node_id"`
	// The SHA of the commit that is being run.
	HeadSha string `json:"head_sha"`
	Url string `json:"url"`
	HtmlUrl NullableString `json:"html_url"`
	// The phase of the lifecycle that the job is currently in.
	Status string `json:"status"`
	// The outcome of the job.
	Conclusion NullableString `json:"conclusion"`
	// The time that the job started, in ISO 8601 format.
	StartedAt time.Time `json:"started_at"`
	// The time that the job finished, in ISO 8601 format.
	CompletedAt NullableTime `json:"completed_at"`
	// The name of the job.
	Name string `json:"name"`
	// Steps in this job.
	Steps []JobStepsInner `json:"steps,omitempty"`
	CheckRunUrl string `json:"check_run_url"`
	// Labels for the workflow job. Specified by the \"runs_on\" attribute in the action's workflow file.
	Labels []string `json:"labels"`
	// The ID of the runner to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)
	RunnerId NullableInt32 `json:"runner_id"`
	// The name of the runner to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)
	RunnerName NullableString `json:"runner_name"`
	// The ID of the runner group to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)
	RunnerGroupId NullableInt32 `json:"runner_group_id"`
	// The name of the runner group to which this job has been assigned. (If a runner hasn't yet been assigned, this will be null.)
	RunnerGroupName NullableString `json:"runner_group_name"`
}

// NewJob instantiates a new Job object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJob(id int32, runId int32, runUrl string, nodeId string, headSha string, url string, htmlUrl NullableString, status string, conclusion NullableString, startedAt time.Time, completedAt NullableTime, name string, checkRunUrl string, labels []string, runnerId NullableInt32, runnerName NullableString, runnerGroupId NullableInt32, runnerGroupName NullableString) *Job {
	this := Job{}
	this.Id = id
	this.RunId = runId
	this.RunUrl = runUrl
	this.NodeId = nodeId
	this.HeadSha = headSha
	this.Url = url
	this.HtmlUrl = htmlUrl
	this.Status = status
	this.Conclusion = conclusion
	this.StartedAt = startedAt
	this.CompletedAt = completedAt
	this.Name = name
	this.CheckRunUrl = checkRunUrl
	this.Labels = labels
	this.RunnerId = runnerId
	this.RunnerName = runnerName
	this.RunnerGroupId = runnerGroupId
	this.RunnerGroupName = runnerGroupName
	return &this
}

// NewJobWithDefaults instantiates a new Job object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobWithDefaults() *Job {
	this := Job{}
	return &this
}

// GetId returns the Id field value
func (o *Job) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Job) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Job) SetId(v int32) {
	o.Id = v
}

// GetRunId returns the RunId field value
func (o *Job) GetRunId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RunId
}

// GetRunIdOk returns a tuple with the RunId field value
// and a boolean to check if the value has been set.
func (o *Job) GetRunIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunId, true
}

// SetRunId sets field value
func (o *Job) SetRunId(v int32) {
	o.RunId = v
}

// GetRunUrl returns the RunUrl field value
func (o *Job) GetRunUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RunUrl
}

// GetRunUrlOk returns a tuple with the RunUrl field value
// and a boolean to check if the value has been set.
func (o *Job) GetRunUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunUrl, true
}

// SetRunUrl sets field value
func (o *Job) SetRunUrl(v string) {
	o.RunUrl = v
}

// GetRunAttempt returns the RunAttempt field value if set, zero value otherwise.
func (o *Job) GetRunAttempt() int32 {
	if o == nil || o.RunAttempt == nil {
		var ret int32
		return ret
	}
	return *o.RunAttempt
}

// GetRunAttemptOk returns a tuple with the RunAttempt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetRunAttemptOk() (*int32, bool) {
	if o == nil || o.RunAttempt == nil {
		return nil, false
	}
	return o.RunAttempt, true
}

// HasRunAttempt returns a boolean if a field has been set.
func (o *Job) HasRunAttempt() bool {
	if o != nil && o.RunAttempt != nil {
		return true
	}

	return false
}

// SetRunAttempt gets a reference to the given int32 and assigns it to the RunAttempt field.
func (o *Job) SetRunAttempt(v int32) {
	o.RunAttempt = &v
}

// GetNodeId returns the NodeId field value
func (o *Job) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *Job) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *Job) SetNodeId(v string) {
	o.NodeId = v
}

// GetHeadSha returns the HeadSha field value
func (o *Job) GetHeadSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HeadSha
}

// GetHeadShaOk returns a tuple with the HeadSha field value
// and a boolean to check if the value has been set.
func (o *Job) GetHeadShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeadSha, true
}

// SetHeadSha sets field value
func (o *Job) SetHeadSha(v string) {
	o.HeadSha = v
}

// GetUrl returns the Url field value
func (o *Job) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Job) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Job) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Job) GetHtmlUrl() string {
	if o == nil || o.HtmlUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.HtmlUrl.Get()
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Job) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtmlUrl.Get(), o.HtmlUrl.IsSet()
}

// SetHtmlUrl sets field value
func (o *Job) SetHtmlUrl(v string) {
	o.HtmlUrl.Set(&v)
}

// GetStatus returns the Status field value
func (o *Job) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *Job) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *Job) SetStatus(v string) {
	o.Status = v
}

// GetConclusion returns the Conclusion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Job) GetConclusion() string {
	if o == nil || o.Conclusion.Get() == nil {
		var ret string
		return ret
	}

	return *o.Conclusion.Get()
}

// GetConclusionOk returns a tuple with the Conclusion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Job) GetConclusionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conclusion.Get(), o.Conclusion.IsSet()
}

// SetConclusion sets field value
func (o *Job) SetConclusion(v string) {
	o.Conclusion.Set(&v)
}

// GetStartedAt returns the StartedAt field value
func (o *Job) GetStartedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartedAt
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
func (o *Job) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartedAt, true
}

// SetStartedAt sets field value
func (o *Job) SetStartedAt(v time.Time) {
	o.StartedAt = v
}

// GetCompletedAt returns the CompletedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Job) GetCompletedAt() time.Time {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Job) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// SetCompletedAt sets field value
func (o *Job) SetCompletedAt(v time.Time) {
	o.CompletedAt.Set(&v)
}

// GetName returns the Name field value
func (o *Job) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Job) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Job) SetName(v string) {
	o.Name = v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *Job) GetSteps() []JobStepsInner {
	if o == nil || o.Steps == nil {
		var ret []JobStepsInner
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Job) GetStepsOk() ([]JobStepsInner, bool) {
	if o == nil || o.Steps == nil {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *Job) HasSteps() bool {
	if o != nil && o.Steps != nil {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []JobStepsInner and assigns it to the Steps field.
func (o *Job) SetSteps(v []JobStepsInner) {
	o.Steps = v
}

// GetCheckRunUrl returns the CheckRunUrl field value
func (o *Job) GetCheckRunUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CheckRunUrl
}

// GetCheckRunUrlOk returns a tuple with the CheckRunUrl field value
// and a boolean to check if the value has been set.
func (o *Job) GetCheckRunUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckRunUrl, true
}

// SetCheckRunUrl sets field value
func (o *Job) SetCheckRunUrl(v string) {
	o.CheckRunUrl = v
}

// GetLabels returns the Labels field value
func (o *Job) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *Job) GetLabelsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *Job) SetLabels(v []string) {
	o.Labels = v
}

// GetRunnerId returns the RunnerId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Job) GetRunnerId() int32 {
	if o == nil || o.RunnerId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.RunnerId.Get()
}

// GetRunnerIdOk returns a tuple with the RunnerId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Job) GetRunnerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunnerId.Get(), o.RunnerId.IsSet()
}

// SetRunnerId sets field value
func (o *Job) SetRunnerId(v int32) {
	o.RunnerId.Set(&v)
}

// GetRunnerName returns the RunnerName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Job) GetRunnerName() string {
	if o == nil || o.RunnerName.Get() == nil {
		var ret string
		return ret
	}

	return *o.RunnerName.Get()
}

// GetRunnerNameOk returns a tuple with the RunnerName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Job) GetRunnerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunnerName.Get(), o.RunnerName.IsSet()
}

// SetRunnerName sets field value
func (o *Job) SetRunnerName(v string) {
	o.RunnerName.Set(&v)
}

// GetRunnerGroupId returns the RunnerGroupId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *Job) GetRunnerGroupId() int32 {
	if o == nil || o.RunnerGroupId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.RunnerGroupId.Get()
}

// GetRunnerGroupIdOk returns a tuple with the RunnerGroupId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Job) GetRunnerGroupIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunnerGroupId.Get(), o.RunnerGroupId.IsSet()
}

// SetRunnerGroupId sets field value
func (o *Job) SetRunnerGroupId(v int32) {
	o.RunnerGroupId.Set(&v)
}

// GetRunnerGroupName returns the RunnerGroupName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Job) GetRunnerGroupName() string {
	if o == nil || o.RunnerGroupName.Get() == nil {
		var ret string
		return ret
	}

	return *o.RunnerGroupName.Get()
}

// GetRunnerGroupNameOk returns a tuple with the RunnerGroupName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Job) GetRunnerGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RunnerGroupName.Get(), o.RunnerGroupName.IsSet()
}

// SetRunnerGroupName sets field value
func (o *Job) SetRunnerGroupName(v string) {
	o.RunnerGroupName.Set(&v)
}

func (o Job) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["run_id"] = o.RunId
	}
	if true {
		toSerialize["run_url"] = o.RunUrl
	}
	if o.RunAttempt != nil {
		toSerialize["run_attempt"] = o.RunAttempt
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["head_sha"] = o.HeadSha
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl.Get()
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["conclusion"] = o.Conclusion.Get()
	}
	if true {
		toSerialize["started_at"] = o.StartedAt
	}
	if true {
		toSerialize["completed_at"] = o.CompletedAt.Get()
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Steps != nil {
		toSerialize["steps"] = o.Steps
	}
	if true {
		toSerialize["check_run_url"] = o.CheckRunUrl
	}
	if true {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["runner_id"] = o.RunnerId.Get()
	}
	if true {
		toSerialize["runner_name"] = o.RunnerName.Get()
	}
	if true {
		toSerialize["runner_group_id"] = o.RunnerGroupId.Get()
	}
	if true {
		toSerialize["runner_group_name"] = o.RunnerGroupName.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableJob struct {
	value *Job
	isSet bool
}

func (v NullableJob) Get() *Job {
	return v.value
}

func (v *NullableJob) Set(val *Job) {
	v.value = val
	v.isSet = true
}

func (v NullableJob) IsSet() bool {
	return v.isSet
}

func (v *NullableJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJob(val *Job) *NullableJob {
	return &NullableJob{value: val, isSet: true}
}

func (v NullableJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


