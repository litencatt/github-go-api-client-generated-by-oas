/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// AddedToProjectIssueEventProjectCard struct for AddedToProjectIssueEventProjectCard
type AddedToProjectIssueEventProjectCard struct {
	Id int32 `json:"id"`
	Url string `json:"url"`
	ProjectId int32 `json:"project_id"`
	ProjectUrl string `json:"project_url"`
	ColumnName string `json:"column_name"`
	PreviousColumnName *string `json:"previous_column_name,omitempty"`
}

// NewAddedToProjectIssueEventProjectCard instantiates a new AddedToProjectIssueEventProjectCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddedToProjectIssueEventProjectCard(id int32, url string, projectId int32, projectUrl string, columnName string) *AddedToProjectIssueEventProjectCard {
	this := AddedToProjectIssueEventProjectCard{}
	this.Id = id
	this.Url = url
	this.ProjectId = projectId
	this.ProjectUrl = projectUrl
	this.ColumnName = columnName
	return &this
}

// NewAddedToProjectIssueEventProjectCardWithDefaults instantiates a new AddedToProjectIssueEventProjectCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddedToProjectIssueEventProjectCardWithDefaults() *AddedToProjectIssueEventProjectCard {
	this := AddedToProjectIssueEventProjectCard{}
	return &this
}

// GetId returns the Id field value
func (o *AddedToProjectIssueEventProjectCard) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AddedToProjectIssueEventProjectCard) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AddedToProjectIssueEventProjectCard) SetId(v int32) {
	o.Id = v
}

// GetUrl returns the Url field value
func (o *AddedToProjectIssueEventProjectCard) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *AddedToProjectIssueEventProjectCard) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *AddedToProjectIssueEventProjectCard) SetUrl(v string) {
	o.Url = v
}

// GetProjectId returns the ProjectId field value
func (o *AddedToProjectIssueEventProjectCard) GetProjectId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProjectId
}

// GetProjectIdOk returns a tuple with the ProjectId field value
// and a boolean to check if the value has been set.
func (o *AddedToProjectIssueEventProjectCard) GetProjectIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectId, true
}

// SetProjectId sets field value
func (o *AddedToProjectIssueEventProjectCard) SetProjectId(v int32) {
	o.ProjectId = v
}

// GetProjectUrl returns the ProjectUrl field value
func (o *AddedToProjectIssueEventProjectCard) GetProjectUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProjectUrl
}

// GetProjectUrlOk returns a tuple with the ProjectUrl field value
// and a boolean to check if the value has been set.
func (o *AddedToProjectIssueEventProjectCard) GetProjectUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProjectUrl, true
}

// SetProjectUrl sets field value
func (o *AddedToProjectIssueEventProjectCard) SetProjectUrl(v string) {
	o.ProjectUrl = v
}

// GetColumnName returns the ColumnName field value
func (o *AddedToProjectIssueEventProjectCard) GetColumnName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ColumnName
}

// GetColumnNameOk returns a tuple with the ColumnName field value
// and a boolean to check if the value has been set.
func (o *AddedToProjectIssueEventProjectCard) GetColumnNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ColumnName, true
}

// SetColumnName sets field value
func (o *AddedToProjectIssueEventProjectCard) SetColumnName(v string) {
	o.ColumnName = v
}

// GetPreviousColumnName returns the PreviousColumnName field value if set, zero value otherwise.
func (o *AddedToProjectIssueEventProjectCard) GetPreviousColumnName() string {
	if o == nil || o.PreviousColumnName == nil {
		var ret string
		return ret
	}
	return *o.PreviousColumnName
}

// GetPreviousColumnNameOk returns a tuple with the PreviousColumnName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddedToProjectIssueEventProjectCard) GetPreviousColumnNameOk() (*string, bool) {
	if o == nil || o.PreviousColumnName == nil {
		return nil, false
	}
	return o.PreviousColumnName, true
}

// HasPreviousColumnName returns a boolean if a field has been set.
func (o *AddedToProjectIssueEventProjectCard) HasPreviousColumnName() bool {
	if o != nil && o.PreviousColumnName != nil {
		return true
	}

	return false
}

// SetPreviousColumnName gets a reference to the given string and assigns it to the PreviousColumnName field.
func (o *AddedToProjectIssueEventProjectCard) SetPreviousColumnName(v string) {
	o.PreviousColumnName = &v
}

func (o AddedToProjectIssueEventProjectCard) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["project_id"] = o.ProjectId
	}
	if true {
		toSerialize["project_url"] = o.ProjectUrl
	}
	if true {
		toSerialize["column_name"] = o.ColumnName
	}
	if o.PreviousColumnName != nil {
		toSerialize["previous_column_name"] = o.PreviousColumnName
	}
	return json.Marshal(toSerialize)
}

type NullableAddedToProjectIssueEventProjectCard struct {
	value *AddedToProjectIssueEventProjectCard
	isSet bool
}

func (v NullableAddedToProjectIssueEventProjectCard) Get() *AddedToProjectIssueEventProjectCard {
	return v.value
}

func (v *NullableAddedToProjectIssueEventProjectCard) Set(val *AddedToProjectIssueEventProjectCard) {
	v.value = val
	v.isSet = true
}

func (v NullableAddedToProjectIssueEventProjectCard) IsSet() bool {
	return v.isSet
}

func (v *NullableAddedToProjectIssueEventProjectCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddedToProjectIssueEventProjectCard(val *AddedToProjectIssueEventProjectCard) *NullableAddedToProjectIssueEventProjectCard {
	return &NullableAddedToProjectIssueEventProjectCard{value: val, isSet: true}
}

func (v NullableAddedToProjectIssueEventProjectCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddedToProjectIssueEventProjectCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


