/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// AdvancedSecurityActiveCommittersRepository struct for AdvancedSecurityActiveCommittersRepository
type AdvancedSecurityActiveCommittersRepository struct {
	Name string `json:"name"`
	AdvancedSecurityCommitters int32 `json:"advanced_security_committers"`
	AdvancedSecurityCommittersBreakdown []AdvancedSecurityActiveCommittersUser `json:"advanced_security_committers_breakdown"`
}

// NewAdvancedSecurityActiveCommittersRepository instantiates a new AdvancedSecurityActiveCommittersRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdvancedSecurityActiveCommittersRepository(name string, advancedSecurityCommitters int32, advancedSecurityCommittersBreakdown []AdvancedSecurityActiveCommittersUser) *AdvancedSecurityActiveCommittersRepository {
	this := AdvancedSecurityActiveCommittersRepository{}
	this.Name = name
	this.AdvancedSecurityCommitters = advancedSecurityCommitters
	this.AdvancedSecurityCommittersBreakdown = advancedSecurityCommittersBreakdown
	return &this
}

// NewAdvancedSecurityActiveCommittersRepositoryWithDefaults instantiates a new AdvancedSecurityActiveCommittersRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdvancedSecurityActiveCommittersRepositoryWithDefaults() *AdvancedSecurityActiveCommittersRepository {
	this := AdvancedSecurityActiveCommittersRepository{}
	return &this
}

// GetName returns the Name field value
func (o *AdvancedSecurityActiveCommittersRepository) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AdvancedSecurityActiveCommittersRepository) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AdvancedSecurityActiveCommittersRepository) SetName(v string) {
	o.Name = v
}

// GetAdvancedSecurityCommitters returns the AdvancedSecurityCommitters field value
func (o *AdvancedSecurityActiveCommittersRepository) GetAdvancedSecurityCommitters() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AdvancedSecurityCommitters
}

// GetAdvancedSecurityCommittersOk returns a tuple with the AdvancedSecurityCommitters field value
// and a boolean to check if the value has been set.
func (o *AdvancedSecurityActiveCommittersRepository) GetAdvancedSecurityCommittersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AdvancedSecurityCommitters, true
}

// SetAdvancedSecurityCommitters sets field value
func (o *AdvancedSecurityActiveCommittersRepository) SetAdvancedSecurityCommitters(v int32) {
	o.AdvancedSecurityCommitters = v
}

// GetAdvancedSecurityCommittersBreakdown returns the AdvancedSecurityCommittersBreakdown field value
func (o *AdvancedSecurityActiveCommittersRepository) GetAdvancedSecurityCommittersBreakdown() []AdvancedSecurityActiveCommittersUser {
	if o == nil {
		var ret []AdvancedSecurityActiveCommittersUser
		return ret
	}

	return o.AdvancedSecurityCommittersBreakdown
}

// GetAdvancedSecurityCommittersBreakdownOk returns a tuple with the AdvancedSecurityCommittersBreakdown field value
// and a boolean to check if the value has been set.
func (o *AdvancedSecurityActiveCommittersRepository) GetAdvancedSecurityCommittersBreakdownOk() ([]AdvancedSecurityActiveCommittersUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.AdvancedSecurityCommittersBreakdown, true
}

// SetAdvancedSecurityCommittersBreakdown sets field value
func (o *AdvancedSecurityActiveCommittersRepository) SetAdvancedSecurityCommittersBreakdown(v []AdvancedSecurityActiveCommittersUser) {
	o.AdvancedSecurityCommittersBreakdown = v
}

func (o AdvancedSecurityActiveCommittersRepository) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["advanced_security_committers"] = o.AdvancedSecurityCommitters
	}
	if true {
		toSerialize["advanced_security_committers_breakdown"] = o.AdvancedSecurityCommittersBreakdown
	}
	return json.Marshal(toSerialize)
}

type NullableAdvancedSecurityActiveCommittersRepository struct {
	value *AdvancedSecurityActiveCommittersRepository
	isSet bool
}

func (v NullableAdvancedSecurityActiveCommittersRepository) Get() *AdvancedSecurityActiveCommittersRepository {
	return v.value
}

func (v *NullableAdvancedSecurityActiveCommittersRepository) Set(val *AdvancedSecurityActiveCommittersRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableAdvancedSecurityActiveCommittersRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableAdvancedSecurityActiveCommittersRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdvancedSecurityActiveCommittersRepository(val *AdvancedSecurityActiveCommittersRepository) *NullableAdvancedSecurityActiveCommittersRepository {
	return &NullableAdvancedSecurityActiveCommittersRepository{value: val, isSet: true}
}

func (v NullableAdvancedSecurityActiveCommittersRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdvancedSecurityActiveCommittersRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


