/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// UsersAddEmailForAuthenticatedUserRequestOneOf struct for UsersAddEmailForAuthenticatedUserRequestOneOf
type UsersAddEmailForAuthenticatedUserRequestOneOf struct {
	// Adds one or more email addresses to your GitHub account. Must contain at least one email address. **Note:** Alternatively, you can pass a single email address or an `array` of emails addresses directly, but we recommend that you pass an object using the `emails` key.
	Emails []string `json:"emails"`
}

// NewUsersAddEmailForAuthenticatedUserRequestOneOf instantiates a new UsersAddEmailForAuthenticatedUserRequestOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersAddEmailForAuthenticatedUserRequestOneOf(emails []string) *UsersAddEmailForAuthenticatedUserRequestOneOf {
	this := UsersAddEmailForAuthenticatedUserRequestOneOf{}
	this.Emails = emails
	return &this
}

// NewUsersAddEmailForAuthenticatedUserRequestOneOfWithDefaults instantiates a new UsersAddEmailForAuthenticatedUserRequestOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersAddEmailForAuthenticatedUserRequestOneOfWithDefaults() *UsersAddEmailForAuthenticatedUserRequestOneOf {
	this := UsersAddEmailForAuthenticatedUserRequestOneOf{}
	return &this
}

// GetEmails returns the Emails field value
func (o *UsersAddEmailForAuthenticatedUserRequestOneOf) GetEmails() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *UsersAddEmailForAuthenticatedUserRequestOneOf) GetEmailsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Emails, true
}

// SetEmails sets field value
func (o *UsersAddEmailForAuthenticatedUserRequestOneOf) SetEmails(v []string) {
	o.Emails = v
}

func (o UsersAddEmailForAuthenticatedUserRequestOneOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["emails"] = o.Emails
	}
	return json.Marshal(toSerialize)
}

type NullableUsersAddEmailForAuthenticatedUserRequestOneOf struct {
	value *UsersAddEmailForAuthenticatedUserRequestOneOf
	isSet bool
}

func (v NullableUsersAddEmailForAuthenticatedUserRequestOneOf) Get() *UsersAddEmailForAuthenticatedUserRequestOneOf {
	return v.value
}

func (v *NullableUsersAddEmailForAuthenticatedUserRequestOneOf) Set(val *UsersAddEmailForAuthenticatedUserRequestOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersAddEmailForAuthenticatedUserRequestOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersAddEmailForAuthenticatedUserRequestOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersAddEmailForAuthenticatedUserRequestOneOf(val *UsersAddEmailForAuthenticatedUserRequestOneOf) *NullableUsersAddEmailForAuthenticatedUserRequestOneOf {
	return &NullableUsersAddEmailForAuthenticatedUserRequestOneOf{value: val, isSet: true}
}

func (v NullableUsersAddEmailForAuthenticatedUserRequestOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersAddEmailForAuthenticatedUserRequestOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


