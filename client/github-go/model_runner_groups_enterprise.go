/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// RunnerGroupsEnterprise struct for RunnerGroupsEnterprise
type RunnerGroupsEnterprise struct {
	Id float32 `json:"id"`
	Name string `json:"name"`
	Visibility string `json:"visibility"`
	Default bool `json:"default"`
	SelectedOrganizationsUrl *string `json:"selected_organizations_url,omitempty"`
	RunnersUrl string `json:"runners_url"`
	AllowsPublicRepositories bool `json:"allows_public_repositories"`
	// If `true`, the `restricted_to_workflows` and `selected_workflows` fields cannot be modified.
	WorkflowRestrictionsReadOnly *bool `json:"workflow_restrictions_read_only,omitempty"`
	// If `true`, the runner group will be restricted to running only the workflows specified in the `selected_workflows` array.
	RestrictedToWorkflows *bool `json:"restricted_to_workflows,omitempty"`
	// List of workflows the runner group should be allowed to run. This setting will be ignored unless `restricted_to_workflows` is set to `true`.
	SelectedWorkflows []string `json:"selected_workflows,omitempty"`
}

// NewRunnerGroupsEnterprise instantiates a new RunnerGroupsEnterprise object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRunnerGroupsEnterprise(id float32, name string, visibility string, default_ bool, runnersUrl string, allowsPublicRepositories bool) *RunnerGroupsEnterprise {
	this := RunnerGroupsEnterprise{}
	this.Id = id
	this.Name = name
	this.Visibility = visibility
	this.Default = default_
	this.RunnersUrl = runnersUrl
	this.AllowsPublicRepositories = allowsPublicRepositories
	var workflowRestrictionsReadOnly bool = false
	this.WorkflowRestrictionsReadOnly = &workflowRestrictionsReadOnly
	var restrictedToWorkflows bool = false
	this.RestrictedToWorkflows = &restrictedToWorkflows
	return &this
}

// NewRunnerGroupsEnterpriseWithDefaults instantiates a new RunnerGroupsEnterprise object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRunnerGroupsEnterpriseWithDefaults() *RunnerGroupsEnterprise {
	this := RunnerGroupsEnterprise{}
	var workflowRestrictionsReadOnly bool = false
	this.WorkflowRestrictionsReadOnly = &workflowRestrictionsReadOnly
	var restrictedToWorkflows bool = false
	this.RestrictedToWorkflows = &restrictedToWorkflows
	return &this
}

// GetId returns the Id field value
func (o *RunnerGroupsEnterprise) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RunnerGroupsEnterprise) SetId(v float32) {
	o.Id = v
}

// GetName returns the Name field value
func (o *RunnerGroupsEnterprise) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *RunnerGroupsEnterprise) SetName(v string) {
	o.Name = v
}

// GetVisibility returns the Visibility field value
func (o *RunnerGroupsEnterprise) GetVisibility() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetVisibilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Visibility, true
}

// SetVisibility sets field value
func (o *RunnerGroupsEnterprise) SetVisibility(v string) {
	o.Visibility = v
}

// GetDefault returns the Default field value
func (o *RunnerGroupsEnterprise) GetDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Default, true
}

// SetDefault sets field value
func (o *RunnerGroupsEnterprise) SetDefault(v bool) {
	o.Default = v
}

// GetSelectedOrganizationsUrl returns the SelectedOrganizationsUrl field value if set, zero value otherwise.
func (o *RunnerGroupsEnterprise) GetSelectedOrganizationsUrl() string {
	if o == nil || o.SelectedOrganizationsUrl == nil {
		var ret string
		return ret
	}
	return *o.SelectedOrganizationsUrl
}

// GetSelectedOrganizationsUrlOk returns a tuple with the SelectedOrganizationsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetSelectedOrganizationsUrlOk() (*string, bool) {
	if o == nil || o.SelectedOrganizationsUrl == nil {
		return nil, false
	}
	return o.SelectedOrganizationsUrl, true
}

// HasSelectedOrganizationsUrl returns a boolean if a field has been set.
func (o *RunnerGroupsEnterprise) HasSelectedOrganizationsUrl() bool {
	if o != nil && o.SelectedOrganizationsUrl != nil {
		return true
	}

	return false
}

// SetSelectedOrganizationsUrl gets a reference to the given string and assigns it to the SelectedOrganizationsUrl field.
func (o *RunnerGroupsEnterprise) SetSelectedOrganizationsUrl(v string) {
	o.SelectedOrganizationsUrl = &v
}

// GetRunnersUrl returns the RunnersUrl field value
func (o *RunnerGroupsEnterprise) GetRunnersUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RunnersUrl
}

// GetRunnersUrlOk returns a tuple with the RunnersUrl field value
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetRunnersUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RunnersUrl, true
}

// SetRunnersUrl sets field value
func (o *RunnerGroupsEnterprise) SetRunnersUrl(v string) {
	o.RunnersUrl = v
}

// GetAllowsPublicRepositories returns the AllowsPublicRepositories field value
func (o *RunnerGroupsEnterprise) GetAllowsPublicRepositories() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowsPublicRepositories
}

// GetAllowsPublicRepositoriesOk returns a tuple with the AllowsPublicRepositories field value
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetAllowsPublicRepositoriesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowsPublicRepositories, true
}

// SetAllowsPublicRepositories sets field value
func (o *RunnerGroupsEnterprise) SetAllowsPublicRepositories(v bool) {
	o.AllowsPublicRepositories = v
}

// GetWorkflowRestrictionsReadOnly returns the WorkflowRestrictionsReadOnly field value if set, zero value otherwise.
func (o *RunnerGroupsEnterprise) GetWorkflowRestrictionsReadOnly() bool {
	if o == nil || o.WorkflowRestrictionsReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.WorkflowRestrictionsReadOnly
}

// GetWorkflowRestrictionsReadOnlyOk returns a tuple with the WorkflowRestrictionsReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetWorkflowRestrictionsReadOnlyOk() (*bool, bool) {
	if o == nil || o.WorkflowRestrictionsReadOnly == nil {
		return nil, false
	}
	return o.WorkflowRestrictionsReadOnly, true
}

// HasWorkflowRestrictionsReadOnly returns a boolean if a field has been set.
func (o *RunnerGroupsEnterprise) HasWorkflowRestrictionsReadOnly() bool {
	if o != nil && o.WorkflowRestrictionsReadOnly != nil {
		return true
	}

	return false
}

// SetWorkflowRestrictionsReadOnly gets a reference to the given bool and assigns it to the WorkflowRestrictionsReadOnly field.
func (o *RunnerGroupsEnterprise) SetWorkflowRestrictionsReadOnly(v bool) {
	o.WorkflowRestrictionsReadOnly = &v
}

// GetRestrictedToWorkflows returns the RestrictedToWorkflows field value if set, zero value otherwise.
func (o *RunnerGroupsEnterprise) GetRestrictedToWorkflows() bool {
	if o == nil || o.RestrictedToWorkflows == nil {
		var ret bool
		return ret
	}
	return *o.RestrictedToWorkflows
}

// GetRestrictedToWorkflowsOk returns a tuple with the RestrictedToWorkflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetRestrictedToWorkflowsOk() (*bool, bool) {
	if o == nil || o.RestrictedToWorkflows == nil {
		return nil, false
	}
	return o.RestrictedToWorkflows, true
}

// HasRestrictedToWorkflows returns a boolean if a field has been set.
func (o *RunnerGroupsEnterprise) HasRestrictedToWorkflows() bool {
	if o != nil && o.RestrictedToWorkflows != nil {
		return true
	}

	return false
}

// SetRestrictedToWorkflows gets a reference to the given bool and assigns it to the RestrictedToWorkflows field.
func (o *RunnerGroupsEnterprise) SetRestrictedToWorkflows(v bool) {
	o.RestrictedToWorkflows = &v
}

// GetSelectedWorkflows returns the SelectedWorkflows field value if set, zero value otherwise.
func (o *RunnerGroupsEnterprise) GetSelectedWorkflows() []string {
	if o == nil || o.SelectedWorkflows == nil {
		var ret []string
		return ret
	}
	return o.SelectedWorkflows
}

// GetSelectedWorkflowsOk returns a tuple with the SelectedWorkflows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RunnerGroupsEnterprise) GetSelectedWorkflowsOk() ([]string, bool) {
	if o == nil || o.SelectedWorkflows == nil {
		return nil, false
	}
	return o.SelectedWorkflows, true
}

// HasSelectedWorkflows returns a boolean if a field has been set.
func (o *RunnerGroupsEnterprise) HasSelectedWorkflows() bool {
	if o != nil && o.SelectedWorkflows != nil {
		return true
	}

	return false
}

// SetSelectedWorkflows gets a reference to the given []string and assigns it to the SelectedWorkflows field.
func (o *RunnerGroupsEnterprise) SetSelectedWorkflows(v []string) {
	o.SelectedWorkflows = v
}

func (o RunnerGroupsEnterprise) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["visibility"] = o.Visibility
	}
	if true {
		toSerialize["default"] = o.Default
	}
	if o.SelectedOrganizationsUrl != nil {
		toSerialize["selected_organizations_url"] = o.SelectedOrganizationsUrl
	}
	if true {
		toSerialize["runners_url"] = o.RunnersUrl
	}
	if true {
		toSerialize["allows_public_repositories"] = o.AllowsPublicRepositories
	}
	if o.WorkflowRestrictionsReadOnly != nil {
		toSerialize["workflow_restrictions_read_only"] = o.WorkflowRestrictionsReadOnly
	}
	if o.RestrictedToWorkflows != nil {
		toSerialize["restricted_to_workflows"] = o.RestrictedToWorkflows
	}
	if o.SelectedWorkflows != nil {
		toSerialize["selected_workflows"] = o.SelectedWorkflows
	}
	return json.Marshal(toSerialize)
}

type NullableRunnerGroupsEnterprise struct {
	value *RunnerGroupsEnterprise
	isSet bool
}

func (v NullableRunnerGroupsEnterprise) Get() *RunnerGroupsEnterprise {
	return v.value
}

func (v *NullableRunnerGroupsEnterprise) Set(val *RunnerGroupsEnterprise) {
	v.value = val
	v.isSet = true
}

func (v NullableRunnerGroupsEnterprise) IsSet() bool {
	return v.isSet
}

func (v *NullableRunnerGroupsEnterprise) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRunnerGroupsEnterprise(val *RunnerGroupsEnterprise) *NullableRunnerGroupsEnterprise {
	return &NullableRunnerGroupsEnterprise{value: val, isSet: true}
}

func (v NullableRunnerGroupsEnterprise) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRunnerGroupsEnterprise) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


