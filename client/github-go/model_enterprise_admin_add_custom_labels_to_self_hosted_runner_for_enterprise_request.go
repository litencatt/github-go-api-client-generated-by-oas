/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest struct for EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest
type EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest struct {
	// The names of the custom labels to add to the runner.
	Labels []string `json:"labels"`
}

// NewEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest instantiates a new EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest(labels []string) *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest {
	this := EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest{}
	this.Labels = labels
	return &this
}

// NewEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequestWithDefaults instantiates a new EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequestWithDefaults() *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest {
	this := EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest{}
	return &this
}

// GetLabels returns the Labels field value
func (o *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) GetLabels() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) GetLabelsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) SetLabels(v []string) {
	o.Labels = v
}

func (o EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["labels"] = o.Labels
	}
	return json.Marshal(toSerialize)
}

type NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest struct {
	value *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest
	isSet bool
}

func (v NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) Get() *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest {
	return v.value
}

func (v *NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) Set(val *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest(val *EnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) *NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest {
	return &NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest{value: val, isSet: true}
}

func (v NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseAdminAddCustomLabelsToSelfHostedRunnerForEnterpriseRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


