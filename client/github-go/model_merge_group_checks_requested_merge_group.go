/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// MergeGroupChecksRequestedMergeGroup struct for MergeGroupChecksRequestedMergeGroup
type MergeGroupChecksRequestedMergeGroup struct {
	HeadSha string `json:"head_sha"`
	HeadRef string `json:"head_ref"`
	BaseRef string `json:"base_ref"`
}

// NewMergeGroupChecksRequestedMergeGroup instantiates a new MergeGroupChecksRequestedMergeGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMergeGroupChecksRequestedMergeGroup(headSha string, headRef string, baseRef string) *MergeGroupChecksRequestedMergeGroup {
	this := MergeGroupChecksRequestedMergeGroup{}
	this.HeadSha = headSha
	this.HeadRef = headRef
	this.BaseRef = baseRef
	return &this
}

// NewMergeGroupChecksRequestedMergeGroupWithDefaults instantiates a new MergeGroupChecksRequestedMergeGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMergeGroupChecksRequestedMergeGroupWithDefaults() *MergeGroupChecksRequestedMergeGroup {
	this := MergeGroupChecksRequestedMergeGroup{}
	return &this
}

// GetHeadSha returns the HeadSha field value
func (o *MergeGroupChecksRequestedMergeGroup) GetHeadSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HeadSha
}

// GetHeadShaOk returns a tuple with the HeadSha field value
// and a boolean to check if the value has been set.
func (o *MergeGroupChecksRequestedMergeGroup) GetHeadShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeadSha, true
}

// SetHeadSha sets field value
func (o *MergeGroupChecksRequestedMergeGroup) SetHeadSha(v string) {
	o.HeadSha = v
}

// GetHeadRef returns the HeadRef field value
func (o *MergeGroupChecksRequestedMergeGroup) GetHeadRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HeadRef
}

// GetHeadRefOk returns a tuple with the HeadRef field value
// and a boolean to check if the value has been set.
func (o *MergeGroupChecksRequestedMergeGroup) GetHeadRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeadRef, true
}

// SetHeadRef sets field value
func (o *MergeGroupChecksRequestedMergeGroup) SetHeadRef(v string) {
	o.HeadRef = v
}

// GetBaseRef returns the BaseRef field value
func (o *MergeGroupChecksRequestedMergeGroup) GetBaseRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseRef
}

// GetBaseRefOk returns a tuple with the BaseRef field value
// and a boolean to check if the value has been set.
func (o *MergeGroupChecksRequestedMergeGroup) GetBaseRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseRef, true
}

// SetBaseRef sets field value
func (o *MergeGroupChecksRequestedMergeGroup) SetBaseRef(v string) {
	o.BaseRef = v
}

func (o MergeGroupChecksRequestedMergeGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["head_sha"] = o.HeadSha
	}
	if true {
		toSerialize["head_ref"] = o.HeadRef
	}
	if true {
		toSerialize["base_ref"] = o.BaseRef
	}
	return json.Marshal(toSerialize)
}

type NullableMergeGroupChecksRequestedMergeGroup struct {
	value *MergeGroupChecksRequestedMergeGroup
	isSet bool
}

func (v NullableMergeGroupChecksRequestedMergeGroup) Get() *MergeGroupChecksRequestedMergeGroup {
	return v.value
}

func (v *NullableMergeGroupChecksRequestedMergeGroup) Set(val *MergeGroupChecksRequestedMergeGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableMergeGroupChecksRequestedMergeGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableMergeGroupChecksRequestedMergeGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMergeGroupChecksRequestedMergeGroup(val *MergeGroupChecksRequestedMergeGroup) *NullableMergeGroupChecksRequestedMergeGroup {
	return &NullableMergeGroupChecksRequestedMergeGroup{value: val, isSet: true}
}

func (v NullableMergeGroupChecksRequestedMergeGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMergeGroupChecksRequestedMergeGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


