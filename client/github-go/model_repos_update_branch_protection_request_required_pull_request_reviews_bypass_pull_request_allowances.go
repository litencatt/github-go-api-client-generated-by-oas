/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances Allow specific users, teams, or apps to bypass pull request requirements.
type ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances struct {
	// The list of user `login`s allowed to bypass pull request requirements.
	Users []string `json:"users,omitempty"`
	// The list of team `slug`s allowed to bypass pull request requirements.
	Teams []string `json:"teams,omitempty"`
	// The list of app `slug`s allowed to bypass pull request requirements.
	Apps []string `json:"apps,omitempty"`
}

// NewReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances instantiates a new ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances() *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
	this := ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances{}
	return &this
}

// NewReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowancesWithDefaults instantiates a new ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowancesWithDefaults() *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
	this := ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances{}
	return &this
}

// GetUsers returns the Users field value if set, zero value otherwise.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) GetUsers() []string {
	if o == nil || o.Users == nil {
		var ret []string
		return ret
	}
	return o.Users
}

// GetUsersOk returns a tuple with the Users field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) GetUsersOk() ([]string, bool) {
	if o == nil || o.Users == nil {
		return nil, false
	}
	return o.Users, true
}

// HasUsers returns a boolean if a field has been set.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) HasUsers() bool {
	if o != nil && o.Users != nil {
		return true
	}

	return false
}

// SetUsers gets a reference to the given []string and assigns it to the Users field.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) SetUsers(v []string) {
	o.Users = v
}

// GetTeams returns the Teams field value if set, zero value otherwise.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) GetTeams() []string {
	if o == nil || o.Teams == nil {
		var ret []string
		return ret
	}
	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) GetTeamsOk() ([]string, bool) {
	if o == nil || o.Teams == nil {
		return nil, false
	}
	return o.Teams, true
}

// HasTeams returns a boolean if a field has been set.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) HasTeams() bool {
	if o != nil && o.Teams != nil {
		return true
	}

	return false
}

// SetTeams gets a reference to the given []string and assigns it to the Teams field.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) SetTeams(v []string) {
	o.Teams = v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) GetApps() []string {
	if o == nil || o.Apps == nil {
		var ret []string
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) GetAppsOk() ([]string, bool) {
	if o == nil || o.Apps == nil {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []string and assigns it to the Apps field.
func (o *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) SetApps(v []string) {
	o.Apps = v
}

func (o ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Users != nil {
		toSerialize["users"] = o.Users
	}
	if o.Teams != nil {
		toSerialize["teams"] = o.Teams
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	return json.Marshal(toSerialize)
}

type NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances struct {
	value *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances
	isSet bool
}

func (v NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) Get() *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
	return v.value
}

func (v *NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) Set(val *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) {
	v.value = val
	v.isSet = true
}

func (v NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) IsSet() bool {
	return v.isSet
}

func (v *NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances(val *ReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) *NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances {
	return &NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances{value: val, isSet: true}
}

func (v NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposUpdateBranchProtectionRequestRequiredPullRequestReviewsBypassPullRequestAllowances) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


