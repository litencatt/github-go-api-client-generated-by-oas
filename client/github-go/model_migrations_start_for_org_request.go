/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// MigrationsStartForOrgRequest struct for MigrationsStartForOrgRequest
type MigrationsStartForOrgRequest struct {
	// A list of arrays indicating which repositories should be migrated.
	Repositories []string `json:"repositories"`
	// Indicates whether repositories should be locked (to prevent manipulation) while migrating data.
	LockRepositories *bool `json:"lock_repositories,omitempty"`
	// Indicates whether metadata should be excluded and only git source should be included for the migration.
	ExcludeMetadata *bool `json:"exclude_metadata,omitempty"`
	// Indicates whether the repository git data should be excluded from the migration.
	ExcludeGitData *bool `json:"exclude_git_data,omitempty"`
	// Indicates whether attachments should be excluded from the migration (to reduce migration archive file size).
	ExcludeAttachments *bool `json:"exclude_attachments,omitempty"`
	// Indicates whether releases should be excluded from the migration (to reduce migration archive file size).
	ExcludeReleases *bool `json:"exclude_releases,omitempty"`
	// Indicates whether projects owned by the organization or users should be excluded. from the migration.
	ExcludeOwnerProjects *bool `json:"exclude_owner_projects,omitempty"`
	// Indicates whether this should only include organization metadata (repositories array should be empty and will ignore other flags).
	OrgMetadataOnly *bool `json:"org_metadata_only,omitempty"`
	// Exclude related items from being returned in the response in order to improve performance of the request. The array can include any of: `\"repositories\"`.
	Exclude []string `json:"exclude,omitempty"`
}

// NewMigrationsStartForOrgRequest instantiates a new MigrationsStartForOrgRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMigrationsStartForOrgRequest(repositories []string) *MigrationsStartForOrgRequest {
	this := MigrationsStartForOrgRequest{}
	this.Repositories = repositories
	var lockRepositories bool = false
	this.LockRepositories = &lockRepositories
	var excludeMetadata bool = false
	this.ExcludeMetadata = &excludeMetadata
	var excludeGitData bool = false
	this.ExcludeGitData = &excludeGitData
	var excludeAttachments bool = false
	this.ExcludeAttachments = &excludeAttachments
	var excludeReleases bool = false
	this.ExcludeReleases = &excludeReleases
	var excludeOwnerProjects bool = false
	this.ExcludeOwnerProjects = &excludeOwnerProjects
	var orgMetadataOnly bool = false
	this.OrgMetadataOnly = &orgMetadataOnly
	return &this
}

// NewMigrationsStartForOrgRequestWithDefaults instantiates a new MigrationsStartForOrgRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMigrationsStartForOrgRequestWithDefaults() *MigrationsStartForOrgRequest {
	this := MigrationsStartForOrgRequest{}
	var lockRepositories bool = false
	this.LockRepositories = &lockRepositories
	var excludeMetadata bool = false
	this.ExcludeMetadata = &excludeMetadata
	var excludeGitData bool = false
	this.ExcludeGitData = &excludeGitData
	var excludeAttachments bool = false
	this.ExcludeAttachments = &excludeAttachments
	var excludeReleases bool = false
	this.ExcludeReleases = &excludeReleases
	var excludeOwnerProjects bool = false
	this.ExcludeOwnerProjects = &excludeOwnerProjects
	var orgMetadataOnly bool = false
	this.OrgMetadataOnly = &orgMetadataOnly
	return &this
}

// GetRepositories returns the Repositories field value
func (o *MigrationsStartForOrgRequest) GetRepositories() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Repositories
}

// GetRepositoriesOk returns a tuple with the Repositories field value
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetRepositoriesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Repositories, true
}

// SetRepositories sets field value
func (o *MigrationsStartForOrgRequest) SetRepositories(v []string) {
	o.Repositories = v
}

// GetLockRepositories returns the LockRepositories field value if set, zero value otherwise.
func (o *MigrationsStartForOrgRequest) GetLockRepositories() bool {
	if o == nil || o.LockRepositories == nil {
		var ret bool
		return ret
	}
	return *o.LockRepositories
}

// GetLockRepositoriesOk returns a tuple with the LockRepositories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetLockRepositoriesOk() (*bool, bool) {
	if o == nil || o.LockRepositories == nil {
		return nil, false
	}
	return o.LockRepositories, true
}

// HasLockRepositories returns a boolean if a field has been set.
func (o *MigrationsStartForOrgRequest) HasLockRepositories() bool {
	if o != nil && o.LockRepositories != nil {
		return true
	}

	return false
}

// SetLockRepositories gets a reference to the given bool and assigns it to the LockRepositories field.
func (o *MigrationsStartForOrgRequest) SetLockRepositories(v bool) {
	o.LockRepositories = &v
}

// GetExcludeMetadata returns the ExcludeMetadata field value if set, zero value otherwise.
func (o *MigrationsStartForOrgRequest) GetExcludeMetadata() bool {
	if o == nil || o.ExcludeMetadata == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeMetadata
}

// GetExcludeMetadataOk returns a tuple with the ExcludeMetadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetExcludeMetadataOk() (*bool, bool) {
	if o == nil || o.ExcludeMetadata == nil {
		return nil, false
	}
	return o.ExcludeMetadata, true
}

// HasExcludeMetadata returns a boolean if a field has been set.
func (o *MigrationsStartForOrgRequest) HasExcludeMetadata() bool {
	if o != nil && o.ExcludeMetadata != nil {
		return true
	}

	return false
}

// SetExcludeMetadata gets a reference to the given bool and assigns it to the ExcludeMetadata field.
func (o *MigrationsStartForOrgRequest) SetExcludeMetadata(v bool) {
	o.ExcludeMetadata = &v
}

// GetExcludeGitData returns the ExcludeGitData field value if set, zero value otherwise.
func (o *MigrationsStartForOrgRequest) GetExcludeGitData() bool {
	if o == nil || o.ExcludeGitData == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeGitData
}

// GetExcludeGitDataOk returns a tuple with the ExcludeGitData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetExcludeGitDataOk() (*bool, bool) {
	if o == nil || o.ExcludeGitData == nil {
		return nil, false
	}
	return o.ExcludeGitData, true
}

// HasExcludeGitData returns a boolean if a field has been set.
func (o *MigrationsStartForOrgRequest) HasExcludeGitData() bool {
	if o != nil && o.ExcludeGitData != nil {
		return true
	}

	return false
}

// SetExcludeGitData gets a reference to the given bool and assigns it to the ExcludeGitData field.
func (o *MigrationsStartForOrgRequest) SetExcludeGitData(v bool) {
	o.ExcludeGitData = &v
}

// GetExcludeAttachments returns the ExcludeAttachments field value if set, zero value otherwise.
func (o *MigrationsStartForOrgRequest) GetExcludeAttachments() bool {
	if o == nil || o.ExcludeAttachments == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeAttachments
}

// GetExcludeAttachmentsOk returns a tuple with the ExcludeAttachments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetExcludeAttachmentsOk() (*bool, bool) {
	if o == nil || o.ExcludeAttachments == nil {
		return nil, false
	}
	return o.ExcludeAttachments, true
}

// HasExcludeAttachments returns a boolean if a field has been set.
func (o *MigrationsStartForOrgRequest) HasExcludeAttachments() bool {
	if o != nil && o.ExcludeAttachments != nil {
		return true
	}

	return false
}

// SetExcludeAttachments gets a reference to the given bool and assigns it to the ExcludeAttachments field.
func (o *MigrationsStartForOrgRequest) SetExcludeAttachments(v bool) {
	o.ExcludeAttachments = &v
}

// GetExcludeReleases returns the ExcludeReleases field value if set, zero value otherwise.
func (o *MigrationsStartForOrgRequest) GetExcludeReleases() bool {
	if o == nil || o.ExcludeReleases == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeReleases
}

// GetExcludeReleasesOk returns a tuple with the ExcludeReleases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetExcludeReleasesOk() (*bool, bool) {
	if o == nil || o.ExcludeReleases == nil {
		return nil, false
	}
	return o.ExcludeReleases, true
}

// HasExcludeReleases returns a boolean if a field has been set.
func (o *MigrationsStartForOrgRequest) HasExcludeReleases() bool {
	if o != nil && o.ExcludeReleases != nil {
		return true
	}

	return false
}

// SetExcludeReleases gets a reference to the given bool and assigns it to the ExcludeReleases field.
func (o *MigrationsStartForOrgRequest) SetExcludeReleases(v bool) {
	o.ExcludeReleases = &v
}

// GetExcludeOwnerProjects returns the ExcludeOwnerProjects field value if set, zero value otherwise.
func (o *MigrationsStartForOrgRequest) GetExcludeOwnerProjects() bool {
	if o == nil || o.ExcludeOwnerProjects == nil {
		var ret bool
		return ret
	}
	return *o.ExcludeOwnerProjects
}

// GetExcludeOwnerProjectsOk returns a tuple with the ExcludeOwnerProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetExcludeOwnerProjectsOk() (*bool, bool) {
	if o == nil || o.ExcludeOwnerProjects == nil {
		return nil, false
	}
	return o.ExcludeOwnerProjects, true
}

// HasExcludeOwnerProjects returns a boolean if a field has been set.
func (o *MigrationsStartForOrgRequest) HasExcludeOwnerProjects() bool {
	if o != nil && o.ExcludeOwnerProjects != nil {
		return true
	}

	return false
}

// SetExcludeOwnerProjects gets a reference to the given bool and assigns it to the ExcludeOwnerProjects field.
func (o *MigrationsStartForOrgRequest) SetExcludeOwnerProjects(v bool) {
	o.ExcludeOwnerProjects = &v
}

// GetOrgMetadataOnly returns the OrgMetadataOnly field value if set, zero value otherwise.
func (o *MigrationsStartForOrgRequest) GetOrgMetadataOnly() bool {
	if o == nil || o.OrgMetadataOnly == nil {
		var ret bool
		return ret
	}
	return *o.OrgMetadataOnly
}

// GetOrgMetadataOnlyOk returns a tuple with the OrgMetadataOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetOrgMetadataOnlyOk() (*bool, bool) {
	if o == nil || o.OrgMetadataOnly == nil {
		return nil, false
	}
	return o.OrgMetadataOnly, true
}

// HasOrgMetadataOnly returns a boolean if a field has been set.
func (o *MigrationsStartForOrgRequest) HasOrgMetadataOnly() bool {
	if o != nil && o.OrgMetadataOnly != nil {
		return true
	}

	return false
}

// SetOrgMetadataOnly gets a reference to the given bool and assigns it to the OrgMetadataOnly field.
func (o *MigrationsStartForOrgRequest) SetOrgMetadataOnly(v bool) {
	o.OrgMetadataOnly = &v
}

// GetExclude returns the Exclude field value if set, zero value otherwise.
func (o *MigrationsStartForOrgRequest) GetExclude() []string {
	if o == nil || o.Exclude == nil {
		var ret []string
		return ret
	}
	return o.Exclude
}

// GetExcludeOk returns a tuple with the Exclude field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MigrationsStartForOrgRequest) GetExcludeOk() ([]string, bool) {
	if o == nil || o.Exclude == nil {
		return nil, false
	}
	return o.Exclude, true
}

// HasExclude returns a boolean if a field has been set.
func (o *MigrationsStartForOrgRequest) HasExclude() bool {
	if o != nil && o.Exclude != nil {
		return true
	}

	return false
}

// SetExclude gets a reference to the given []string and assigns it to the Exclude field.
func (o *MigrationsStartForOrgRequest) SetExclude(v []string) {
	o.Exclude = v
}

func (o MigrationsStartForOrgRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["repositories"] = o.Repositories
	}
	if o.LockRepositories != nil {
		toSerialize["lock_repositories"] = o.LockRepositories
	}
	if o.ExcludeMetadata != nil {
		toSerialize["exclude_metadata"] = o.ExcludeMetadata
	}
	if o.ExcludeGitData != nil {
		toSerialize["exclude_git_data"] = o.ExcludeGitData
	}
	if o.ExcludeAttachments != nil {
		toSerialize["exclude_attachments"] = o.ExcludeAttachments
	}
	if o.ExcludeReleases != nil {
		toSerialize["exclude_releases"] = o.ExcludeReleases
	}
	if o.ExcludeOwnerProjects != nil {
		toSerialize["exclude_owner_projects"] = o.ExcludeOwnerProjects
	}
	if o.OrgMetadataOnly != nil {
		toSerialize["org_metadata_only"] = o.OrgMetadataOnly
	}
	if o.Exclude != nil {
		toSerialize["exclude"] = o.Exclude
	}
	return json.Marshal(toSerialize)
}

type NullableMigrationsStartForOrgRequest struct {
	value *MigrationsStartForOrgRequest
	isSet bool
}

func (v NullableMigrationsStartForOrgRequest) Get() *MigrationsStartForOrgRequest {
	return v.value
}

func (v *NullableMigrationsStartForOrgRequest) Set(val *MigrationsStartForOrgRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMigrationsStartForOrgRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMigrationsStartForOrgRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMigrationsStartForOrgRequest(val *MigrationsStartForOrgRequest) *NullableMigrationsStartForOrgRequest {
	return &NullableMigrationsStartForOrgRequest{value: val, isSet: true}
}

func (v NullableMigrationsStartForOrgRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMigrationsStartForOrgRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


