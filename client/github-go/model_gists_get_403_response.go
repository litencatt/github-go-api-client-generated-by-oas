/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GistsGet403Response struct for GistsGet403Response
type GistsGet403Response struct {
	Block *GistsGet403ResponseBlock `json:"block,omitempty"`
	Message *string `json:"message,omitempty"`
	DocumentationUrl *string `json:"documentation_url,omitempty"`
}

// NewGistsGet403Response instantiates a new GistsGet403Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGistsGet403Response() *GistsGet403Response {
	this := GistsGet403Response{}
	return &this
}

// NewGistsGet403ResponseWithDefaults instantiates a new GistsGet403Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGistsGet403ResponseWithDefaults() *GistsGet403Response {
	this := GistsGet403Response{}
	return &this
}

// GetBlock returns the Block field value if set, zero value otherwise.
func (o *GistsGet403Response) GetBlock() GistsGet403ResponseBlock {
	if o == nil || o.Block == nil {
		var ret GistsGet403ResponseBlock
		return ret
	}
	return *o.Block
}

// GetBlockOk returns a tuple with the Block field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GistsGet403Response) GetBlockOk() (*GistsGet403ResponseBlock, bool) {
	if o == nil || o.Block == nil {
		return nil, false
	}
	return o.Block, true
}

// HasBlock returns a boolean if a field has been set.
func (o *GistsGet403Response) HasBlock() bool {
	if o != nil && o.Block != nil {
		return true
	}

	return false
}

// SetBlock gets a reference to the given GistsGet403ResponseBlock and assigns it to the Block field.
func (o *GistsGet403Response) SetBlock(v GistsGet403ResponseBlock) {
	o.Block = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GistsGet403Response) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GistsGet403Response) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GistsGet403Response) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GistsGet403Response) SetMessage(v string) {
	o.Message = &v
}

// GetDocumentationUrl returns the DocumentationUrl field value if set, zero value otherwise.
func (o *GistsGet403Response) GetDocumentationUrl() string {
	if o == nil || o.DocumentationUrl == nil {
		var ret string
		return ret
	}
	return *o.DocumentationUrl
}

// GetDocumentationUrlOk returns a tuple with the DocumentationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GistsGet403Response) GetDocumentationUrlOk() (*string, bool) {
	if o == nil || o.DocumentationUrl == nil {
		return nil, false
	}
	return o.DocumentationUrl, true
}

// HasDocumentationUrl returns a boolean if a field has been set.
func (o *GistsGet403Response) HasDocumentationUrl() bool {
	if o != nil && o.DocumentationUrl != nil {
		return true
	}

	return false
}

// SetDocumentationUrl gets a reference to the given string and assigns it to the DocumentationUrl field.
func (o *GistsGet403Response) SetDocumentationUrl(v string) {
	o.DocumentationUrl = &v
}

func (o GistsGet403Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Block != nil {
		toSerialize["block"] = o.Block
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.DocumentationUrl != nil {
		toSerialize["documentation_url"] = o.DocumentationUrl
	}
	return json.Marshal(toSerialize)
}

type NullableGistsGet403Response struct {
	value *GistsGet403Response
	isSet bool
}

func (v NullableGistsGet403Response) Get() *GistsGet403Response {
	return v.value
}

func (v *NullableGistsGet403Response) Set(val *GistsGet403Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGistsGet403Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGistsGet403Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGistsGet403Response(val *GistsGet403Response) *NullableGistsGet403Response {
	return &NullableGistsGet403Response{value: val, isSet: true}
}

func (v NullableGistsGet403Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGistsGet403Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


