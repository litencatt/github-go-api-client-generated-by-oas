/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// DependabotPublicKey The public key used for setting Dependabot Secrets.
type DependabotPublicKey struct {
	// The identifier for the key.
	KeyId string `json:"key_id"`
	// The Base64 encoded public key.
	Key string `json:"key"`
}

// NewDependabotPublicKey instantiates a new DependabotPublicKey object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDependabotPublicKey(keyId string, key string) *DependabotPublicKey {
	this := DependabotPublicKey{}
	this.KeyId = keyId
	this.Key = key
	return &this
}

// NewDependabotPublicKeyWithDefaults instantiates a new DependabotPublicKey object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDependabotPublicKeyWithDefaults() *DependabotPublicKey {
	this := DependabotPublicKey{}
	return &this
}

// GetKeyId returns the KeyId field value
func (o *DependabotPublicKey) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *DependabotPublicKey) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *DependabotPublicKey) SetKeyId(v string) {
	o.KeyId = v
}

// GetKey returns the Key field value
func (o *DependabotPublicKey) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *DependabotPublicKey) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *DependabotPublicKey) SetKey(v string) {
	o.Key = v
}

func (o DependabotPublicKey) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key_id"] = o.KeyId
	}
	if true {
		toSerialize["key"] = o.Key
	}
	return json.Marshal(toSerialize)
}

type NullableDependabotPublicKey struct {
	value *DependabotPublicKey
	isSet bool
}

func (v NullableDependabotPublicKey) Get() *DependabotPublicKey {
	return v.value
}

func (v *NullableDependabotPublicKey) Set(val *DependabotPublicKey) {
	v.value = val
	v.isSet = true
}

func (v NullableDependabotPublicKey) IsSet() bool {
	return v.isSet
}

func (v *NullableDependabotPublicKey) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDependabotPublicKey(val *DependabotPublicKey) *NullableDependabotPublicKey {
	return &NullableDependabotPublicKey{value: val, isSet: true}
}

func (v NullableDependabotPublicKey) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDependabotPublicKey) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


