/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// IssueEventMilestone Issue Event Milestone
type IssueEventMilestone struct {
	Title string `json:"title"`
}

// NewIssueEventMilestone instantiates a new IssueEventMilestone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueEventMilestone(title string) *IssueEventMilestone {
	this := IssueEventMilestone{}
	this.Title = title
	return &this
}

// NewIssueEventMilestoneWithDefaults instantiates a new IssueEventMilestone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueEventMilestoneWithDefaults() *IssueEventMilestone {
	this := IssueEventMilestone{}
	return &this
}

// GetTitle returns the Title field value
func (o *IssueEventMilestone) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *IssueEventMilestone) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *IssueEventMilestone) SetTitle(v string) {
	o.Title = v
}

func (o IssueEventMilestone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["title"] = o.Title
	}
	return json.Marshal(toSerialize)
}

type NullableIssueEventMilestone struct {
	value *IssueEventMilestone
	isSet bool
}

func (v NullableIssueEventMilestone) Get() *IssueEventMilestone {
	return v.value
}

func (v *NullableIssueEventMilestone) Set(val *IssueEventMilestone) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueEventMilestone) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueEventMilestone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueEventMilestone(val *IssueEventMilestone) *NullableIssueEventMilestone {
	return &NullableIssueEventMilestone{value: val, isSet: true}
}

func (v NullableIssueEventMilestone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueEventMilestone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


