/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"fmt"
)

// GistsCreateRequestPublicOneOf the model 'GistsCreateRequestPublicOneOf'
type GistsCreateRequestPublicOneOf string

// List of gists_create_request_public_oneOf
const (
	TRUE GistsCreateRequestPublicOneOf = "true"
	FALSE GistsCreateRequestPublicOneOf = "false"
)

// All allowed values of GistsCreateRequestPublicOneOf enum
var AllowedGistsCreateRequestPublicOneOfEnumValues = []GistsCreateRequestPublicOneOf{
	"true",
	"false",
}

func (v *GistsCreateRequestPublicOneOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GistsCreateRequestPublicOneOf(value)
	for _, existing := range AllowedGistsCreateRequestPublicOneOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GistsCreateRequestPublicOneOf", value)
}

// NewGistsCreateRequestPublicOneOfFromValue returns a pointer to a valid GistsCreateRequestPublicOneOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGistsCreateRequestPublicOneOfFromValue(v string) (*GistsCreateRequestPublicOneOf, error) {
	ev := GistsCreateRequestPublicOneOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GistsCreateRequestPublicOneOf: valid values are %v", v, AllowedGistsCreateRequestPublicOneOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GistsCreateRequestPublicOneOf) IsValid() bool {
	for _, existing := range AllowedGistsCreateRequestPublicOneOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to gists_create_request_public_oneOf value
func (v GistsCreateRequestPublicOneOf) Ptr() *GistsCreateRequestPublicOneOf {
	return &v
}

type NullableGistsCreateRequestPublicOneOf struct {
	value *GistsCreateRequestPublicOneOf
	isSet bool
}

func (v NullableGistsCreateRequestPublicOneOf) Get() *GistsCreateRequestPublicOneOf {
	return v.value
}

func (v *NullableGistsCreateRequestPublicOneOf) Set(val *GistsCreateRequestPublicOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGistsCreateRequestPublicOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGistsCreateRequestPublicOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGistsCreateRequestPublicOneOf(val *GistsCreateRequestPublicOneOf) *NullableGistsCreateRequestPublicOneOf {
	return &NullableGistsCreateRequestPublicOneOf{value: val, isSet: true}
}

func (v NullableGistsCreateRequestPublicOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGistsCreateRequestPublicOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

