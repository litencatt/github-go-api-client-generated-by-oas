/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PullRequestReviewRequest Pull Request Review Request
type PullRequestReviewRequest struct {
	Users []SimpleUser `json:"users"`
	Teams []Team `json:"teams"`
}

// NewPullRequestReviewRequest instantiates a new PullRequestReviewRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestReviewRequest(users []SimpleUser, teams []Team) *PullRequestReviewRequest {
	this := PullRequestReviewRequest{}
	this.Users = users
	this.Teams = teams
	return &this
}

// NewPullRequestReviewRequestWithDefaults instantiates a new PullRequestReviewRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestReviewRequestWithDefaults() *PullRequestReviewRequest {
	this := PullRequestReviewRequest{}
	return &this
}

// GetUsers returns the Users field value
func (o *PullRequestReviewRequest) GetUsers() []SimpleUser {
	if o == nil {
		var ret []SimpleUser
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *PullRequestReviewRequest) GetUsersOk() ([]SimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *PullRequestReviewRequest) SetUsers(v []SimpleUser) {
	o.Users = v
}

// GetTeams returns the Teams field value
func (o *PullRequestReviewRequest) GetTeams() []Team {
	if o == nil {
		var ret []Team
		return ret
	}

	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value
// and a boolean to check if the value has been set.
func (o *PullRequestReviewRequest) GetTeamsOk() ([]Team, bool) {
	if o == nil {
		return nil, false
	}
	return o.Teams, true
}

// SetTeams sets field value
func (o *PullRequestReviewRequest) SetTeams(v []Team) {
	o.Teams = v
}

func (o PullRequestReviewRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["users"] = o.Users
	}
	if true {
		toSerialize["teams"] = o.Teams
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestReviewRequest struct {
	value *PullRequestReviewRequest
	isSet bool
}

func (v NullablePullRequestReviewRequest) Get() *PullRequestReviewRequest {
	return v.value
}

func (v *NullablePullRequestReviewRequest) Set(val *PullRequestReviewRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestReviewRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestReviewRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestReviewRequest(val *PullRequestReviewRequest) *NullablePullRequestReviewRequest {
	return &NullablePullRequestReviewRequest{value: val, isSet: true}
}

func (v NullablePullRequestReviewRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestReviewRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


