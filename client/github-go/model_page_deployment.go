/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PageDeployment The GitHub Pages deployment status.
type PageDeployment struct {
	// The URI to monitor GitHub Pages deployment status.
	StatusUrl string `json:"status_url"`
	// The URI to the deployed GitHub Pages.
	PageUrl string `json:"page_url"`
	// The URI to the deployed GitHub Pages preview.
	PreviewUrl *string `json:"preview_url,omitempty"`
}

// NewPageDeployment instantiates a new PageDeployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageDeployment(statusUrl string, pageUrl string) *PageDeployment {
	this := PageDeployment{}
	this.StatusUrl = statusUrl
	this.PageUrl = pageUrl
	return &this
}

// NewPageDeploymentWithDefaults instantiates a new PageDeployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageDeploymentWithDefaults() *PageDeployment {
	this := PageDeployment{}
	return &this
}

// GetStatusUrl returns the StatusUrl field value
func (o *PageDeployment) GetStatusUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusUrl
}

// GetStatusUrlOk returns a tuple with the StatusUrl field value
// and a boolean to check if the value has been set.
func (o *PageDeployment) GetStatusUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusUrl, true
}

// SetStatusUrl sets field value
func (o *PageDeployment) SetStatusUrl(v string) {
	o.StatusUrl = v
}

// GetPageUrl returns the PageUrl field value
func (o *PageDeployment) GetPageUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PageUrl
}

// GetPageUrlOk returns a tuple with the PageUrl field value
// and a boolean to check if the value has been set.
func (o *PageDeployment) GetPageUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PageUrl, true
}

// SetPageUrl sets field value
func (o *PageDeployment) SetPageUrl(v string) {
	o.PageUrl = v
}

// GetPreviewUrl returns the PreviewUrl field value if set, zero value otherwise.
func (o *PageDeployment) GetPreviewUrl() string {
	if o == nil || o.PreviewUrl == nil {
		var ret string
		return ret
	}
	return *o.PreviewUrl
}

// GetPreviewUrlOk returns a tuple with the PreviewUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageDeployment) GetPreviewUrlOk() (*string, bool) {
	if o == nil || o.PreviewUrl == nil {
		return nil, false
	}
	return o.PreviewUrl, true
}

// HasPreviewUrl returns a boolean if a field has been set.
func (o *PageDeployment) HasPreviewUrl() bool {
	if o != nil && o.PreviewUrl != nil {
		return true
	}

	return false
}

// SetPreviewUrl gets a reference to the given string and assigns it to the PreviewUrl field.
func (o *PageDeployment) SetPreviewUrl(v string) {
	o.PreviewUrl = &v
}

func (o PageDeployment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["status_url"] = o.StatusUrl
	}
	if true {
		toSerialize["page_url"] = o.PageUrl
	}
	if o.PreviewUrl != nil {
		toSerialize["preview_url"] = o.PreviewUrl
	}
	return json.Marshal(toSerialize)
}

type NullablePageDeployment struct {
	value *PageDeployment
	isSet bool
}

func (v NullablePageDeployment) Get() *PageDeployment {
	return v.value
}

func (v *NullablePageDeployment) Set(val *PageDeployment) {
	v.value = val
	v.isSet = true
}

func (v NullablePageDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullablePageDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageDeployment(val *PageDeployment) *NullablePageDeployment {
	return &NullablePageDeployment{value: val, isSet: true}
}

func (v NullablePageDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


