/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// MarketplacePurchaseMarketplacePendingChange struct for MarketplacePurchaseMarketplacePendingChange
type MarketplacePurchaseMarketplacePendingChange struct {
	IsInstalled *bool `json:"is_installed,omitempty"`
	EffectiveDate *string `json:"effective_date,omitempty"`
	UnitCount NullableInt32 `json:"unit_count,omitempty"`
	Id *int32 `json:"id,omitempty"`
	Plan *MarketplaceListingPlan `json:"plan,omitempty"`
}

// NewMarketplacePurchaseMarketplacePendingChange instantiates a new MarketplacePurchaseMarketplacePendingChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplacePurchaseMarketplacePendingChange() *MarketplacePurchaseMarketplacePendingChange {
	this := MarketplacePurchaseMarketplacePendingChange{}
	return &this
}

// NewMarketplacePurchaseMarketplacePendingChangeWithDefaults instantiates a new MarketplacePurchaseMarketplacePendingChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplacePurchaseMarketplacePendingChangeWithDefaults() *MarketplacePurchaseMarketplacePendingChange {
	this := MarketplacePurchaseMarketplacePendingChange{}
	return &this
}

// GetIsInstalled returns the IsInstalled field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePendingChange) GetIsInstalled() bool {
	if o == nil || o.IsInstalled == nil {
		var ret bool
		return ret
	}
	return *o.IsInstalled
}

// GetIsInstalledOk returns a tuple with the IsInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) GetIsInstalledOk() (*bool, bool) {
	if o == nil || o.IsInstalled == nil {
		return nil, false
	}
	return o.IsInstalled, true
}

// HasIsInstalled returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) HasIsInstalled() bool {
	if o != nil && o.IsInstalled != nil {
		return true
	}

	return false
}

// SetIsInstalled gets a reference to the given bool and assigns it to the IsInstalled field.
func (o *MarketplacePurchaseMarketplacePendingChange) SetIsInstalled(v bool) {
	o.IsInstalled = &v
}

// GetEffectiveDate returns the EffectiveDate field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePendingChange) GetEffectiveDate() string {
	if o == nil || o.EffectiveDate == nil {
		var ret string
		return ret
	}
	return *o.EffectiveDate
}

// GetEffectiveDateOk returns a tuple with the EffectiveDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) GetEffectiveDateOk() (*string, bool) {
	if o == nil || o.EffectiveDate == nil {
		return nil, false
	}
	return o.EffectiveDate, true
}

// HasEffectiveDate returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) HasEffectiveDate() bool {
	if o != nil && o.EffectiveDate != nil {
		return true
	}

	return false
}

// SetEffectiveDate gets a reference to the given string and assigns it to the EffectiveDate field.
func (o *MarketplacePurchaseMarketplacePendingChange) SetEffectiveDate(v string) {
	o.EffectiveDate = &v
}

// GetUnitCount returns the UnitCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketplacePurchaseMarketplacePendingChange) GetUnitCount() int32 {
	if o == nil || o.UnitCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.UnitCount.Get()
}

// GetUnitCountOk returns a tuple with the UnitCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketplacePurchaseMarketplacePendingChange) GetUnitCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitCount.Get(), o.UnitCount.IsSet()
}

// HasUnitCount returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) HasUnitCount() bool {
	if o != nil && o.UnitCount.IsSet() {
		return true
	}

	return false
}

// SetUnitCount gets a reference to the given NullableInt32 and assigns it to the UnitCount field.
func (o *MarketplacePurchaseMarketplacePendingChange) SetUnitCount(v int32) {
	o.UnitCount.Set(&v)
}
// SetUnitCountNil sets the value for UnitCount to be an explicit nil
func (o *MarketplacePurchaseMarketplacePendingChange) SetUnitCountNil() {
	o.UnitCount.Set(nil)
}

// UnsetUnitCount ensures that no value is present for UnitCount, not even an explicit nil
func (o *MarketplacePurchaseMarketplacePendingChange) UnsetUnitCount() {
	o.UnitCount.Unset()
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePendingChange) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *MarketplacePurchaseMarketplacePendingChange) SetId(v int32) {
	o.Id = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePendingChange) GetPlan() MarketplaceListingPlan {
	if o == nil || o.Plan == nil {
		var ret MarketplaceListingPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) GetPlanOk() (*MarketplaceListingPlan, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePendingChange) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given MarketplaceListingPlan and assigns it to the Plan field.
func (o *MarketplacePurchaseMarketplacePendingChange) SetPlan(v MarketplaceListingPlan) {
	o.Plan = &v
}

func (o MarketplacePurchaseMarketplacePendingChange) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsInstalled != nil {
		toSerialize["is_installed"] = o.IsInstalled
	}
	if o.EffectiveDate != nil {
		toSerialize["effective_date"] = o.EffectiveDate
	}
	if o.UnitCount.IsSet() {
		toSerialize["unit_count"] = o.UnitCount.Get()
	}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableMarketplacePurchaseMarketplacePendingChange struct {
	value *MarketplacePurchaseMarketplacePendingChange
	isSet bool
}

func (v NullableMarketplacePurchaseMarketplacePendingChange) Get() *MarketplacePurchaseMarketplacePendingChange {
	return v.value
}

func (v *NullableMarketplacePurchaseMarketplacePendingChange) Set(val *MarketplacePurchaseMarketplacePendingChange) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplacePurchaseMarketplacePendingChange) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplacePurchaseMarketplacePendingChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplacePurchaseMarketplacePendingChange(val *MarketplacePurchaseMarketplacePendingChange) *NullableMarketplacePurchaseMarketplacePendingChange {
	return &NullableMarketplacePurchaseMarketplacePendingChange{value: val, isSet: true}
}

func (v NullableMarketplacePurchaseMarketplacePendingChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplacePurchaseMarketplacePendingChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


