/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ScimProvisionAndInviteUserRequestName struct for ScimProvisionAndInviteUserRequestName
type ScimProvisionAndInviteUserRequestName struct {
	GivenName string `json:"givenName"`
	FamilyName string `json:"familyName"`
	Formatted *string `json:"formatted,omitempty"`
}

// NewScimProvisionAndInviteUserRequestName instantiates a new ScimProvisionAndInviteUserRequestName object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimProvisionAndInviteUserRequestName(givenName string, familyName string) *ScimProvisionAndInviteUserRequestName {
	this := ScimProvisionAndInviteUserRequestName{}
	this.GivenName = givenName
	this.FamilyName = familyName
	return &this
}

// NewScimProvisionAndInviteUserRequestNameWithDefaults instantiates a new ScimProvisionAndInviteUserRequestName object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimProvisionAndInviteUserRequestNameWithDefaults() *ScimProvisionAndInviteUserRequestName {
	this := ScimProvisionAndInviteUserRequestName{}
	return &this
}

// GetGivenName returns the GivenName field value
func (o *ScimProvisionAndInviteUserRequestName) GetGivenName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value
// and a boolean to check if the value has been set.
func (o *ScimProvisionAndInviteUserRequestName) GetGivenNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GivenName, true
}

// SetGivenName sets field value
func (o *ScimProvisionAndInviteUserRequestName) SetGivenName(v string) {
	o.GivenName = v
}

// GetFamilyName returns the FamilyName field value
func (o *ScimProvisionAndInviteUserRequestName) GetFamilyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value
// and a boolean to check if the value has been set.
func (o *ScimProvisionAndInviteUserRequestName) GetFamilyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FamilyName, true
}

// SetFamilyName sets field value
func (o *ScimProvisionAndInviteUserRequestName) SetFamilyName(v string) {
	o.FamilyName = v
}

// GetFormatted returns the Formatted field value if set, zero value otherwise.
func (o *ScimProvisionAndInviteUserRequestName) GetFormatted() string {
	if o == nil || o.Formatted == nil {
		var ret string
		return ret
	}
	return *o.Formatted
}

// GetFormattedOk returns a tuple with the Formatted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimProvisionAndInviteUserRequestName) GetFormattedOk() (*string, bool) {
	if o == nil || o.Formatted == nil {
		return nil, false
	}
	return o.Formatted, true
}

// HasFormatted returns a boolean if a field has been set.
func (o *ScimProvisionAndInviteUserRequestName) HasFormatted() bool {
	if o != nil && o.Formatted != nil {
		return true
	}

	return false
}

// SetFormatted gets a reference to the given string and assigns it to the Formatted field.
func (o *ScimProvisionAndInviteUserRequestName) SetFormatted(v string) {
	o.Formatted = &v
}

func (o ScimProvisionAndInviteUserRequestName) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["givenName"] = o.GivenName
	}
	if true {
		toSerialize["familyName"] = o.FamilyName
	}
	if o.Formatted != nil {
		toSerialize["formatted"] = o.Formatted
	}
	return json.Marshal(toSerialize)
}

type NullableScimProvisionAndInviteUserRequestName struct {
	value *ScimProvisionAndInviteUserRequestName
	isSet bool
}

func (v NullableScimProvisionAndInviteUserRequestName) Get() *ScimProvisionAndInviteUserRequestName {
	return v.value
}

func (v *NullableScimProvisionAndInviteUserRequestName) Set(val *ScimProvisionAndInviteUserRequestName) {
	v.value = val
	v.isSet = true
}

func (v NullableScimProvisionAndInviteUserRequestName) IsSet() bool {
	return v.isSet
}

func (v *NullableScimProvisionAndInviteUserRequestName) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimProvisionAndInviteUserRequestName(val *ScimProvisionAndInviteUserRequestName) *NullableScimProvisionAndInviteUserRequestName {
	return &NullableScimProvisionAndInviteUserRequestName{value: val, isSet: true}
}

func (v NullableScimProvisionAndInviteUserRequestName) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimProvisionAndInviteUserRequestName) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


