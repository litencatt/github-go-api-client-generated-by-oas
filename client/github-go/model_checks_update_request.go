/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
	"fmt"
)

// ChecksUpdateRequest struct for ChecksUpdateRequest
type ChecksUpdateRequest struct {
	ChecksCreateRequestOneOf1 *ChecksCreateRequestOneOf1
	ChecksUpdateRequestAnyOf *ChecksUpdateRequestAnyOf
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ChecksUpdateRequest) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into ChecksCreateRequestOneOf1
	err = json.Unmarshal(data, &dst.ChecksCreateRequestOneOf1);
	if err == nil {
		jsonChecksCreateRequestOneOf1, _ := json.Marshal(dst.ChecksCreateRequestOneOf1)
		if string(jsonChecksCreateRequestOneOf1) == "{}" { // empty struct
			dst.ChecksCreateRequestOneOf1 = nil
		} else {
			return nil // data stored in dst.ChecksCreateRequestOneOf1, return on the first match
		}
	} else {
		dst.ChecksCreateRequestOneOf1 = nil
	}

	// try to unmarshal JSON data into ChecksUpdateRequestAnyOf
	err = json.Unmarshal(data, &dst.ChecksUpdateRequestAnyOf);
	if err == nil {
		jsonChecksUpdateRequestAnyOf, _ := json.Marshal(dst.ChecksUpdateRequestAnyOf)
		if string(jsonChecksUpdateRequestAnyOf) == "{}" { // empty struct
			dst.ChecksUpdateRequestAnyOf = nil
		} else {
			return nil // data stored in dst.ChecksUpdateRequestAnyOf, return on the first match
		}
	} else {
		dst.ChecksUpdateRequestAnyOf = nil
	}

	return fmt.Errorf("Data failed to match schemas in anyOf(ChecksUpdateRequest)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ChecksUpdateRequest) MarshalJSON() ([]byte, error) {
	if src.ChecksCreateRequestOneOf1 != nil {
		return json.Marshal(&src.ChecksCreateRequestOneOf1)
	}

	if src.ChecksUpdateRequestAnyOf != nil {
		return json.Marshal(&src.ChecksUpdateRequestAnyOf)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableChecksUpdateRequest struct {
	value *ChecksUpdateRequest
	isSet bool
}

func (v NullableChecksUpdateRequest) Get() *ChecksUpdateRequest {
	return v.value
}

func (v *NullableChecksUpdateRequest) Set(val *ChecksUpdateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChecksUpdateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChecksUpdateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChecksUpdateRequest(val *ChecksUpdateRequest) *NullableChecksUpdateRequest {
	return &NullableChecksUpdateRequest{value: val, isSet: true}
}

func (v NullableChecksUpdateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChecksUpdateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


