/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ScimUserListEnterpriseResourcesInnerEmailsInner struct for ScimUserListEnterpriseResourcesInnerEmailsInner
type ScimUserListEnterpriseResourcesInnerEmailsInner struct {
	Value *string `json:"value,omitempty"`
	Primary *bool `json:"primary,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewScimUserListEnterpriseResourcesInnerEmailsInner instantiates a new ScimUserListEnterpriseResourcesInnerEmailsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimUserListEnterpriseResourcesInnerEmailsInner() *ScimUserListEnterpriseResourcesInnerEmailsInner {
	this := ScimUserListEnterpriseResourcesInnerEmailsInner{}
	return &this
}

// NewScimUserListEnterpriseResourcesInnerEmailsInnerWithDefaults instantiates a new ScimUserListEnterpriseResourcesInnerEmailsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimUserListEnterpriseResourcesInnerEmailsInnerWithDefaults() *ScimUserListEnterpriseResourcesInnerEmailsInner {
	this := ScimUserListEnterpriseResourcesInnerEmailsInner{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) GetValue() string {
	if o == nil || o.Value == nil {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) GetValueOk() (*string, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) SetValue(v string) {
	o.Value = &v
}

// GetPrimary returns the Primary field value if set, zero value otherwise.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) GetPrimary() bool {
	if o == nil || o.Primary == nil {
		var ret bool
		return ret
	}
	return *o.Primary
}

// GetPrimaryOk returns a tuple with the Primary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) GetPrimaryOk() (*bool, bool) {
	if o == nil || o.Primary == nil {
		return nil, false
	}
	return o.Primary, true
}

// HasPrimary returns a boolean if a field has been set.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) HasPrimary() bool {
	if o != nil && o.Primary != nil {
		return true
	}

	return false
}

// SetPrimary gets a reference to the given bool and assigns it to the Primary field.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) SetPrimary(v bool) {
	o.Primary = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ScimUserListEnterpriseResourcesInnerEmailsInner) SetType(v string) {
	o.Type = &v
}

func (o ScimUserListEnterpriseResourcesInnerEmailsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	if o.Primary != nil {
		toSerialize["primary"] = o.Primary
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableScimUserListEnterpriseResourcesInnerEmailsInner struct {
	value *ScimUserListEnterpriseResourcesInnerEmailsInner
	isSet bool
}

func (v NullableScimUserListEnterpriseResourcesInnerEmailsInner) Get() *ScimUserListEnterpriseResourcesInnerEmailsInner {
	return v.value
}

func (v *NullableScimUserListEnterpriseResourcesInnerEmailsInner) Set(val *ScimUserListEnterpriseResourcesInnerEmailsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableScimUserListEnterpriseResourcesInnerEmailsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableScimUserListEnterpriseResourcesInnerEmailsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimUserListEnterpriseResourcesInnerEmailsInner(val *ScimUserListEnterpriseResourcesInnerEmailsInner) *NullableScimUserListEnterpriseResourcesInnerEmailsInner {
	return &NullableScimUserListEnterpriseResourcesInnerEmailsInner{value: val, isSet: true}
}

func (v NullableScimUserListEnterpriseResourcesInnerEmailsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimUserListEnterpriseResourcesInnerEmailsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


