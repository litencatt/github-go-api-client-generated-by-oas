/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CheckRunCheckSuite struct for CheckRunCheckSuite
type CheckRunCheckSuite struct {
	Id int32 `json:"id"`
}

// NewCheckRunCheckSuite instantiates a new CheckRunCheckSuite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckRunCheckSuite(id int32) *CheckRunCheckSuite {
	this := CheckRunCheckSuite{}
	this.Id = id
	return &this
}

// NewCheckRunCheckSuiteWithDefaults instantiates a new CheckRunCheckSuite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckRunCheckSuiteWithDefaults() *CheckRunCheckSuite {
	this := CheckRunCheckSuite{}
	return &this
}

// GetId returns the Id field value
func (o *CheckRunCheckSuite) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CheckRunCheckSuite) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CheckRunCheckSuite) SetId(v int32) {
	o.Id = v
}

func (o CheckRunCheckSuite) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	return json.Marshal(toSerialize)
}

type NullableCheckRunCheckSuite struct {
	value *CheckRunCheckSuite
	isSet bool
}

func (v NullableCheckRunCheckSuite) Get() *CheckRunCheckSuite {
	return v.value
}

func (v *NullableCheckRunCheckSuite) Set(val *CheckRunCheckSuite) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckRunCheckSuite) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckRunCheckSuite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckRunCheckSuite(val *CheckRunCheckSuite) *NullableCheckRunCheckSuite {
	return &NullableCheckRunCheckSuite{value: val, isSet: true}
}

func (v NullableCheckRunCheckSuite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckRunCheckSuite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


