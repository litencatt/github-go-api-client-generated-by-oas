/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// TeamsAddOrUpdateRepoPermissionsLegacyRequest struct for TeamsAddOrUpdateRepoPermissionsLegacyRequest
type TeamsAddOrUpdateRepoPermissionsLegacyRequest struct {
	// The permission to grant the team on this repository. If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.
	Permission *string `json:"permission,omitempty"`
}

// NewTeamsAddOrUpdateRepoPermissionsLegacyRequest instantiates a new TeamsAddOrUpdateRepoPermissionsLegacyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamsAddOrUpdateRepoPermissionsLegacyRequest() *TeamsAddOrUpdateRepoPermissionsLegacyRequest {
	this := TeamsAddOrUpdateRepoPermissionsLegacyRequest{}
	return &this
}

// NewTeamsAddOrUpdateRepoPermissionsLegacyRequestWithDefaults instantiates a new TeamsAddOrUpdateRepoPermissionsLegacyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamsAddOrUpdateRepoPermissionsLegacyRequestWithDefaults() *TeamsAddOrUpdateRepoPermissionsLegacyRequest {
	this := TeamsAddOrUpdateRepoPermissionsLegacyRequest{}
	return &this
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *TeamsAddOrUpdateRepoPermissionsLegacyRequest) GetPermission() string {
	if o == nil || o.Permission == nil {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamsAddOrUpdateRepoPermissionsLegacyRequest) GetPermissionOk() (*string, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *TeamsAddOrUpdateRepoPermissionsLegacyRequest) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *TeamsAddOrUpdateRepoPermissionsLegacyRequest) SetPermission(v string) {
	o.Permission = &v
}

func (o TeamsAddOrUpdateRepoPermissionsLegacyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	return json.Marshal(toSerialize)
}

type NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest struct {
	value *TeamsAddOrUpdateRepoPermissionsLegacyRequest
	isSet bool
}

func (v NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest) Get() *TeamsAddOrUpdateRepoPermissionsLegacyRequest {
	return v.value
}

func (v *NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest) Set(val *TeamsAddOrUpdateRepoPermissionsLegacyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamsAddOrUpdateRepoPermissionsLegacyRequest(val *TeamsAddOrUpdateRepoPermissionsLegacyRequest) *NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest {
	return &NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest{value: val, isSet: true}
}

func (v NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamsAddOrUpdateRepoPermissionsLegacyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


