/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PagesHealthCheckDomain struct for PagesHealthCheckDomain
type PagesHealthCheckDomain struct {
	Host *string `json:"host,omitempty"`
	Uri *string `json:"uri,omitempty"`
	Nameservers *string `json:"nameservers,omitempty"`
	DnsResolves *bool `json:"dns_resolves,omitempty"`
	IsProxied NullableBool `json:"is_proxied,omitempty"`
	IsCloudflareIp NullableBool `json:"is_cloudflare_ip,omitempty"`
	IsFastlyIp NullableBool `json:"is_fastly_ip,omitempty"`
	IsOldIpAddress NullableBool `json:"is_old_ip_address,omitempty"`
	IsARecord NullableBool `json:"is_a_record,omitempty"`
	HasCnameRecord NullableBool `json:"has_cname_record,omitempty"`
	HasMxRecordsPresent NullableBool `json:"has_mx_records_present,omitempty"`
	IsValidDomain *bool `json:"is_valid_domain,omitempty"`
	IsApexDomain *bool `json:"is_apex_domain,omitempty"`
	ShouldBeARecord NullableBool `json:"should_be_a_record,omitempty"`
	IsCnameToGithubUserDomain NullableBool `json:"is_cname_to_github_user_domain,omitempty"`
	IsCnameToPagesDotGithubDotCom NullableBool `json:"is_cname_to_pages_dot_github_dot_com,omitempty"`
	IsCnameToFastly NullableBool `json:"is_cname_to_fastly,omitempty"`
	IsPointedToGithubPagesIp NullableBool `json:"is_pointed_to_github_pages_ip,omitempty"`
	IsNonGithubPagesIpPresent NullableBool `json:"is_non_github_pages_ip_present,omitempty"`
	IsPagesDomain *bool `json:"is_pages_domain,omitempty"`
	IsServedByPages NullableBool `json:"is_served_by_pages,omitempty"`
	IsValid *bool `json:"is_valid,omitempty"`
	Reason NullableString `json:"reason,omitempty"`
	RespondsToHttps *bool `json:"responds_to_https,omitempty"`
	EnforcesHttps *bool `json:"enforces_https,omitempty"`
	HttpsError NullableString `json:"https_error,omitempty"`
	IsHttpsEligible NullableBool `json:"is_https_eligible,omitempty"`
	CaaError NullableString `json:"caa_error,omitempty"`
}

// NewPagesHealthCheckDomain instantiates a new PagesHealthCheckDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagesHealthCheckDomain() *PagesHealthCheckDomain {
	this := PagesHealthCheckDomain{}
	return &this
}

// NewPagesHealthCheckDomainWithDefaults instantiates a new PagesHealthCheckDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagesHealthCheckDomainWithDefaults() *PagesHealthCheckDomain {
	this := PagesHealthCheckDomain{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetHost() string {
	if o == nil || o.Host == nil {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetHostOk() (*string, bool) {
	if o == nil || o.Host == nil {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasHost() bool {
	if o != nil && o.Host != nil {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *PagesHealthCheckDomain) SetHost(v string) {
	o.Host = &v
}

// GetUri returns the Uri field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetUri() string {
	if o == nil || o.Uri == nil {
		var ret string
		return ret
	}
	return *o.Uri
}

// GetUriOk returns a tuple with the Uri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetUriOk() (*string, bool) {
	if o == nil || o.Uri == nil {
		return nil, false
	}
	return o.Uri, true
}

// HasUri returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasUri() bool {
	if o != nil && o.Uri != nil {
		return true
	}

	return false
}

// SetUri gets a reference to the given string and assigns it to the Uri field.
func (o *PagesHealthCheckDomain) SetUri(v string) {
	o.Uri = &v
}

// GetNameservers returns the Nameservers field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetNameservers() string {
	if o == nil || o.Nameservers == nil {
		var ret string
		return ret
	}
	return *o.Nameservers
}

// GetNameserversOk returns a tuple with the Nameservers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetNameserversOk() (*string, bool) {
	if o == nil || o.Nameservers == nil {
		return nil, false
	}
	return o.Nameservers, true
}

// HasNameservers returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasNameservers() bool {
	if o != nil && o.Nameservers != nil {
		return true
	}

	return false
}

// SetNameservers gets a reference to the given string and assigns it to the Nameservers field.
func (o *PagesHealthCheckDomain) SetNameservers(v string) {
	o.Nameservers = &v
}

// GetDnsResolves returns the DnsResolves field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetDnsResolves() bool {
	if o == nil || o.DnsResolves == nil {
		var ret bool
		return ret
	}
	return *o.DnsResolves
}

// GetDnsResolvesOk returns a tuple with the DnsResolves field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetDnsResolvesOk() (*bool, bool) {
	if o == nil || o.DnsResolves == nil {
		return nil, false
	}
	return o.DnsResolves, true
}

// HasDnsResolves returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasDnsResolves() bool {
	if o != nil && o.DnsResolves != nil {
		return true
	}

	return false
}

// SetDnsResolves gets a reference to the given bool and assigns it to the DnsResolves field.
func (o *PagesHealthCheckDomain) SetDnsResolves(v bool) {
	o.DnsResolves = &v
}

// GetIsProxied returns the IsProxied field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsProxied() bool {
	if o == nil || o.IsProxied.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsProxied.Get()
}

// GetIsProxiedOk returns a tuple with the IsProxied field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsProxiedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsProxied.Get(), o.IsProxied.IsSet()
}

// HasIsProxied returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsProxied() bool {
	if o != nil && o.IsProxied.IsSet() {
		return true
	}

	return false
}

// SetIsProxied gets a reference to the given NullableBool and assigns it to the IsProxied field.
func (o *PagesHealthCheckDomain) SetIsProxied(v bool) {
	o.IsProxied.Set(&v)
}
// SetIsProxiedNil sets the value for IsProxied to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsProxiedNil() {
	o.IsProxied.Set(nil)
}

// UnsetIsProxied ensures that no value is present for IsProxied, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsProxied() {
	o.IsProxied.Unset()
}

// GetIsCloudflareIp returns the IsCloudflareIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsCloudflareIp() bool {
	if o == nil || o.IsCloudflareIp.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCloudflareIp.Get()
}

// GetIsCloudflareIpOk returns a tuple with the IsCloudflareIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsCloudflareIpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsCloudflareIp.Get(), o.IsCloudflareIp.IsSet()
}

// HasIsCloudflareIp returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsCloudflareIp() bool {
	if o != nil && o.IsCloudflareIp.IsSet() {
		return true
	}

	return false
}

// SetIsCloudflareIp gets a reference to the given NullableBool and assigns it to the IsCloudflareIp field.
func (o *PagesHealthCheckDomain) SetIsCloudflareIp(v bool) {
	o.IsCloudflareIp.Set(&v)
}
// SetIsCloudflareIpNil sets the value for IsCloudflareIp to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsCloudflareIpNil() {
	o.IsCloudflareIp.Set(nil)
}

// UnsetIsCloudflareIp ensures that no value is present for IsCloudflareIp, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsCloudflareIp() {
	o.IsCloudflareIp.Unset()
}

// GetIsFastlyIp returns the IsFastlyIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsFastlyIp() bool {
	if o == nil || o.IsFastlyIp.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsFastlyIp.Get()
}

// GetIsFastlyIpOk returns a tuple with the IsFastlyIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsFastlyIpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsFastlyIp.Get(), o.IsFastlyIp.IsSet()
}

// HasIsFastlyIp returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsFastlyIp() bool {
	if o != nil && o.IsFastlyIp.IsSet() {
		return true
	}

	return false
}

// SetIsFastlyIp gets a reference to the given NullableBool and assigns it to the IsFastlyIp field.
func (o *PagesHealthCheckDomain) SetIsFastlyIp(v bool) {
	o.IsFastlyIp.Set(&v)
}
// SetIsFastlyIpNil sets the value for IsFastlyIp to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsFastlyIpNil() {
	o.IsFastlyIp.Set(nil)
}

// UnsetIsFastlyIp ensures that no value is present for IsFastlyIp, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsFastlyIp() {
	o.IsFastlyIp.Unset()
}

// GetIsOldIpAddress returns the IsOldIpAddress field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsOldIpAddress() bool {
	if o == nil || o.IsOldIpAddress.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsOldIpAddress.Get()
}

// GetIsOldIpAddressOk returns a tuple with the IsOldIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsOldIpAddressOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsOldIpAddress.Get(), o.IsOldIpAddress.IsSet()
}

// HasIsOldIpAddress returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsOldIpAddress() bool {
	if o != nil && o.IsOldIpAddress.IsSet() {
		return true
	}

	return false
}

// SetIsOldIpAddress gets a reference to the given NullableBool and assigns it to the IsOldIpAddress field.
func (o *PagesHealthCheckDomain) SetIsOldIpAddress(v bool) {
	o.IsOldIpAddress.Set(&v)
}
// SetIsOldIpAddressNil sets the value for IsOldIpAddress to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsOldIpAddressNil() {
	o.IsOldIpAddress.Set(nil)
}

// UnsetIsOldIpAddress ensures that no value is present for IsOldIpAddress, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsOldIpAddress() {
	o.IsOldIpAddress.Unset()
}

// GetIsARecord returns the IsARecord field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsARecord() bool {
	if o == nil || o.IsARecord.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsARecord.Get()
}

// GetIsARecordOk returns a tuple with the IsARecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsARecordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsARecord.Get(), o.IsARecord.IsSet()
}

// HasIsARecord returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsARecord() bool {
	if o != nil && o.IsARecord.IsSet() {
		return true
	}

	return false
}

// SetIsARecord gets a reference to the given NullableBool and assigns it to the IsARecord field.
func (o *PagesHealthCheckDomain) SetIsARecord(v bool) {
	o.IsARecord.Set(&v)
}
// SetIsARecordNil sets the value for IsARecord to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsARecordNil() {
	o.IsARecord.Set(nil)
}

// UnsetIsARecord ensures that no value is present for IsARecord, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsARecord() {
	o.IsARecord.Unset()
}

// GetHasCnameRecord returns the HasCnameRecord field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetHasCnameRecord() bool {
	if o == nil || o.HasCnameRecord.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasCnameRecord.Get()
}

// GetHasCnameRecordOk returns a tuple with the HasCnameRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetHasCnameRecordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasCnameRecord.Get(), o.HasCnameRecord.IsSet()
}

// HasHasCnameRecord returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasHasCnameRecord() bool {
	if o != nil && o.HasCnameRecord.IsSet() {
		return true
	}

	return false
}

// SetHasCnameRecord gets a reference to the given NullableBool and assigns it to the HasCnameRecord field.
func (o *PagesHealthCheckDomain) SetHasCnameRecord(v bool) {
	o.HasCnameRecord.Set(&v)
}
// SetHasCnameRecordNil sets the value for HasCnameRecord to be an explicit nil
func (o *PagesHealthCheckDomain) SetHasCnameRecordNil() {
	o.HasCnameRecord.Set(nil)
}

// UnsetHasCnameRecord ensures that no value is present for HasCnameRecord, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetHasCnameRecord() {
	o.HasCnameRecord.Unset()
}

// GetHasMxRecordsPresent returns the HasMxRecordsPresent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetHasMxRecordsPresent() bool {
	if o == nil || o.HasMxRecordsPresent.Get() == nil {
		var ret bool
		return ret
	}
	return *o.HasMxRecordsPresent.Get()
}

// GetHasMxRecordsPresentOk returns a tuple with the HasMxRecordsPresent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetHasMxRecordsPresentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.HasMxRecordsPresent.Get(), o.HasMxRecordsPresent.IsSet()
}

// HasHasMxRecordsPresent returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasHasMxRecordsPresent() bool {
	if o != nil && o.HasMxRecordsPresent.IsSet() {
		return true
	}

	return false
}

// SetHasMxRecordsPresent gets a reference to the given NullableBool and assigns it to the HasMxRecordsPresent field.
func (o *PagesHealthCheckDomain) SetHasMxRecordsPresent(v bool) {
	o.HasMxRecordsPresent.Set(&v)
}
// SetHasMxRecordsPresentNil sets the value for HasMxRecordsPresent to be an explicit nil
func (o *PagesHealthCheckDomain) SetHasMxRecordsPresentNil() {
	o.HasMxRecordsPresent.Set(nil)
}

// UnsetHasMxRecordsPresent ensures that no value is present for HasMxRecordsPresent, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetHasMxRecordsPresent() {
	o.HasMxRecordsPresent.Unset()
}

// GetIsValidDomain returns the IsValidDomain field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetIsValidDomain() bool {
	if o == nil || o.IsValidDomain == nil {
		var ret bool
		return ret
	}
	return *o.IsValidDomain
}

// GetIsValidDomainOk returns a tuple with the IsValidDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetIsValidDomainOk() (*bool, bool) {
	if o == nil || o.IsValidDomain == nil {
		return nil, false
	}
	return o.IsValidDomain, true
}

// HasIsValidDomain returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsValidDomain() bool {
	if o != nil && o.IsValidDomain != nil {
		return true
	}

	return false
}

// SetIsValidDomain gets a reference to the given bool and assigns it to the IsValidDomain field.
func (o *PagesHealthCheckDomain) SetIsValidDomain(v bool) {
	o.IsValidDomain = &v
}

// GetIsApexDomain returns the IsApexDomain field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetIsApexDomain() bool {
	if o == nil || o.IsApexDomain == nil {
		var ret bool
		return ret
	}
	return *o.IsApexDomain
}

// GetIsApexDomainOk returns a tuple with the IsApexDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetIsApexDomainOk() (*bool, bool) {
	if o == nil || o.IsApexDomain == nil {
		return nil, false
	}
	return o.IsApexDomain, true
}

// HasIsApexDomain returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsApexDomain() bool {
	if o != nil && o.IsApexDomain != nil {
		return true
	}

	return false
}

// SetIsApexDomain gets a reference to the given bool and assigns it to the IsApexDomain field.
func (o *PagesHealthCheckDomain) SetIsApexDomain(v bool) {
	o.IsApexDomain = &v
}

// GetShouldBeARecord returns the ShouldBeARecord field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetShouldBeARecord() bool {
	if o == nil || o.ShouldBeARecord.Get() == nil {
		var ret bool
		return ret
	}
	return *o.ShouldBeARecord.Get()
}

// GetShouldBeARecordOk returns a tuple with the ShouldBeARecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetShouldBeARecordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.ShouldBeARecord.Get(), o.ShouldBeARecord.IsSet()
}

// HasShouldBeARecord returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasShouldBeARecord() bool {
	if o != nil && o.ShouldBeARecord.IsSet() {
		return true
	}

	return false
}

// SetShouldBeARecord gets a reference to the given NullableBool and assigns it to the ShouldBeARecord field.
func (o *PagesHealthCheckDomain) SetShouldBeARecord(v bool) {
	o.ShouldBeARecord.Set(&v)
}
// SetShouldBeARecordNil sets the value for ShouldBeARecord to be an explicit nil
func (o *PagesHealthCheckDomain) SetShouldBeARecordNil() {
	o.ShouldBeARecord.Set(nil)
}

// UnsetShouldBeARecord ensures that no value is present for ShouldBeARecord, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetShouldBeARecord() {
	o.ShouldBeARecord.Unset()
}

// GetIsCnameToGithubUserDomain returns the IsCnameToGithubUserDomain field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsCnameToGithubUserDomain() bool {
	if o == nil || o.IsCnameToGithubUserDomain.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCnameToGithubUserDomain.Get()
}

// GetIsCnameToGithubUserDomainOk returns a tuple with the IsCnameToGithubUserDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsCnameToGithubUserDomainOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsCnameToGithubUserDomain.Get(), o.IsCnameToGithubUserDomain.IsSet()
}

// HasIsCnameToGithubUserDomain returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsCnameToGithubUserDomain() bool {
	if o != nil && o.IsCnameToGithubUserDomain.IsSet() {
		return true
	}

	return false
}

// SetIsCnameToGithubUserDomain gets a reference to the given NullableBool and assigns it to the IsCnameToGithubUserDomain field.
func (o *PagesHealthCheckDomain) SetIsCnameToGithubUserDomain(v bool) {
	o.IsCnameToGithubUserDomain.Set(&v)
}
// SetIsCnameToGithubUserDomainNil sets the value for IsCnameToGithubUserDomain to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsCnameToGithubUserDomainNil() {
	o.IsCnameToGithubUserDomain.Set(nil)
}

// UnsetIsCnameToGithubUserDomain ensures that no value is present for IsCnameToGithubUserDomain, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsCnameToGithubUserDomain() {
	o.IsCnameToGithubUserDomain.Unset()
}

// GetIsCnameToPagesDotGithubDotCom returns the IsCnameToPagesDotGithubDotCom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsCnameToPagesDotGithubDotCom() bool {
	if o == nil || o.IsCnameToPagesDotGithubDotCom.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCnameToPagesDotGithubDotCom.Get()
}

// GetIsCnameToPagesDotGithubDotComOk returns a tuple with the IsCnameToPagesDotGithubDotCom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsCnameToPagesDotGithubDotComOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsCnameToPagesDotGithubDotCom.Get(), o.IsCnameToPagesDotGithubDotCom.IsSet()
}

// HasIsCnameToPagesDotGithubDotCom returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsCnameToPagesDotGithubDotCom() bool {
	if o != nil && o.IsCnameToPagesDotGithubDotCom.IsSet() {
		return true
	}

	return false
}

// SetIsCnameToPagesDotGithubDotCom gets a reference to the given NullableBool and assigns it to the IsCnameToPagesDotGithubDotCom field.
func (o *PagesHealthCheckDomain) SetIsCnameToPagesDotGithubDotCom(v bool) {
	o.IsCnameToPagesDotGithubDotCom.Set(&v)
}
// SetIsCnameToPagesDotGithubDotComNil sets the value for IsCnameToPagesDotGithubDotCom to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsCnameToPagesDotGithubDotComNil() {
	o.IsCnameToPagesDotGithubDotCom.Set(nil)
}

// UnsetIsCnameToPagesDotGithubDotCom ensures that no value is present for IsCnameToPagesDotGithubDotCom, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsCnameToPagesDotGithubDotCom() {
	o.IsCnameToPagesDotGithubDotCom.Unset()
}

// GetIsCnameToFastly returns the IsCnameToFastly field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsCnameToFastly() bool {
	if o == nil || o.IsCnameToFastly.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsCnameToFastly.Get()
}

// GetIsCnameToFastlyOk returns a tuple with the IsCnameToFastly field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsCnameToFastlyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsCnameToFastly.Get(), o.IsCnameToFastly.IsSet()
}

// HasIsCnameToFastly returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsCnameToFastly() bool {
	if o != nil && o.IsCnameToFastly.IsSet() {
		return true
	}

	return false
}

// SetIsCnameToFastly gets a reference to the given NullableBool and assigns it to the IsCnameToFastly field.
func (o *PagesHealthCheckDomain) SetIsCnameToFastly(v bool) {
	o.IsCnameToFastly.Set(&v)
}
// SetIsCnameToFastlyNil sets the value for IsCnameToFastly to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsCnameToFastlyNil() {
	o.IsCnameToFastly.Set(nil)
}

// UnsetIsCnameToFastly ensures that no value is present for IsCnameToFastly, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsCnameToFastly() {
	o.IsCnameToFastly.Unset()
}

// GetIsPointedToGithubPagesIp returns the IsPointedToGithubPagesIp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsPointedToGithubPagesIp() bool {
	if o == nil || o.IsPointedToGithubPagesIp.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsPointedToGithubPagesIp.Get()
}

// GetIsPointedToGithubPagesIpOk returns a tuple with the IsPointedToGithubPagesIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsPointedToGithubPagesIpOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsPointedToGithubPagesIp.Get(), o.IsPointedToGithubPagesIp.IsSet()
}

// HasIsPointedToGithubPagesIp returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsPointedToGithubPagesIp() bool {
	if o != nil && o.IsPointedToGithubPagesIp.IsSet() {
		return true
	}

	return false
}

// SetIsPointedToGithubPagesIp gets a reference to the given NullableBool and assigns it to the IsPointedToGithubPagesIp field.
func (o *PagesHealthCheckDomain) SetIsPointedToGithubPagesIp(v bool) {
	o.IsPointedToGithubPagesIp.Set(&v)
}
// SetIsPointedToGithubPagesIpNil sets the value for IsPointedToGithubPagesIp to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsPointedToGithubPagesIpNil() {
	o.IsPointedToGithubPagesIp.Set(nil)
}

// UnsetIsPointedToGithubPagesIp ensures that no value is present for IsPointedToGithubPagesIp, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsPointedToGithubPagesIp() {
	o.IsPointedToGithubPagesIp.Unset()
}

// GetIsNonGithubPagesIpPresent returns the IsNonGithubPagesIpPresent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsNonGithubPagesIpPresent() bool {
	if o == nil || o.IsNonGithubPagesIpPresent.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsNonGithubPagesIpPresent.Get()
}

// GetIsNonGithubPagesIpPresentOk returns a tuple with the IsNonGithubPagesIpPresent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsNonGithubPagesIpPresentOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsNonGithubPagesIpPresent.Get(), o.IsNonGithubPagesIpPresent.IsSet()
}

// HasIsNonGithubPagesIpPresent returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsNonGithubPagesIpPresent() bool {
	if o != nil && o.IsNonGithubPagesIpPresent.IsSet() {
		return true
	}

	return false
}

// SetIsNonGithubPagesIpPresent gets a reference to the given NullableBool and assigns it to the IsNonGithubPagesIpPresent field.
func (o *PagesHealthCheckDomain) SetIsNonGithubPagesIpPresent(v bool) {
	o.IsNonGithubPagesIpPresent.Set(&v)
}
// SetIsNonGithubPagesIpPresentNil sets the value for IsNonGithubPagesIpPresent to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsNonGithubPagesIpPresentNil() {
	o.IsNonGithubPagesIpPresent.Set(nil)
}

// UnsetIsNonGithubPagesIpPresent ensures that no value is present for IsNonGithubPagesIpPresent, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsNonGithubPagesIpPresent() {
	o.IsNonGithubPagesIpPresent.Unset()
}

// GetIsPagesDomain returns the IsPagesDomain field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetIsPagesDomain() bool {
	if o == nil || o.IsPagesDomain == nil {
		var ret bool
		return ret
	}
	return *o.IsPagesDomain
}

// GetIsPagesDomainOk returns a tuple with the IsPagesDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetIsPagesDomainOk() (*bool, bool) {
	if o == nil || o.IsPagesDomain == nil {
		return nil, false
	}
	return o.IsPagesDomain, true
}

// HasIsPagesDomain returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsPagesDomain() bool {
	if o != nil && o.IsPagesDomain != nil {
		return true
	}

	return false
}

// SetIsPagesDomain gets a reference to the given bool and assigns it to the IsPagesDomain field.
func (o *PagesHealthCheckDomain) SetIsPagesDomain(v bool) {
	o.IsPagesDomain = &v
}

// GetIsServedByPages returns the IsServedByPages field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsServedByPages() bool {
	if o == nil || o.IsServedByPages.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsServedByPages.Get()
}

// GetIsServedByPagesOk returns a tuple with the IsServedByPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsServedByPagesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsServedByPages.Get(), o.IsServedByPages.IsSet()
}

// HasIsServedByPages returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsServedByPages() bool {
	if o != nil && o.IsServedByPages.IsSet() {
		return true
	}

	return false
}

// SetIsServedByPages gets a reference to the given NullableBool and assigns it to the IsServedByPages field.
func (o *PagesHealthCheckDomain) SetIsServedByPages(v bool) {
	o.IsServedByPages.Set(&v)
}
// SetIsServedByPagesNil sets the value for IsServedByPages to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsServedByPagesNil() {
	o.IsServedByPages.Set(nil)
}

// UnsetIsServedByPages ensures that no value is present for IsServedByPages, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsServedByPages() {
	o.IsServedByPages.Unset()
}

// GetIsValid returns the IsValid field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetIsValid() bool {
	if o == nil || o.IsValid == nil {
		var ret bool
		return ret
	}
	return *o.IsValid
}

// GetIsValidOk returns a tuple with the IsValid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetIsValidOk() (*bool, bool) {
	if o == nil || o.IsValid == nil {
		return nil, false
	}
	return o.IsValid, true
}

// HasIsValid returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsValid() bool {
	if o != nil && o.IsValid != nil {
		return true
	}

	return false
}

// SetIsValid gets a reference to the given bool and assigns it to the IsValid field.
func (o *PagesHealthCheckDomain) SetIsValid(v bool) {
	o.IsValid = &v
}

// GetReason returns the Reason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetReason() string {
	if o == nil || o.Reason.Get() == nil {
		var ret string
		return ret
	}
	return *o.Reason.Get()
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reason.Get(), o.Reason.IsSet()
}

// HasReason returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasReason() bool {
	if o != nil && o.Reason.IsSet() {
		return true
	}

	return false
}

// SetReason gets a reference to the given NullableString and assigns it to the Reason field.
func (o *PagesHealthCheckDomain) SetReason(v string) {
	o.Reason.Set(&v)
}
// SetReasonNil sets the value for Reason to be an explicit nil
func (o *PagesHealthCheckDomain) SetReasonNil() {
	o.Reason.Set(nil)
}

// UnsetReason ensures that no value is present for Reason, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetReason() {
	o.Reason.Unset()
}

// GetRespondsToHttps returns the RespondsToHttps field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetRespondsToHttps() bool {
	if o == nil || o.RespondsToHttps == nil {
		var ret bool
		return ret
	}
	return *o.RespondsToHttps
}

// GetRespondsToHttpsOk returns a tuple with the RespondsToHttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetRespondsToHttpsOk() (*bool, bool) {
	if o == nil || o.RespondsToHttps == nil {
		return nil, false
	}
	return o.RespondsToHttps, true
}

// HasRespondsToHttps returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasRespondsToHttps() bool {
	if o != nil && o.RespondsToHttps != nil {
		return true
	}

	return false
}

// SetRespondsToHttps gets a reference to the given bool and assigns it to the RespondsToHttps field.
func (o *PagesHealthCheckDomain) SetRespondsToHttps(v bool) {
	o.RespondsToHttps = &v
}

// GetEnforcesHttps returns the EnforcesHttps field value if set, zero value otherwise.
func (o *PagesHealthCheckDomain) GetEnforcesHttps() bool {
	if o == nil || o.EnforcesHttps == nil {
		var ret bool
		return ret
	}
	return *o.EnforcesHttps
}

// GetEnforcesHttpsOk returns a tuple with the EnforcesHttps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagesHealthCheckDomain) GetEnforcesHttpsOk() (*bool, bool) {
	if o == nil || o.EnforcesHttps == nil {
		return nil, false
	}
	return o.EnforcesHttps, true
}

// HasEnforcesHttps returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasEnforcesHttps() bool {
	if o != nil && o.EnforcesHttps != nil {
		return true
	}

	return false
}

// SetEnforcesHttps gets a reference to the given bool and assigns it to the EnforcesHttps field.
func (o *PagesHealthCheckDomain) SetEnforcesHttps(v bool) {
	o.EnforcesHttps = &v
}

// GetHttpsError returns the HttpsError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetHttpsError() string {
	if o == nil || o.HttpsError.Get() == nil {
		var ret string
		return ret
	}
	return *o.HttpsError.Get()
}

// GetHttpsErrorOk returns a tuple with the HttpsError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetHttpsErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HttpsError.Get(), o.HttpsError.IsSet()
}

// HasHttpsError returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasHttpsError() bool {
	if o != nil && o.HttpsError.IsSet() {
		return true
	}

	return false
}

// SetHttpsError gets a reference to the given NullableString and assigns it to the HttpsError field.
func (o *PagesHealthCheckDomain) SetHttpsError(v string) {
	o.HttpsError.Set(&v)
}
// SetHttpsErrorNil sets the value for HttpsError to be an explicit nil
func (o *PagesHealthCheckDomain) SetHttpsErrorNil() {
	o.HttpsError.Set(nil)
}

// UnsetHttpsError ensures that no value is present for HttpsError, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetHttpsError() {
	o.HttpsError.Unset()
}

// GetIsHttpsEligible returns the IsHttpsEligible field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetIsHttpsEligible() bool {
	if o == nil || o.IsHttpsEligible.Get() == nil {
		var ret bool
		return ret
	}
	return *o.IsHttpsEligible.Get()
}

// GetIsHttpsEligibleOk returns a tuple with the IsHttpsEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetIsHttpsEligibleOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.IsHttpsEligible.Get(), o.IsHttpsEligible.IsSet()
}

// HasIsHttpsEligible returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasIsHttpsEligible() bool {
	if o != nil && o.IsHttpsEligible.IsSet() {
		return true
	}

	return false
}

// SetIsHttpsEligible gets a reference to the given NullableBool and assigns it to the IsHttpsEligible field.
func (o *PagesHealthCheckDomain) SetIsHttpsEligible(v bool) {
	o.IsHttpsEligible.Set(&v)
}
// SetIsHttpsEligibleNil sets the value for IsHttpsEligible to be an explicit nil
func (o *PagesHealthCheckDomain) SetIsHttpsEligibleNil() {
	o.IsHttpsEligible.Set(nil)
}

// UnsetIsHttpsEligible ensures that no value is present for IsHttpsEligible, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetIsHttpsEligible() {
	o.IsHttpsEligible.Unset()
}

// GetCaaError returns the CaaError field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PagesHealthCheckDomain) GetCaaError() string {
	if o == nil || o.CaaError.Get() == nil {
		var ret string
		return ret
	}
	return *o.CaaError.Get()
}

// GetCaaErrorOk returns a tuple with the CaaError field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PagesHealthCheckDomain) GetCaaErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.CaaError.Get(), o.CaaError.IsSet()
}

// HasCaaError returns a boolean if a field has been set.
func (o *PagesHealthCheckDomain) HasCaaError() bool {
	if o != nil && o.CaaError.IsSet() {
		return true
	}

	return false
}

// SetCaaError gets a reference to the given NullableString and assigns it to the CaaError field.
func (o *PagesHealthCheckDomain) SetCaaError(v string) {
	o.CaaError.Set(&v)
}
// SetCaaErrorNil sets the value for CaaError to be an explicit nil
func (o *PagesHealthCheckDomain) SetCaaErrorNil() {
	o.CaaError.Set(nil)
}

// UnsetCaaError ensures that no value is present for CaaError, not even an explicit nil
func (o *PagesHealthCheckDomain) UnsetCaaError() {
	o.CaaError.Unset()
}

func (o PagesHealthCheckDomain) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Host != nil {
		toSerialize["host"] = o.Host
	}
	if o.Uri != nil {
		toSerialize["uri"] = o.Uri
	}
	if o.Nameservers != nil {
		toSerialize["nameservers"] = o.Nameservers
	}
	if o.DnsResolves != nil {
		toSerialize["dns_resolves"] = o.DnsResolves
	}
	if o.IsProxied.IsSet() {
		toSerialize["is_proxied"] = o.IsProxied.Get()
	}
	if o.IsCloudflareIp.IsSet() {
		toSerialize["is_cloudflare_ip"] = o.IsCloudflareIp.Get()
	}
	if o.IsFastlyIp.IsSet() {
		toSerialize["is_fastly_ip"] = o.IsFastlyIp.Get()
	}
	if o.IsOldIpAddress.IsSet() {
		toSerialize["is_old_ip_address"] = o.IsOldIpAddress.Get()
	}
	if o.IsARecord.IsSet() {
		toSerialize["is_a_record"] = o.IsARecord.Get()
	}
	if o.HasCnameRecord.IsSet() {
		toSerialize["has_cname_record"] = o.HasCnameRecord.Get()
	}
	if o.HasMxRecordsPresent.IsSet() {
		toSerialize["has_mx_records_present"] = o.HasMxRecordsPresent.Get()
	}
	if o.IsValidDomain != nil {
		toSerialize["is_valid_domain"] = o.IsValidDomain
	}
	if o.IsApexDomain != nil {
		toSerialize["is_apex_domain"] = o.IsApexDomain
	}
	if o.ShouldBeARecord.IsSet() {
		toSerialize["should_be_a_record"] = o.ShouldBeARecord.Get()
	}
	if o.IsCnameToGithubUserDomain.IsSet() {
		toSerialize["is_cname_to_github_user_domain"] = o.IsCnameToGithubUserDomain.Get()
	}
	if o.IsCnameToPagesDotGithubDotCom.IsSet() {
		toSerialize["is_cname_to_pages_dot_github_dot_com"] = o.IsCnameToPagesDotGithubDotCom.Get()
	}
	if o.IsCnameToFastly.IsSet() {
		toSerialize["is_cname_to_fastly"] = o.IsCnameToFastly.Get()
	}
	if o.IsPointedToGithubPagesIp.IsSet() {
		toSerialize["is_pointed_to_github_pages_ip"] = o.IsPointedToGithubPagesIp.Get()
	}
	if o.IsNonGithubPagesIpPresent.IsSet() {
		toSerialize["is_non_github_pages_ip_present"] = o.IsNonGithubPagesIpPresent.Get()
	}
	if o.IsPagesDomain != nil {
		toSerialize["is_pages_domain"] = o.IsPagesDomain
	}
	if o.IsServedByPages.IsSet() {
		toSerialize["is_served_by_pages"] = o.IsServedByPages.Get()
	}
	if o.IsValid != nil {
		toSerialize["is_valid"] = o.IsValid
	}
	if o.Reason.IsSet() {
		toSerialize["reason"] = o.Reason.Get()
	}
	if o.RespondsToHttps != nil {
		toSerialize["responds_to_https"] = o.RespondsToHttps
	}
	if o.EnforcesHttps != nil {
		toSerialize["enforces_https"] = o.EnforcesHttps
	}
	if o.HttpsError.IsSet() {
		toSerialize["https_error"] = o.HttpsError.Get()
	}
	if o.IsHttpsEligible.IsSet() {
		toSerialize["is_https_eligible"] = o.IsHttpsEligible.Get()
	}
	if o.CaaError.IsSet() {
		toSerialize["caa_error"] = o.CaaError.Get()
	}
	return json.Marshal(toSerialize)
}

type NullablePagesHealthCheckDomain struct {
	value *PagesHealthCheckDomain
	isSet bool
}

func (v NullablePagesHealthCheckDomain) Get() *PagesHealthCheckDomain {
	return v.value
}

func (v *NullablePagesHealthCheckDomain) Set(val *PagesHealthCheckDomain) {
	v.value = val
	v.isSet = true
}

func (v NullablePagesHealthCheckDomain) IsSet() bool {
	return v.isSet
}

func (v *NullablePagesHealthCheckDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagesHealthCheckDomain(val *PagesHealthCheckDomain) *NullablePagesHealthCheckDomain {
	return &NullablePagesHealthCheckDomain{value: val, isSet: true}
}

func (v NullablePagesHealthCheckDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagesHealthCheckDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


