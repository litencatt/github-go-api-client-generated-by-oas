/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// StarredRepository Starred Repository
type StarredRepository struct {
	StarredAt time.Time `json:"starred_at"`
	Repo Repository `json:"repo"`
}

// NewStarredRepository instantiates a new StarredRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStarredRepository(starredAt time.Time, repo Repository) *StarredRepository {
	this := StarredRepository{}
	this.StarredAt = starredAt
	this.Repo = repo
	return &this
}

// NewStarredRepositoryWithDefaults instantiates a new StarredRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStarredRepositoryWithDefaults() *StarredRepository {
	this := StarredRepository{}
	return &this
}

// GetStarredAt returns the StarredAt field value
func (o *StarredRepository) GetStarredAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StarredAt
}

// GetStarredAtOk returns a tuple with the StarredAt field value
// and a boolean to check if the value has been set.
func (o *StarredRepository) GetStarredAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StarredAt, true
}

// SetStarredAt sets field value
func (o *StarredRepository) SetStarredAt(v time.Time) {
	o.StarredAt = v
}

// GetRepo returns the Repo field value
func (o *StarredRepository) GetRepo() Repository {
	if o == nil {
		var ret Repository
		return ret
	}

	return o.Repo
}

// GetRepoOk returns a tuple with the Repo field value
// and a boolean to check if the value has been set.
func (o *StarredRepository) GetRepoOk() (*Repository, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repo, true
}

// SetRepo sets field value
func (o *StarredRepository) SetRepo(v Repository) {
	o.Repo = v
}

func (o StarredRepository) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["starred_at"] = o.StarredAt
	}
	if true {
		toSerialize["repo"] = o.Repo
	}
	return json.Marshal(toSerialize)
}

type NullableStarredRepository struct {
	value *StarredRepository
	isSet bool
}

func (v NullableStarredRepository) Get() *StarredRepository {
	return v.value
}

func (v *NullableStarredRepository) Set(val *StarredRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableStarredRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableStarredRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStarredRepository(val *StarredRepository) *NullableStarredRepository {
	return &NullableStarredRepository{value: val, isSet: true}
}

func (v NullableStarredRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStarredRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


