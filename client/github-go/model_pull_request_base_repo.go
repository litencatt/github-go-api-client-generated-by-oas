/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// PullRequestBaseRepo struct for PullRequestBaseRepo
type PullRequestBaseRepo struct {
	ArchiveUrl string `json:"archive_url"`
	AssigneesUrl string `json:"assignees_url"`
	BlobsUrl string `json:"blobs_url"`
	BranchesUrl string `json:"branches_url"`
	CollaboratorsUrl string `json:"collaborators_url"`
	CommentsUrl string `json:"comments_url"`
	CommitsUrl string `json:"commits_url"`
	CompareUrl string `json:"compare_url"`
	ContentsUrl string `json:"contents_url"`
	ContributorsUrl string `json:"contributors_url"`
	DeploymentsUrl string `json:"deployments_url"`
	Description NullableString `json:"description"`
	DownloadsUrl string `json:"downloads_url"`
	EventsUrl string `json:"events_url"`
	Fork bool `json:"fork"`
	ForksUrl string `json:"forks_url"`
	FullName string `json:"full_name"`
	GitCommitsUrl string `json:"git_commits_url"`
	GitRefsUrl string `json:"git_refs_url"`
	GitTagsUrl string `json:"git_tags_url"`
	HooksUrl string `json:"hooks_url"`
	HtmlUrl string `json:"html_url"`
	Id int32 `json:"id"`
	IsTemplate *bool `json:"is_template,omitempty"`
	NodeId string `json:"node_id"`
	IssueCommentUrl string `json:"issue_comment_url"`
	IssueEventsUrl string `json:"issue_events_url"`
	IssuesUrl string `json:"issues_url"`
	KeysUrl string `json:"keys_url"`
	LabelsUrl string `json:"labels_url"`
	LanguagesUrl string `json:"languages_url"`
	MergesUrl string `json:"merges_url"`
	MilestonesUrl string `json:"milestones_url"`
	Name string `json:"name"`
	NotificationsUrl string `json:"notifications_url"`
	Owner PullRequestHeadRepoOwner `json:"owner"`
	Private bool `json:"private"`
	PullsUrl string `json:"pulls_url"`
	ReleasesUrl string `json:"releases_url"`
	StargazersUrl string `json:"stargazers_url"`
	StatusesUrl string `json:"statuses_url"`
	SubscribersUrl string `json:"subscribers_url"`
	SubscriptionUrl string `json:"subscription_url"`
	TagsUrl string `json:"tags_url"`
	TeamsUrl string `json:"teams_url"`
	TreesUrl string `json:"trees_url"`
	Url string `json:"url"`
	CloneUrl string `json:"clone_url"`
	DefaultBranch string `json:"default_branch"`
	Forks int32 `json:"forks"`
	ForksCount int32 `json:"forks_count"`
	GitUrl string `json:"git_url"`
	HasDownloads bool `json:"has_downloads"`
	HasIssues bool `json:"has_issues"`
	HasProjects bool `json:"has_projects"`
	HasWiki bool `json:"has_wiki"`
	HasPages bool `json:"has_pages"`
	Homepage NullableString `json:"homepage"`
	Language NullableString `json:"language"`
	MasterBranch *string `json:"master_branch,omitempty"`
	Archived bool `json:"archived"`
	Disabled bool `json:"disabled"`
	// The repository visibility: public, private, or internal.
	Visibility *string `json:"visibility,omitempty"`
	MirrorUrl NullableString `json:"mirror_url"`
	OpenIssues int32 `json:"open_issues"`
	OpenIssuesCount int32 `json:"open_issues_count"`
	Permissions *FullRepositoryPermissions `json:"permissions,omitempty"`
	TempCloneToken *string `json:"temp_clone_token,omitempty"`
	AllowMergeCommit *bool `json:"allow_merge_commit,omitempty"`
	AllowSquashMerge *bool `json:"allow_squash_merge,omitempty"`
	AllowRebaseMerge *bool `json:"allow_rebase_merge,omitempty"`
	License NullableNullableLicenseSimple `json:"license"`
	PushedAt time.Time `json:"pushed_at"`
	Size int32 `json:"size"`
	SshUrl string `json:"ssh_url"`
	StargazersCount int32 `json:"stargazers_count"`
	SvnUrl string `json:"svn_url"`
	Topics []string `json:"topics,omitempty"`
	Watchers int32 `json:"watchers"`
	WatchersCount int32 `json:"watchers_count"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	AllowForking *bool `json:"allow_forking,omitempty"`
}

// NewPullRequestBaseRepo instantiates a new PullRequestBaseRepo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestBaseRepo(archiveUrl string, assigneesUrl string, blobsUrl string, branchesUrl string, collaboratorsUrl string, commentsUrl string, commitsUrl string, compareUrl string, contentsUrl string, contributorsUrl string, deploymentsUrl string, description NullableString, downloadsUrl string, eventsUrl string, fork bool, forksUrl string, fullName string, gitCommitsUrl string, gitRefsUrl string, gitTagsUrl string, hooksUrl string, htmlUrl string, id int32, nodeId string, issueCommentUrl string, issueEventsUrl string, issuesUrl string, keysUrl string, labelsUrl string, languagesUrl string, mergesUrl string, milestonesUrl string, name string, notificationsUrl string, owner PullRequestHeadRepoOwner, private bool, pullsUrl string, releasesUrl string, stargazersUrl string, statusesUrl string, subscribersUrl string, subscriptionUrl string, tagsUrl string, teamsUrl string, treesUrl string, url string, cloneUrl string, defaultBranch string, forks int32, forksCount int32, gitUrl string, hasDownloads bool, hasIssues bool, hasProjects bool, hasWiki bool, hasPages bool, homepage NullableString, language NullableString, archived bool, disabled bool, mirrorUrl NullableString, openIssues int32, openIssuesCount int32, license NullableNullableLicenseSimple, pushedAt time.Time, size int32, sshUrl string, stargazersCount int32, svnUrl string, watchers int32, watchersCount int32, createdAt time.Time, updatedAt time.Time) *PullRequestBaseRepo {
	this := PullRequestBaseRepo{}
	this.ArchiveUrl = archiveUrl
	this.AssigneesUrl = assigneesUrl
	this.BlobsUrl = blobsUrl
	this.BranchesUrl = branchesUrl
	this.CollaboratorsUrl = collaboratorsUrl
	this.CommentsUrl = commentsUrl
	this.CommitsUrl = commitsUrl
	this.CompareUrl = compareUrl
	this.ContentsUrl = contentsUrl
	this.ContributorsUrl = contributorsUrl
	this.DeploymentsUrl = deploymentsUrl
	this.Description = description
	this.DownloadsUrl = downloadsUrl
	this.EventsUrl = eventsUrl
	this.Fork = fork
	this.ForksUrl = forksUrl
	this.FullName = fullName
	this.GitCommitsUrl = gitCommitsUrl
	this.GitRefsUrl = gitRefsUrl
	this.GitTagsUrl = gitTagsUrl
	this.HooksUrl = hooksUrl
	this.HtmlUrl = htmlUrl
	this.Id = id
	this.NodeId = nodeId
	this.IssueCommentUrl = issueCommentUrl
	this.IssueEventsUrl = issueEventsUrl
	this.IssuesUrl = issuesUrl
	this.KeysUrl = keysUrl
	this.LabelsUrl = labelsUrl
	this.LanguagesUrl = languagesUrl
	this.MergesUrl = mergesUrl
	this.MilestonesUrl = milestonesUrl
	this.Name = name
	this.NotificationsUrl = notificationsUrl
	this.Owner = owner
	this.Private = private
	this.PullsUrl = pullsUrl
	this.ReleasesUrl = releasesUrl
	this.StargazersUrl = stargazersUrl
	this.StatusesUrl = statusesUrl
	this.SubscribersUrl = subscribersUrl
	this.SubscriptionUrl = subscriptionUrl
	this.TagsUrl = tagsUrl
	this.TeamsUrl = teamsUrl
	this.TreesUrl = treesUrl
	this.Url = url
	this.CloneUrl = cloneUrl
	this.DefaultBranch = defaultBranch
	this.Forks = forks
	this.ForksCount = forksCount
	this.GitUrl = gitUrl
	this.HasDownloads = hasDownloads
	this.HasIssues = hasIssues
	this.HasProjects = hasProjects
	this.HasWiki = hasWiki
	this.HasPages = hasPages
	this.Homepage = homepage
	this.Language = language
	this.Archived = archived
	this.Disabled = disabled
	this.MirrorUrl = mirrorUrl
	this.OpenIssues = openIssues
	this.OpenIssuesCount = openIssuesCount
	this.License = license
	this.PushedAt = pushedAt
	this.Size = size
	this.SshUrl = sshUrl
	this.StargazersCount = stargazersCount
	this.SvnUrl = svnUrl
	this.Watchers = watchers
	this.WatchersCount = watchersCount
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewPullRequestBaseRepoWithDefaults instantiates a new PullRequestBaseRepo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestBaseRepoWithDefaults() *PullRequestBaseRepo {
	this := PullRequestBaseRepo{}
	return &this
}

// GetArchiveUrl returns the ArchiveUrl field value
func (o *PullRequestBaseRepo) GetArchiveUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ArchiveUrl
}

// GetArchiveUrlOk returns a tuple with the ArchiveUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetArchiveUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchiveUrl, true
}

// SetArchiveUrl sets field value
func (o *PullRequestBaseRepo) SetArchiveUrl(v string) {
	o.ArchiveUrl = v
}

// GetAssigneesUrl returns the AssigneesUrl field value
func (o *PullRequestBaseRepo) GetAssigneesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AssigneesUrl
}

// GetAssigneesUrlOk returns a tuple with the AssigneesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetAssigneesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssigneesUrl, true
}

// SetAssigneesUrl sets field value
func (o *PullRequestBaseRepo) SetAssigneesUrl(v string) {
	o.AssigneesUrl = v
}

// GetBlobsUrl returns the BlobsUrl field value
func (o *PullRequestBaseRepo) GetBlobsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BlobsUrl
}

// GetBlobsUrlOk returns a tuple with the BlobsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetBlobsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BlobsUrl, true
}

// SetBlobsUrl sets field value
func (o *PullRequestBaseRepo) SetBlobsUrl(v string) {
	o.BlobsUrl = v
}

// GetBranchesUrl returns the BranchesUrl field value
func (o *PullRequestBaseRepo) GetBranchesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BranchesUrl
}

// GetBranchesUrlOk returns a tuple with the BranchesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetBranchesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BranchesUrl, true
}

// SetBranchesUrl sets field value
func (o *PullRequestBaseRepo) SetBranchesUrl(v string) {
	o.BranchesUrl = v
}

// GetCollaboratorsUrl returns the CollaboratorsUrl field value
func (o *PullRequestBaseRepo) GetCollaboratorsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CollaboratorsUrl
}

// GetCollaboratorsUrlOk returns a tuple with the CollaboratorsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetCollaboratorsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CollaboratorsUrl, true
}

// SetCollaboratorsUrl sets field value
func (o *PullRequestBaseRepo) SetCollaboratorsUrl(v string) {
	o.CollaboratorsUrl = v
}

// GetCommentsUrl returns the CommentsUrl field value
func (o *PullRequestBaseRepo) GetCommentsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommentsUrl
}

// GetCommentsUrlOk returns a tuple with the CommentsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetCommentsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommentsUrl, true
}

// SetCommentsUrl sets field value
func (o *PullRequestBaseRepo) SetCommentsUrl(v string) {
	o.CommentsUrl = v
}

// GetCommitsUrl returns the CommitsUrl field value
func (o *PullRequestBaseRepo) GetCommitsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommitsUrl
}

// GetCommitsUrlOk returns a tuple with the CommitsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetCommitsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommitsUrl, true
}

// SetCommitsUrl sets field value
func (o *PullRequestBaseRepo) SetCommitsUrl(v string) {
	o.CommitsUrl = v
}

// GetCompareUrl returns the CompareUrl field value
func (o *PullRequestBaseRepo) GetCompareUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CompareUrl
}

// GetCompareUrlOk returns a tuple with the CompareUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetCompareUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompareUrl, true
}

// SetCompareUrl sets field value
func (o *PullRequestBaseRepo) SetCompareUrl(v string) {
	o.CompareUrl = v
}

// GetContentsUrl returns the ContentsUrl field value
func (o *PullRequestBaseRepo) GetContentsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContentsUrl
}

// GetContentsUrlOk returns a tuple with the ContentsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetContentsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContentsUrl, true
}

// SetContentsUrl sets field value
func (o *PullRequestBaseRepo) SetContentsUrl(v string) {
	o.ContentsUrl = v
}

// GetContributorsUrl returns the ContributorsUrl field value
func (o *PullRequestBaseRepo) GetContributorsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContributorsUrl
}

// GetContributorsUrlOk returns a tuple with the ContributorsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetContributorsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContributorsUrl, true
}

// SetContributorsUrl sets field value
func (o *PullRequestBaseRepo) SetContributorsUrl(v string) {
	o.ContributorsUrl = v
}

// GetDeploymentsUrl returns the DeploymentsUrl field value
func (o *PullRequestBaseRepo) GetDeploymentsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeploymentsUrl
}

// GetDeploymentsUrlOk returns a tuple with the DeploymentsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetDeploymentsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentsUrl, true
}

// SetDeploymentsUrl sets field value
func (o *PullRequestBaseRepo) SetDeploymentsUrl(v string) {
	o.DeploymentsUrl = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PullRequestBaseRepo) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PullRequestBaseRepo) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *PullRequestBaseRepo) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetDownloadsUrl returns the DownloadsUrl field value
func (o *PullRequestBaseRepo) GetDownloadsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DownloadsUrl
}

// GetDownloadsUrlOk returns a tuple with the DownloadsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetDownloadsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DownloadsUrl, true
}

// SetDownloadsUrl sets field value
func (o *PullRequestBaseRepo) SetDownloadsUrl(v string) {
	o.DownloadsUrl = v
}

// GetEventsUrl returns the EventsUrl field value
func (o *PullRequestBaseRepo) GetEventsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventsUrl
}

// GetEventsUrlOk returns a tuple with the EventsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetEventsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventsUrl, true
}

// SetEventsUrl sets field value
func (o *PullRequestBaseRepo) SetEventsUrl(v string) {
	o.EventsUrl = v
}

// GetFork returns the Fork field value
func (o *PullRequestBaseRepo) GetFork() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Fork
}

// GetForkOk returns a tuple with the Fork field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetForkOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Fork, true
}

// SetFork sets field value
func (o *PullRequestBaseRepo) SetFork(v bool) {
	o.Fork = v
}

// GetForksUrl returns the ForksUrl field value
func (o *PullRequestBaseRepo) GetForksUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ForksUrl
}

// GetForksUrlOk returns a tuple with the ForksUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetForksUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForksUrl, true
}

// SetForksUrl sets field value
func (o *PullRequestBaseRepo) SetForksUrl(v string) {
	o.ForksUrl = v
}

// GetFullName returns the FullName field value
func (o *PullRequestBaseRepo) GetFullName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetFullNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FullName, true
}

// SetFullName sets field value
func (o *PullRequestBaseRepo) SetFullName(v string) {
	o.FullName = v
}

// GetGitCommitsUrl returns the GitCommitsUrl field value
func (o *PullRequestBaseRepo) GetGitCommitsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitCommitsUrl
}

// GetGitCommitsUrlOk returns a tuple with the GitCommitsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetGitCommitsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GitCommitsUrl, true
}

// SetGitCommitsUrl sets field value
func (o *PullRequestBaseRepo) SetGitCommitsUrl(v string) {
	o.GitCommitsUrl = v
}

// GetGitRefsUrl returns the GitRefsUrl field value
func (o *PullRequestBaseRepo) GetGitRefsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitRefsUrl
}

// GetGitRefsUrlOk returns a tuple with the GitRefsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetGitRefsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GitRefsUrl, true
}

// SetGitRefsUrl sets field value
func (o *PullRequestBaseRepo) SetGitRefsUrl(v string) {
	o.GitRefsUrl = v
}

// GetGitTagsUrl returns the GitTagsUrl field value
func (o *PullRequestBaseRepo) GetGitTagsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitTagsUrl
}

// GetGitTagsUrlOk returns a tuple with the GitTagsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetGitTagsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GitTagsUrl, true
}

// SetGitTagsUrl sets field value
func (o *PullRequestBaseRepo) SetGitTagsUrl(v string) {
	o.GitTagsUrl = v
}

// GetHooksUrl returns the HooksUrl field value
func (o *PullRequestBaseRepo) GetHooksUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HooksUrl
}

// GetHooksUrlOk returns a tuple with the HooksUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetHooksUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HooksUrl, true
}

// SetHooksUrl sets field value
func (o *PullRequestBaseRepo) SetHooksUrl(v string) {
	o.HooksUrl = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *PullRequestBaseRepo) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *PullRequestBaseRepo) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetId returns the Id field value
func (o *PullRequestBaseRepo) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PullRequestBaseRepo) SetId(v int32) {
	o.Id = v
}

// GetIsTemplate returns the IsTemplate field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetIsTemplate() bool {
	if o == nil || o.IsTemplate == nil {
		var ret bool
		return ret
	}
	return *o.IsTemplate
}

// GetIsTemplateOk returns a tuple with the IsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetIsTemplateOk() (*bool, bool) {
	if o == nil || o.IsTemplate == nil {
		return nil, false
	}
	return o.IsTemplate, true
}

// HasIsTemplate returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasIsTemplate() bool {
	if o != nil && o.IsTemplate != nil {
		return true
	}

	return false
}

// SetIsTemplate gets a reference to the given bool and assigns it to the IsTemplate field.
func (o *PullRequestBaseRepo) SetIsTemplate(v bool) {
	o.IsTemplate = &v
}

// GetNodeId returns the NodeId field value
func (o *PullRequestBaseRepo) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *PullRequestBaseRepo) SetNodeId(v string) {
	o.NodeId = v
}

// GetIssueCommentUrl returns the IssueCommentUrl field value
func (o *PullRequestBaseRepo) GetIssueCommentUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssueCommentUrl
}

// GetIssueCommentUrlOk returns a tuple with the IssueCommentUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetIssueCommentUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssueCommentUrl, true
}

// SetIssueCommentUrl sets field value
func (o *PullRequestBaseRepo) SetIssueCommentUrl(v string) {
	o.IssueCommentUrl = v
}

// GetIssueEventsUrl returns the IssueEventsUrl field value
func (o *PullRequestBaseRepo) GetIssueEventsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssueEventsUrl
}

// GetIssueEventsUrlOk returns a tuple with the IssueEventsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetIssueEventsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssueEventsUrl, true
}

// SetIssueEventsUrl sets field value
func (o *PullRequestBaseRepo) SetIssueEventsUrl(v string) {
	o.IssueEventsUrl = v
}

// GetIssuesUrl returns the IssuesUrl field value
func (o *PullRequestBaseRepo) GetIssuesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IssuesUrl
}

// GetIssuesUrlOk returns a tuple with the IssuesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetIssuesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuesUrl, true
}

// SetIssuesUrl sets field value
func (o *PullRequestBaseRepo) SetIssuesUrl(v string) {
	o.IssuesUrl = v
}

// GetKeysUrl returns the KeysUrl field value
func (o *PullRequestBaseRepo) GetKeysUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeysUrl
}

// GetKeysUrlOk returns a tuple with the KeysUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetKeysUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeysUrl, true
}

// SetKeysUrl sets field value
func (o *PullRequestBaseRepo) SetKeysUrl(v string) {
	o.KeysUrl = v
}

// GetLabelsUrl returns the LabelsUrl field value
func (o *PullRequestBaseRepo) GetLabelsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelsUrl
}

// GetLabelsUrlOk returns a tuple with the LabelsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetLabelsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelsUrl, true
}

// SetLabelsUrl sets field value
func (o *PullRequestBaseRepo) SetLabelsUrl(v string) {
	o.LabelsUrl = v
}

// GetLanguagesUrl returns the LanguagesUrl field value
func (o *PullRequestBaseRepo) GetLanguagesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LanguagesUrl
}

// GetLanguagesUrlOk returns a tuple with the LanguagesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetLanguagesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LanguagesUrl, true
}

// SetLanguagesUrl sets field value
func (o *PullRequestBaseRepo) SetLanguagesUrl(v string) {
	o.LanguagesUrl = v
}

// GetMergesUrl returns the MergesUrl field value
func (o *PullRequestBaseRepo) GetMergesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MergesUrl
}

// GetMergesUrlOk returns a tuple with the MergesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetMergesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MergesUrl, true
}

// SetMergesUrl sets field value
func (o *PullRequestBaseRepo) SetMergesUrl(v string) {
	o.MergesUrl = v
}

// GetMilestonesUrl returns the MilestonesUrl field value
func (o *PullRequestBaseRepo) GetMilestonesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MilestonesUrl
}

// GetMilestonesUrlOk returns a tuple with the MilestonesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetMilestonesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MilestonesUrl, true
}

// SetMilestonesUrl sets field value
func (o *PullRequestBaseRepo) SetMilestonesUrl(v string) {
	o.MilestonesUrl = v
}

// GetName returns the Name field value
func (o *PullRequestBaseRepo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PullRequestBaseRepo) SetName(v string) {
	o.Name = v
}

// GetNotificationsUrl returns the NotificationsUrl field value
func (o *PullRequestBaseRepo) GetNotificationsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationsUrl
}

// GetNotificationsUrlOk returns a tuple with the NotificationsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetNotificationsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationsUrl, true
}

// SetNotificationsUrl sets field value
func (o *PullRequestBaseRepo) SetNotificationsUrl(v string) {
	o.NotificationsUrl = v
}

// GetOwner returns the Owner field value
func (o *PullRequestBaseRepo) GetOwner() PullRequestHeadRepoOwner {
	if o == nil {
		var ret PullRequestHeadRepoOwner
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetOwnerOk() (*PullRequestHeadRepoOwner, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *PullRequestBaseRepo) SetOwner(v PullRequestHeadRepoOwner) {
	o.Owner = v
}

// GetPrivate returns the Private field value
func (o *PullRequestBaseRepo) GetPrivate() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Private
}

// GetPrivateOk returns a tuple with the Private field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetPrivateOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Private, true
}

// SetPrivate sets field value
func (o *PullRequestBaseRepo) SetPrivate(v bool) {
	o.Private = v
}

// GetPullsUrl returns the PullsUrl field value
func (o *PullRequestBaseRepo) GetPullsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PullsUrl
}

// GetPullsUrlOk returns a tuple with the PullsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetPullsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PullsUrl, true
}

// SetPullsUrl sets field value
func (o *PullRequestBaseRepo) SetPullsUrl(v string) {
	o.PullsUrl = v
}

// GetReleasesUrl returns the ReleasesUrl field value
func (o *PullRequestBaseRepo) GetReleasesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReleasesUrl
}

// GetReleasesUrlOk returns a tuple with the ReleasesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetReleasesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReleasesUrl, true
}

// SetReleasesUrl sets field value
func (o *PullRequestBaseRepo) SetReleasesUrl(v string) {
	o.ReleasesUrl = v
}

// GetStargazersUrl returns the StargazersUrl field value
func (o *PullRequestBaseRepo) GetStargazersUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StargazersUrl
}

// GetStargazersUrlOk returns a tuple with the StargazersUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetStargazersUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StargazersUrl, true
}

// SetStargazersUrl sets field value
func (o *PullRequestBaseRepo) SetStargazersUrl(v string) {
	o.StargazersUrl = v
}

// GetStatusesUrl returns the StatusesUrl field value
func (o *PullRequestBaseRepo) GetStatusesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusesUrl
}

// GetStatusesUrlOk returns a tuple with the StatusesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetStatusesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusesUrl, true
}

// SetStatusesUrl sets field value
func (o *PullRequestBaseRepo) SetStatusesUrl(v string) {
	o.StatusesUrl = v
}

// GetSubscribersUrl returns the SubscribersUrl field value
func (o *PullRequestBaseRepo) GetSubscribersUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscribersUrl
}

// GetSubscribersUrlOk returns a tuple with the SubscribersUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetSubscribersUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscribersUrl, true
}

// SetSubscribersUrl sets field value
func (o *PullRequestBaseRepo) SetSubscribersUrl(v string) {
	o.SubscribersUrl = v
}

// GetSubscriptionUrl returns the SubscriptionUrl field value
func (o *PullRequestBaseRepo) GetSubscriptionUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionUrl
}

// GetSubscriptionUrlOk returns a tuple with the SubscriptionUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetSubscriptionUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionUrl, true
}

// SetSubscriptionUrl sets field value
func (o *PullRequestBaseRepo) SetSubscriptionUrl(v string) {
	o.SubscriptionUrl = v
}

// GetTagsUrl returns the TagsUrl field value
func (o *PullRequestBaseRepo) GetTagsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TagsUrl
}

// GetTagsUrlOk returns a tuple with the TagsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetTagsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagsUrl, true
}

// SetTagsUrl sets field value
func (o *PullRequestBaseRepo) SetTagsUrl(v string) {
	o.TagsUrl = v
}

// GetTeamsUrl returns the TeamsUrl field value
func (o *PullRequestBaseRepo) GetTeamsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TeamsUrl
}

// GetTeamsUrlOk returns a tuple with the TeamsUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetTeamsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TeamsUrl, true
}

// SetTeamsUrl sets field value
func (o *PullRequestBaseRepo) SetTeamsUrl(v string) {
	o.TeamsUrl = v
}

// GetTreesUrl returns the TreesUrl field value
func (o *PullRequestBaseRepo) GetTreesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TreesUrl
}

// GetTreesUrlOk returns a tuple with the TreesUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetTreesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TreesUrl, true
}

// SetTreesUrl sets field value
func (o *PullRequestBaseRepo) SetTreesUrl(v string) {
	o.TreesUrl = v
}

// GetUrl returns the Url field value
func (o *PullRequestBaseRepo) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PullRequestBaseRepo) SetUrl(v string) {
	o.Url = v
}

// GetCloneUrl returns the CloneUrl field value
func (o *PullRequestBaseRepo) GetCloneUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloneUrl
}

// GetCloneUrlOk returns a tuple with the CloneUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetCloneUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloneUrl, true
}

// SetCloneUrl sets field value
func (o *PullRequestBaseRepo) SetCloneUrl(v string) {
	o.CloneUrl = v
}

// GetDefaultBranch returns the DefaultBranch field value
func (o *PullRequestBaseRepo) GetDefaultBranch() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetDefaultBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultBranch, true
}

// SetDefaultBranch sets field value
func (o *PullRequestBaseRepo) SetDefaultBranch(v string) {
	o.DefaultBranch = v
}

// GetForks returns the Forks field value
func (o *PullRequestBaseRepo) GetForks() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Forks
}

// GetForksOk returns a tuple with the Forks field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetForksOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Forks, true
}

// SetForks sets field value
func (o *PullRequestBaseRepo) SetForks(v int32) {
	o.Forks = v
}

// GetForksCount returns the ForksCount field value
func (o *PullRequestBaseRepo) GetForksCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ForksCount
}

// GetForksCountOk returns a tuple with the ForksCount field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetForksCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForksCount, true
}

// SetForksCount sets field value
func (o *PullRequestBaseRepo) SetForksCount(v int32) {
	o.ForksCount = v
}

// GetGitUrl returns the GitUrl field value
func (o *PullRequestBaseRepo) GetGitUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GitUrl
}

// GetGitUrlOk returns a tuple with the GitUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetGitUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GitUrl, true
}

// SetGitUrl sets field value
func (o *PullRequestBaseRepo) SetGitUrl(v string) {
	o.GitUrl = v
}

// GetHasDownloads returns the HasDownloads field value
func (o *PullRequestBaseRepo) GetHasDownloads() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasDownloads
}

// GetHasDownloadsOk returns a tuple with the HasDownloads field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetHasDownloadsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasDownloads, true
}

// SetHasDownloads sets field value
func (o *PullRequestBaseRepo) SetHasDownloads(v bool) {
	o.HasDownloads = v
}

// GetHasIssues returns the HasIssues field value
func (o *PullRequestBaseRepo) GetHasIssues() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasIssues
}

// GetHasIssuesOk returns a tuple with the HasIssues field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetHasIssuesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasIssues, true
}

// SetHasIssues sets field value
func (o *PullRequestBaseRepo) SetHasIssues(v bool) {
	o.HasIssues = v
}

// GetHasProjects returns the HasProjects field value
func (o *PullRequestBaseRepo) GetHasProjects() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasProjects
}

// GetHasProjectsOk returns a tuple with the HasProjects field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetHasProjectsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasProjects, true
}

// SetHasProjects sets field value
func (o *PullRequestBaseRepo) SetHasProjects(v bool) {
	o.HasProjects = v
}

// GetHasWiki returns the HasWiki field value
func (o *PullRequestBaseRepo) GetHasWiki() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasWiki
}

// GetHasWikiOk returns a tuple with the HasWiki field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetHasWikiOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasWiki, true
}

// SetHasWiki sets field value
func (o *PullRequestBaseRepo) SetHasWiki(v bool) {
	o.HasWiki = v
}

// GetHasPages returns the HasPages field value
func (o *PullRequestBaseRepo) GetHasPages() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.HasPages
}

// GetHasPagesOk returns a tuple with the HasPages field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetHasPagesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HasPages, true
}

// SetHasPages sets field value
func (o *PullRequestBaseRepo) SetHasPages(v bool) {
	o.HasPages = v
}

// GetHomepage returns the Homepage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PullRequestBaseRepo) GetHomepage() string {
	if o == nil || o.Homepage.Get() == nil {
		var ret string
		return ret
	}

	return *o.Homepage.Get()
}

// GetHomepageOk returns a tuple with the Homepage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PullRequestBaseRepo) GetHomepageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Homepage.Get(), o.Homepage.IsSet()
}

// SetHomepage sets field value
func (o *PullRequestBaseRepo) SetHomepage(v string) {
	o.Homepage.Set(&v)
}

// GetLanguage returns the Language field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PullRequestBaseRepo) GetLanguage() string {
	if o == nil || o.Language.Get() == nil {
		var ret string
		return ret
	}

	return *o.Language.Get()
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PullRequestBaseRepo) GetLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Language.Get(), o.Language.IsSet()
}

// SetLanguage sets field value
func (o *PullRequestBaseRepo) SetLanguage(v string) {
	o.Language.Set(&v)
}

// GetMasterBranch returns the MasterBranch field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetMasterBranch() string {
	if o == nil || o.MasterBranch == nil {
		var ret string
		return ret
	}
	return *o.MasterBranch
}

// GetMasterBranchOk returns a tuple with the MasterBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetMasterBranchOk() (*string, bool) {
	if o == nil || o.MasterBranch == nil {
		return nil, false
	}
	return o.MasterBranch, true
}

// HasMasterBranch returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasMasterBranch() bool {
	if o != nil && o.MasterBranch != nil {
		return true
	}

	return false
}

// SetMasterBranch gets a reference to the given string and assigns it to the MasterBranch field.
func (o *PullRequestBaseRepo) SetMasterBranch(v string) {
	o.MasterBranch = &v
}

// GetArchived returns the Archived field value
func (o *PullRequestBaseRepo) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *PullRequestBaseRepo) SetArchived(v bool) {
	o.Archived = v
}

// GetDisabled returns the Disabled field value
func (o *PullRequestBaseRepo) GetDisabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetDisabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Disabled, true
}

// SetDisabled sets field value
func (o *PullRequestBaseRepo) SetDisabled(v bool) {
	o.Disabled = v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *PullRequestBaseRepo) SetVisibility(v string) {
	o.Visibility = &v
}

// GetMirrorUrl returns the MirrorUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *PullRequestBaseRepo) GetMirrorUrl() string {
	if o == nil || o.MirrorUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.MirrorUrl.Get()
}

// GetMirrorUrlOk returns a tuple with the MirrorUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PullRequestBaseRepo) GetMirrorUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MirrorUrl.Get(), o.MirrorUrl.IsSet()
}

// SetMirrorUrl sets field value
func (o *PullRequestBaseRepo) SetMirrorUrl(v string) {
	o.MirrorUrl.Set(&v)
}

// GetOpenIssues returns the OpenIssues field value
func (o *PullRequestBaseRepo) GetOpenIssues() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OpenIssues
}

// GetOpenIssuesOk returns a tuple with the OpenIssues field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetOpenIssuesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenIssues, true
}

// SetOpenIssues sets field value
func (o *PullRequestBaseRepo) SetOpenIssues(v int32) {
	o.OpenIssues = v
}

// GetOpenIssuesCount returns the OpenIssuesCount field value
func (o *PullRequestBaseRepo) GetOpenIssuesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OpenIssuesCount
}

// GetOpenIssuesCountOk returns a tuple with the OpenIssuesCount field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetOpenIssuesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenIssuesCount, true
}

// SetOpenIssuesCount sets field value
func (o *PullRequestBaseRepo) SetOpenIssuesCount(v int32) {
	o.OpenIssuesCount = v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetPermissions() FullRepositoryPermissions {
	if o == nil || o.Permissions == nil {
		var ret FullRepositoryPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetPermissionsOk() (*FullRepositoryPermissions, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given FullRepositoryPermissions and assigns it to the Permissions field.
func (o *PullRequestBaseRepo) SetPermissions(v FullRepositoryPermissions) {
	o.Permissions = &v
}

// GetTempCloneToken returns the TempCloneToken field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetTempCloneToken() string {
	if o == nil || o.TempCloneToken == nil {
		var ret string
		return ret
	}
	return *o.TempCloneToken
}

// GetTempCloneTokenOk returns a tuple with the TempCloneToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetTempCloneTokenOk() (*string, bool) {
	if o == nil || o.TempCloneToken == nil {
		return nil, false
	}
	return o.TempCloneToken, true
}

// HasTempCloneToken returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasTempCloneToken() bool {
	if o != nil && o.TempCloneToken != nil {
		return true
	}

	return false
}

// SetTempCloneToken gets a reference to the given string and assigns it to the TempCloneToken field.
func (o *PullRequestBaseRepo) SetTempCloneToken(v string) {
	o.TempCloneToken = &v
}

// GetAllowMergeCommit returns the AllowMergeCommit field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetAllowMergeCommit() bool {
	if o == nil || o.AllowMergeCommit == nil {
		var ret bool
		return ret
	}
	return *o.AllowMergeCommit
}

// GetAllowMergeCommitOk returns a tuple with the AllowMergeCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetAllowMergeCommitOk() (*bool, bool) {
	if o == nil || o.AllowMergeCommit == nil {
		return nil, false
	}
	return o.AllowMergeCommit, true
}

// HasAllowMergeCommit returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasAllowMergeCommit() bool {
	if o != nil && o.AllowMergeCommit != nil {
		return true
	}

	return false
}

// SetAllowMergeCommit gets a reference to the given bool and assigns it to the AllowMergeCommit field.
func (o *PullRequestBaseRepo) SetAllowMergeCommit(v bool) {
	o.AllowMergeCommit = &v
}

// GetAllowSquashMerge returns the AllowSquashMerge field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetAllowSquashMerge() bool {
	if o == nil || o.AllowSquashMerge == nil {
		var ret bool
		return ret
	}
	return *o.AllowSquashMerge
}

// GetAllowSquashMergeOk returns a tuple with the AllowSquashMerge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetAllowSquashMergeOk() (*bool, bool) {
	if o == nil || o.AllowSquashMerge == nil {
		return nil, false
	}
	return o.AllowSquashMerge, true
}

// HasAllowSquashMerge returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasAllowSquashMerge() bool {
	if o != nil && o.AllowSquashMerge != nil {
		return true
	}

	return false
}

// SetAllowSquashMerge gets a reference to the given bool and assigns it to the AllowSquashMerge field.
func (o *PullRequestBaseRepo) SetAllowSquashMerge(v bool) {
	o.AllowSquashMerge = &v
}

// GetAllowRebaseMerge returns the AllowRebaseMerge field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetAllowRebaseMerge() bool {
	if o == nil || o.AllowRebaseMerge == nil {
		var ret bool
		return ret
	}
	return *o.AllowRebaseMerge
}

// GetAllowRebaseMergeOk returns a tuple with the AllowRebaseMerge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetAllowRebaseMergeOk() (*bool, bool) {
	if o == nil || o.AllowRebaseMerge == nil {
		return nil, false
	}
	return o.AllowRebaseMerge, true
}

// HasAllowRebaseMerge returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasAllowRebaseMerge() bool {
	if o != nil && o.AllowRebaseMerge != nil {
		return true
	}

	return false
}

// SetAllowRebaseMerge gets a reference to the given bool and assigns it to the AllowRebaseMerge field.
func (o *PullRequestBaseRepo) SetAllowRebaseMerge(v bool) {
	o.AllowRebaseMerge = &v
}

// GetLicense returns the License field value
// If the value is explicit nil, the zero value for NullableLicenseSimple will be returned
func (o *PullRequestBaseRepo) GetLicense() NullableLicenseSimple {
	if o == nil || o.License.Get() == nil {
		var ret NullableLicenseSimple
		return ret
	}

	return *o.License.Get()
}

// GetLicenseOk returns a tuple with the License field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PullRequestBaseRepo) GetLicenseOk() (*NullableLicenseSimple, bool) {
	if o == nil {
		return nil, false
	}
	return o.License.Get(), o.License.IsSet()
}

// SetLicense sets field value
func (o *PullRequestBaseRepo) SetLicense(v NullableLicenseSimple) {
	o.License.Set(&v)
}

// GetPushedAt returns the PushedAt field value
func (o *PullRequestBaseRepo) GetPushedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.PushedAt
}

// GetPushedAtOk returns a tuple with the PushedAt field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetPushedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PushedAt, true
}

// SetPushedAt sets field value
func (o *PullRequestBaseRepo) SetPushedAt(v time.Time) {
	o.PushedAt = v
}

// GetSize returns the Size field value
func (o *PullRequestBaseRepo) GetSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Size
}

// GetSizeOk returns a tuple with the Size field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Size, true
}

// SetSize sets field value
func (o *PullRequestBaseRepo) SetSize(v int32) {
	o.Size = v
}

// GetSshUrl returns the SshUrl field value
func (o *PullRequestBaseRepo) GetSshUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SshUrl
}

// GetSshUrlOk returns a tuple with the SshUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetSshUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SshUrl, true
}

// SetSshUrl sets field value
func (o *PullRequestBaseRepo) SetSshUrl(v string) {
	o.SshUrl = v
}

// GetStargazersCount returns the StargazersCount field value
func (o *PullRequestBaseRepo) GetStargazersCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StargazersCount
}

// GetStargazersCountOk returns a tuple with the StargazersCount field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetStargazersCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StargazersCount, true
}

// SetStargazersCount sets field value
func (o *PullRequestBaseRepo) SetStargazersCount(v int32) {
	o.StargazersCount = v
}

// GetSvnUrl returns the SvnUrl field value
func (o *PullRequestBaseRepo) GetSvnUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SvnUrl
}

// GetSvnUrlOk returns a tuple with the SvnUrl field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetSvnUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SvnUrl, true
}

// SetSvnUrl sets field value
func (o *PullRequestBaseRepo) SetSvnUrl(v string) {
	o.SvnUrl = v
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetTopics() []string {
	if o == nil || o.Topics == nil {
		var ret []string
		return ret
	}
	return o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetTopicsOk() ([]string, bool) {
	if o == nil || o.Topics == nil {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasTopics() bool {
	if o != nil && o.Topics != nil {
		return true
	}

	return false
}

// SetTopics gets a reference to the given []string and assigns it to the Topics field.
func (o *PullRequestBaseRepo) SetTopics(v []string) {
	o.Topics = v
}

// GetWatchers returns the Watchers field value
func (o *PullRequestBaseRepo) GetWatchers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Watchers
}

// GetWatchersOk returns a tuple with the Watchers field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetWatchersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Watchers, true
}

// SetWatchers sets field value
func (o *PullRequestBaseRepo) SetWatchers(v int32) {
	o.Watchers = v
}

// GetWatchersCount returns the WatchersCount field value
func (o *PullRequestBaseRepo) GetWatchersCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.WatchersCount
}

// GetWatchersCountOk returns a tuple with the WatchersCount field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetWatchersCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WatchersCount, true
}

// SetWatchersCount sets field value
func (o *PullRequestBaseRepo) SetWatchersCount(v int32) {
	o.WatchersCount = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *PullRequestBaseRepo) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *PullRequestBaseRepo) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *PullRequestBaseRepo) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *PullRequestBaseRepo) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetAllowForking returns the AllowForking field value if set, zero value otherwise.
func (o *PullRequestBaseRepo) GetAllowForking() bool {
	if o == nil || o.AllowForking == nil {
		var ret bool
		return ret
	}
	return *o.AllowForking
}

// GetAllowForkingOk returns a tuple with the AllowForking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullRequestBaseRepo) GetAllowForkingOk() (*bool, bool) {
	if o == nil || o.AllowForking == nil {
		return nil, false
	}
	return o.AllowForking, true
}

// HasAllowForking returns a boolean if a field has been set.
func (o *PullRequestBaseRepo) HasAllowForking() bool {
	if o != nil && o.AllowForking != nil {
		return true
	}

	return false
}

// SetAllowForking gets a reference to the given bool and assigns it to the AllowForking field.
func (o *PullRequestBaseRepo) SetAllowForking(v bool) {
	o.AllowForking = &v
}

func (o PullRequestBaseRepo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["archive_url"] = o.ArchiveUrl
	}
	if true {
		toSerialize["assignees_url"] = o.AssigneesUrl
	}
	if true {
		toSerialize["blobs_url"] = o.BlobsUrl
	}
	if true {
		toSerialize["branches_url"] = o.BranchesUrl
	}
	if true {
		toSerialize["collaborators_url"] = o.CollaboratorsUrl
	}
	if true {
		toSerialize["comments_url"] = o.CommentsUrl
	}
	if true {
		toSerialize["commits_url"] = o.CommitsUrl
	}
	if true {
		toSerialize["compare_url"] = o.CompareUrl
	}
	if true {
		toSerialize["contents_url"] = o.ContentsUrl
	}
	if true {
		toSerialize["contributors_url"] = o.ContributorsUrl
	}
	if true {
		toSerialize["deployments_url"] = o.DeploymentsUrl
	}
	if true {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["downloads_url"] = o.DownloadsUrl
	}
	if true {
		toSerialize["events_url"] = o.EventsUrl
	}
	if true {
		toSerialize["fork"] = o.Fork
	}
	if true {
		toSerialize["forks_url"] = o.ForksUrl
	}
	if true {
		toSerialize["full_name"] = o.FullName
	}
	if true {
		toSerialize["git_commits_url"] = o.GitCommitsUrl
	}
	if true {
		toSerialize["git_refs_url"] = o.GitRefsUrl
	}
	if true {
		toSerialize["git_tags_url"] = o.GitTagsUrl
	}
	if true {
		toSerialize["hooks_url"] = o.HooksUrl
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.IsTemplate != nil {
		toSerialize["is_template"] = o.IsTemplate
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["issue_comment_url"] = o.IssueCommentUrl
	}
	if true {
		toSerialize["issue_events_url"] = o.IssueEventsUrl
	}
	if true {
		toSerialize["issues_url"] = o.IssuesUrl
	}
	if true {
		toSerialize["keys_url"] = o.KeysUrl
	}
	if true {
		toSerialize["labels_url"] = o.LabelsUrl
	}
	if true {
		toSerialize["languages_url"] = o.LanguagesUrl
	}
	if true {
		toSerialize["merges_url"] = o.MergesUrl
	}
	if true {
		toSerialize["milestones_url"] = o.MilestonesUrl
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["notifications_url"] = o.NotificationsUrl
	}
	if true {
		toSerialize["owner"] = o.Owner
	}
	if true {
		toSerialize["private"] = o.Private
	}
	if true {
		toSerialize["pulls_url"] = o.PullsUrl
	}
	if true {
		toSerialize["releases_url"] = o.ReleasesUrl
	}
	if true {
		toSerialize["stargazers_url"] = o.StargazersUrl
	}
	if true {
		toSerialize["statuses_url"] = o.StatusesUrl
	}
	if true {
		toSerialize["subscribers_url"] = o.SubscribersUrl
	}
	if true {
		toSerialize["subscription_url"] = o.SubscriptionUrl
	}
	if true {
		toSerialize["tags_url"] = o.TagsUrl
	}
	if true {
		toSerialize["teams_url"] = o.TeamsUrl
	}
	if true {
		toSerialize["trees_url"] = o.TreesUrl
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["clone_url"] = o.CloneUrl
	}
	if true {
		toSerialize["default_branch"] = o.DefaultBranch
	}
	if true {
		toSerialize["forks"] = o.Forks
	}
	if true {
		toSerialize["forks_count"] = o.ForksCount
	}
	if true {
		toSerialize["git_url"] = o.GitUrl
	}
	if true {
		toSerialize["has_downloads"] = o.HasDownloads
	}
	if true {
		toSerialize["has_issues"] = o.HasIssues
	}
	if true {
		toSerialize["has_projects"] = o.HasProjects
	}
	if true {
		toSerialize["has_wiki"] = o.HasWiki
	}
	if true {
		toSerialize["has_pages"] = o.HasPages
	}
	if true {
		toSerialize["homepage"] = o.Homepage.Get()
	}
	if true {
		toSerialize["language"] = o.Language.Get()
	}
	if o.MasterBranch != nil {
		toSerialize["master_branch"] = o.MasterBranch
	}
	if true {
		toSerialize["archived"] = o.Archived
	}
	if true {
		toSerialize["disabled"] = o.Disabled
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if true {
		toSerialize["mirror_url"] = o.MirrorUrl.Get()
	}
	if true {
		toSerialize["open_issues"] = o.OpenIssues
	}
	if true {
		toSerialize["open_issues_count"] = o.OpenIssuesCount
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.TempCloneToken != nil {
		toSerialize["temp_clone_token"] = o.TempCloneToken
	}
	if o.AllowMergeCommit != nil {
		toSerialize["allow_merge_commit"] = o.AllowMergeCommit
	}
	if o.AllowSquashMerge != nil {
		toSerialize["allow_squash_merge"] = o.AllowSquashMerge
	}
	if o.AllowRebaseMerge != nil {
		toSerialize["allow_rebase_merge"] = o.AllowRebaseMerge
	}
	if true {
		toSerialize["license"] = o.License.Get()
	}
	if true {
		toSerialize["pushed_at"] = o.PushedAt
	}
	if true {
		toSerialize["size"] = o.Size
	}
	if true {
		toSerialize["ssh_url"] = o.SshUrl
	}
	if true {
		toSerialize["stargazers_count"] = o.StargazersCount
	}
	if true {
		toSerialize["svn_url"] = o.SvnUrl
	}
	if o.Topics != nil {
		toSerialize["topics"] = o.Topics
	}
	if true {
		toSerialize["watchers"] = o.Watchers
	}
	if true {
		toSerialize["watchers_count"] = o.WatchersCount
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.AllowForking != nil {
		toSerialize["allow_forking"] = o.AllowForking
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestBaseRepo struct {
	value *PullRequestBaseRepo
	isSet bool
}

func (v NullablePullRequestBaseRepo) Get() *PullRequestBaseRepo {
	return v.value
}

func (v *NullablePullRequestBaseRepo) Set(val *PullRequestBaseRepo) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestBaseRepo) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestBaseRepo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestBaseRepo(val *PullRequestBaseRepo) *NullablePullRequestBaseRepo {
	return &NullablePullRequestBaseRepo{value: val, isSet: true}
}

func (v NullablePullRequestBaseRepo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestBaseRepo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


