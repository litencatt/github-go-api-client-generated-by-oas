/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// TeamProject A team's access to a project.
type TeamProject struct {
	OwnerUrl string `json:"owner_url"`
	Url string `json:"url"`
	HtmlUrl string `json:"html_url"`
	ColumnsUrl string `json:"columns_url"`
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	Name string `json:"name"`
	Body NullableString `json:"body"`
	Number int32 `json:"number"`
	State string `json:"state"`
	Creator SimpleUser `json:"creator"`
	CreatedAt string `json:"created_at"`
	UpdatedAt string `json:"updated_at"`
	// The organization permission for this project. Only present when owner is an organization.
	OrganizationPermission *string `json:"organization_permission,omitempty"`
	// Whether the project is private or not. Only present when owner is an organization.
	Private *bool `json:"private,omitempty"`
	Permissions TeamProjectPermissions `json:"permissions"`
}

// NewTeamProject instantiates a new TeamProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamProject(ownerUrl string, url string, htmlUrl string, columnsUrl string, id int32, nodeId string, name string, body NullableString, number int32, state string, creator SimpleUser, createdAt string, updatedAt string, permissions TeamProjectPermissions) *TeamProject {
	this := TeamProject{}
	this.OwnerUrl = ownerUrl
	this.Url = url
	this.HtmlUrl = htmlUrl
	this.ColumnsUrl = columnsUrl
	this.Id = id
	this.NodeId = nodeId
	this.Name = name
	this.Body = body
	this.Number = number
	this.State = state
	this.Creator = creator
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Permissions = permissions
	return &this
}

// NewTeamProjectWithDefaults instantiates a new TeamProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamProjectWithDefaults() *TeamProject {
	this := TeamProject{}
	return &this
}

// GetOwnerUrl returns the OwnerUrl field value
func (o *TeamProject) GetOwnerUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnerUrl
}

// GetOwnerUrlOk returns a tuple with the OwnerUrl field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetOwnerUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerUrl, true
}

// SetOwnerUrl sets field value
func (o *TeamProject) SetOwnerUrl(v string) {
	o.OwnerUrl = v
}

// GetUrl returns the Url field value
func (o *TeamProject) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *TeamProject) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *TeamProject) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *TeamProject) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetColumnsUrl returns the ColumnsUrl field value
func (o *TeamProject) GetColumnsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ColumnsUrl
}

// GetColumnsUrlOk returns a tuple with the ColumnsUrl field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetColumnsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ColumnsUrl, true
}

// SetColumnsUrl sets field value
func (o *TeamProject) SetColumnsUrl(v string) {
	o.ColumnsUrl = v
}

// GetId returns the Id field value
func (o *TeamProject) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TeamProject) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *TeamProject) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *TeamProject) SetNodeId(v string) {
	o.NodeId = v
}

// GetName returns the Name field value
func (o *TeamProject) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *TeamProject) SetName(v string) {
	o.Name = v
}

// GetBody returns the Body field value
// If the value is explicit nil, the zero value for string will be returned
func (o *TeamProject) GetBody() string {
	if o == nil || o.Body.Get() == nil {
		var ret string
		return ret
	}

	return *o.Body.Get()
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TeamProject) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Body.Get(), o.Body.IsSet()
}

// SetBody sets field value
func (o *TeamProject) SetBody(v string) {
	o.Body.Set(&v)
}

// GetNumber returns the Number field value
func (o *TeamProject) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *TeamProject) SetNumber(v int32) {
	o.Number = v
}

// GetState returns the State field value
func (o *TeamProject) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *TeamProject) SetState(v string) {
	o.State = v
}

// GetCreator returns the Creator field value
func (o *TeamProject) GetCreator() SimpleUser {
	if o == nil {
		var ret SimpleUser
		return ret
	}

	return o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetCreatorOk() (*SimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Creator, true
}

// SetCreator sets field value
func (o *TeamProject) SetCreator(v SimpleUser) {
	o.Creator = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *TeamProject) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *TeamProject) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *TeamProject) GetUpdatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetUpdatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *TeamProject) SetUpdatedAt(v string) {
	o.UpdatedAt = v
}

// GetOrganizationPermission returns the OrganizationPermission field value if set, zero value otherwise.
func (o *TeamProject) GetOrganizationPermission() string {
	if o == nil || o.OrganizationPermission == nil {
		var ret string
		return ret
	}
	return *o.OrganizationPermission
}

// GetOrganizationPermissionOk returns a tuple with the OrganizationPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamProject) GetOrganizationPermissionOk() (*string, bool) {
	if o == nil || o.OrganizationPermission == nil {
		return nil, false
	}
	return o.OrganizationPermission, true
}

// HasOrganizationPermission returns a boolean if a field has been set.
func (o *TeamProject) HasOrganizationPermission() bool {
	if o != nil && o.OrganizationPermission != nil {
		return true
	}

	return false
}

// SetOrganizationPermission gets a reference to the given string and assigns it to the OrganizationPermission field.
func (o *TeamProject) SetOrganizationPermission(v string) {
	o.OrganizationPermission = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *TeamProject) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TeamProject) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *TeamProject) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *TeamProject) SetPrivate(v bool) {
	o.Private = &v
}

// GetPermissions returns the Permissions field value
func (o *TeamProject) GetPermissions() TeamProjectPermissions {
	if o == nil {
		var ret TeamProjectPermissions
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *TeamProject) GetPermissionsOk() (*TeamProjectPermissions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *TeamProject) SetPermissions(v TeamProjectPermissions) {
	o.Permissions = v
}

func (o TeamProject) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["owner_url"] = o.OwnerUrl
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["columns_url"] = o.ColumnsUrl
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["body"] = o.Body.Get()
	}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["creator"] = o.Creator
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.OrganizationPermission != nil {
		toSerialize["organization_permission"] = o.OrganizationPermission
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableTeamProject struct {
	value *TeamProject
	isSet bool
}

func (v NullableTeamProject) Get() *TeamProject {
	return v.value
}

func (v *NullableTeamProject) Set(val *TeamProject) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamProject) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamProject(val *TeamProject) *NullableTeamProject {
	return &NullableTeamProject{value: val, isSet: true}
}

func (v NullableTeamProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


