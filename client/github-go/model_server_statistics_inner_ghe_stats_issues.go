/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ServerStatisticsInnerGheStatsIssues struct for ServerStatisticsInnerGheStatsIssues
type ServerStatisticsInnerGheStatsIssues struct {
	TotalIssues *int32 `json:"total_issues,omitempty"`
	OpenIssues *int32 `json:"open_issues,omitempty"`
	ClosedIssues *int32 `json:"closed_issues,omitempty"`
}

// NewServerStatisticsInnerGheStatsIssues instantiates a new ServerStatisticsInnerGheStatsIssues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerStatisticsInnerGheStatsIssues() *ServerStatisticsInnerGheStatsIssues {
	this := ServerStatisticsInnerGheStatsIssues{}
	return &this
}

// NewServerStatisticsInnerGheStatsIssuesWithDefaults instantiates a new ServerStatisticsInnerGheStatsIssues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerStatisticsInnerGheStatsIssuesWithDefaults() *ServerStatisticsInnerGheStatsIssues {
	this := ServerStatisticsInnerGheStatsIssues{}
	return &this
}

// GetTotalIssues returns the TotalIssues field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsIssues) GetTotalIssues() int32 {
	if o == nil || o.TotalIssues == nil {
		var ret int32
		return ret
	}
	return *o.TotalIssues
}

// GetTotalIssuesOk returns a tuple with the TotalIssues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsIssues) GetTotalIssuesOk() (*int32, bool) {
	if o == nil || o.TotalIssues == nil {
		return nil, false
	}
	return o.TotalIssues, true
}

// HasTotalIssues returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsIssues) HasTotalIssues() bool {
	if o != nil && o.TotalIssues != nil {
		return true
	}

	return false
}

// SetTotalIssues gets a reference to the given int32 and assigns it to the TotalIssues field.
func (o *ServerStatisticsInnerGheStatsIssues) SetTotalIssues(v int32) {
	o.TotalIssues = &v
}

// GetOpenIssues returns the OpenIssues field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsIssues) GetOpenIssues() int32 {
	if o == nil || o.OpenIssues == nil {
		var ret int32
		return ret
	}
	return *o.OpenIssues
}

// GetOpenIssuesOk returns a tuple with the OpenIssues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsIssues) GetOpenIssuesOk() (*int32, bool) {
	if o == nil || o.OpenIssues == nil {
		return nil, false
	}
	return o.OpenIssues, true
}

// HasOpenIssues returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsIssues) HasOpenIssues() bool {
	if o != nil && o.OpenIssues != nil {
		return true
	}

	return false
}

// SetOpenIssues gets a reference to the given int32 and assigns it to the OpenIssues field.
func (o *ServerStatisticsInnerGheStatsIssues) SetOpenIssues(v int32) {
	o.OpenIssues = &v
}

// GetClosedIssues returns the ClosedIssues field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsIssues) GetClosedIssues() int32 {
	if o == nil || o.ClosedIssues == nil {
		var ret int32
		return ret
	}
	return *o.ClosedIssues
}

// GetClosedIssuesOk returns a tuple with the ClosedIssues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsIssues) GetClosedIssuesOk() (*int32, bool) {
	if o == nil || o.ClosedIssues == nil {
		return nil, false
	}
	return o.ClosedIssues, true
}

// HasClosedIssues returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsIssues) HasClosedIssues() bool {
	if o != nil && o.ClosedIssues != nil {
		return true
	}

	return false
}

// SetClosedIssues gets a reference to the given int32 and assigns it to the ClosedIssues field.
func (o *ServerStatisticsInnerGheStatsIssues) SetClosedIssues(v int32) {
	o.ClosedIssues = &v
}

func (o ServerStatisticsInnerGheStatsIssues) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalIssues != nil {
		toSerialize["total_issues"] = o.TotalIssues
	}
	if o.OpenIssues != nil {
		toSerialize["open_issues"] = o.OpenIssues
	}
	if o.ClosedIssues != nil {
		toSerialize["closed_issues"] = o.ClosedIssues
	}
	return json.Marshal(toSerialize)
}

type NullableServerStatisticsInnerGheStatsIssues struct {
	value *ServerStatisticsInnerGheStatsIssues
	isSet bool
}

func (v NullableServerStatisticsInnerGheStatsIssues) Get() *ServerStatisticsInnerGheStatsIssues {
	return v.value
}

func (v *NullableServerStatisticsInnerGheStatsIssues) Set(val *ServerStatisticsInnerGheStatsIssues) {
	v.value = val
	v.isSet = true
}

func (v NullableServerStatisticsInnerGheStatsIssues) IsSet() bool {
	return v.isSet
}

func (v *NullableServerStatisticsInnerGheStatsIssues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerStatisticsInnerGheStatsIssues(val *ServerStatisticsInnerGheStatsIssues) *NullableServerStatisticsInnerGheStatsIssues {
	return &NullableServerStatisticsInnerGheStatsIssues{value: val, isSet: true}
}

func (v NullableServerStatisticsInnerGheStatsIssues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerStatisticsInnerGheStatsIssues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


