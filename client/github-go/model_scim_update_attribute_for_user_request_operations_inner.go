/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ScimUpdateAttributeForUserRequestOperationsInner struct for ScimUpdateAttributeForUserRequestOperationsInner
type ScimUpdateAttributeForUserRequestOperationsInner struct {
	Op string `json:"op"`
	Path *string `json:"path,omitempty"`
	Value *ScimUpdateAttributeForUserRequestOperationsInnerValue `json:"value,omitempty"`
}

// NewScimUpdateAttributeForUserRequestOperationsInner instantiates a new ScimUpdateAttributeForUserRequestOperationsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimUpdateAttributeForUserRequestOperationsInner(op string) *ScimUpdateAttributeForUserRequestOperationsInner {
	this := ScimUpdateAttributeForUserRequestOperationsInner{}
	this.Op = op
	return &this
}

// NewScimUpdateAttributeForUserRequestOperationsInnerWithDefaults instantiates a new ScimUpdateAttributeForUserRequestOperationsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimUpdateAttributeForUserRequestOperationsInnerWithDefaults() *ScimUpdateAttributeForUserRequestOperationsInner {
	this := ScimUpdateAttributeForUserRequestOperationsInner{}
	return &this
}

// GetOp returns the Op field value
func (o *ScimUpdateAttributeForUserRequestOperationsInner) GetOp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Op
}

// GetOpOk returns a tuple with the Op field value
// and a boolean to check if the value has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) GetOpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Op, true
}

// SetOp sets field value
func (o *ScimUpdateAttributeForUserRequestOperationsInner) SetOp(v string) {
	o.Op = v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) SetPath(v string) {
	o.Path = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) GetValue() ScimUpdateAttributeForUserRequestOperationsInnerValue {
	if o == nil || o.Value == nil {
		var ret ScimUpdateAttributeForUserRequestOperationsInnerValue
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) GetValueOk() (*ScimUpdateAttributeForUserRequestOperationsInnerValue, bool) {
	if o == nil || o.Value == nil {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) HasValue() bool {
	if o != nil && o.Value != nil {
		return true
	}

	return false
}

// SetValue gets a reference to the given ScimUpdateAttributeForUserRequestOperationsInnerValue and assigns it to the Value field.
func (o *ScimUpdateAttributeForUserRequestOperationsInner) SetValue(v ScimUpdateAttributeForUserRequestOperationsInnerValue) {
	o.Value = &v
}

func (o ScimUpdateAttributeForUserRequestOperationsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["op"] = o.Op
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.Value != nil {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableScimUpdateAttributeForUserRequestOperationsInner struct {
	value *ScimUpdateAttributeForUserRequestOperationsInner
	isSet bool
}

func (v NullableScimUpdateAttributeForUserRequestOperationsInner) Get() *ScimUpdateAttributeForUserRequestOperationsInner {
	return v.value
}

func (v *NullableScimUpdateAttributeForUserRequestOperationsInner) Set(val *ScimUpdateAttributeForUserRequestOperationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableScimUpdateAttributeForUserRequestOperationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableScimUpdateAttributeForUserRequestOperationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimUpdateAttributeForUserRequestOperationsInner(val *ScimUpdateAttributeForUserRequestOperationsInner) *NullableScimUpdateAttributeForUserRequestOperationsInner {
	return &NullableScimUpdateAttributeForUserRequestOperationsInner{value: val, isSet: true}
}

func (v NullableScimUpdateAttributeForUserRequestOperationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimUpdateAttributeForUserRequestOperationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


