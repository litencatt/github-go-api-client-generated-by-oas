/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// IssueSearchResultItem Issue Search Result Item
type IssueSearchResultItem struct {
	Url string `json:"url"`
	RepositoryUrl string `json:"repository_url"`
	LabelsUrl string `json:"labels_url"`
	CommentsUrl string `json:"comments_url"`
	EventsUrl string `json:"events_url"`
	HtmlUrl string `json:"html_url"`
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	Number int32 `json:"number"`
	Title string `json:"title"`
	Locked bool `json:"locked"`
	ActiveLockReason NullableString `json:"active_lock_reason,omitempty"`
	Assignees []SimpleUser `json:"assignees,omitempty"`
	User NullableNullableSimpleUser `json:"user"`
	Labels []IssueSearchResultItemLabelsInner `json:"labels"`
	State string `json:"state"`
	StateReason NullableString `json:"state_reason,omitempty"`
	Assignee NullableNullableSimpleUser `json:"assignee"`
	Milestone NullableNullableMilestone `json:"milestone"`
	Comments int32 `json:"comments"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	ClosedAt NullableTime `json:"closed_at"`
	TextMatches []SearchResultTextMatchesInner `json:"text_matches,omitempty"`
	PullRequest *IssuePullRequest `json:"pull_request,omitempty"`
	Body *string `json:"body,omitempty"`
	Score float32 `json:"score"`
	AuthorAssociation AuthorAssociation `json:"author_association"`
	Draft *bool `json:"draft,omitempty"`
	Repository *Repository `json:"repository,omitempty"`
	BodyHtml *string `json:"body_html,omitempty"`
	BodyText *string `json:"body_text,omitempty"`
	TimelineUrl *string `json:"timeline_url,omitempty"`
	PerformedViaGithubApp NullableNullableIntegration `json:"performed_via_github_app,omitempty"`
	Reactions *ReactionRollup `json:"reactions,omitempty"`
}

// NewIssueSearchResultItem instantiates a new IssueSearchResultItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIssueSearchResultItem(url string, repositoryUrl string, labelsUrl string, commentsUrl string, eventsUrl string, htmlUrl string, id int32, nodeId string, number int32, title string, locked bool, user NullableNullableSimpleUser, labels []IssueSearchResultItemLabelsInner, state string, assignee NullableNullableSimpleUser, milestone NullableNullableMilestone, comments int32, createdAt time.Time, updatedAt time.Time, closedAt NullableTime, score float32, authorAssociation AuthorAssociation) *IssueSearchResultItem {
	this := IssueSearchResultItem{}
	this.Url = url
	this.RepositoryUrl = repositoryUrl
	this.LabelsUrl = labelsUrl
	this.CommentsUrl = commentsUrl
	this.EventsUrl = eventsUrl
	this.HtmlUrl = htmlUrl
	this.Id = id
	this.NodeId = nodeId
	this.Number = number
	this.Title = title
	this.Locked = locked
	this.User = user
	this.Labels = labels
	this.State = state
	this.Assignee = assignee
	this.Milestone = milestone
	this.Comments = comments
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.ClosedAt = closedAt
	this.Score = score
	this.AuthorAssociation = authorAssociation
	return &this
}

// NewIssueSearchResultItemWithDefaults instantiates a new IssueSearchResultItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIssueSearchResultItemWithDefaults() *IssueSearchResultItem {
	this := IssueSearchResultItem{}
	return &this
}

// GetUrl returns the Url field value
func (o *IssueSearchResultItem) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *IssueSearchResultItem) SetUrl(v string) {
	o.Url = v
}

// GetRepositoryUrl returns the RepositoryUrl field value
func (o *IssueSearchResultItem) GetRepositoryUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositoryUrl
}

// GetRepositoryUrlOk returns a tuple with the RepositoryUrl field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetRepositoryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositoryUrl, true
}

// SetRepositoryUrl sets field value
func (o *IssueSearchResultItem) SetRepositoryUrl(v string) {
	o.RepositoryUrl = v
}

// GetLabelsUrl returns the LabelsUrl field value
func (o *IssueSearchResultItem) GetLabelsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelsUrl
}

// GetLabelsUrlOk returns a tuple with the LabelsUrl field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetLabelsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelsUrl, true
}

// SetLabelsUrl sets field value
func (o *IssueSearchResultItem) SetLabelsUrl(v string) {
	o.LabelsUrl = v
}

// GetCommentsUrl returns the CommentsUrl field value
func (o *IssueSearchResultItem) GetCommentsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CommentsUrl
}

// GetCommentsUrlOk returns a tuple with the CommentsUrl field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetCommentsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CommentsUrl, true
}

// SetCommentsUrl sets field value
func (o *IssueSearchResultItem) SetCommentsUrl(v string) {
	o.CommentsUrl = v
}

// GetEventsUrl returns the EventsUrl field value
func (o *IssueSearchResultItem) GetEventsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EventsUrl
}

// GetEventsUrlOk returns a tuple with the EventsUrl field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetEventsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventsUrl, true
}

// SetEventsUrl sets field value
func (o *IssueSearchResultItem) SetEventsUrl(v string) {
	o.EventsUrl = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *IssueSearchResultItem) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *IssueSearchResultItem) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetId returns the Id field value
func (o *IssueSearchResultItem) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IssueSearchResultItem) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *IssueSearchResultItem) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *IssueSearchResultItem) SetNodeId(v string) {
	o.NodeId = v
}

// GetNumber returns the Number field value
func (o *IssueSearchResultItem) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *IssueSearchResultItem) SetNumber(v int32) {
	o.Number = v
}

// GetTitle returns the Title field value
func (o *IssueSearchResultItem) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *IssueSearchResultItem) SetTitle(v string) {
	o.Title = v
}

// GetLocked returns the Locked field value
func (o *IssueSearchResultItem) GetLocked() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Locked
}

// GetLockedOk returns a tuple with the Locked field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetLockedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Locked, true
}

// SetLocked sets field value
func (o *IssueSearchResultItem) SetLocked(v bool) {
	o.Locked = v
}

// GetActiveLockReason returns the ActiveLockReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IssueSearchResultItem) GetActiveLockReason() string {
	if o == nil || o.ActiveLockReason.Get() == nil {
		var ret string
		return ret
	}
	return *o.ActiveLockReason.Get()
}

// GetActiveLockReasonOk returns a tuple with the ActiveLockReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueSearchResultItem) GetActiveLockReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveLockReason.Get(), o.ActiveLockReason.IsSet()
}

// HasActiveLockReason returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasActiveLockReason() bool {
	if o != nil && o.ActiveLockReason.IsSet() {
		return true
	}

	return false
}

// SetActiveLockReason gets a reference to the given NullableString and assigns it to the ActiveLockReason field.
func (o *IssueSearchResultItem) SetActiveLockReason(v string) {
	o.ActiveLockReason.Set(&v)
}
// SetActiveLockReasonNil sets the value for ActiveLockReason to be an explicit nil
func (o *IssueSearchResultItem) SetActiveLockReasonNil() {
	o.ActiveLockReason.Set(nil)
}

// UnsetActiveLockReason ensures that no value is present for ActiveLockReason, not even an explicit nil
func (o *IssueSearchResultItem) UnsetActiveLockReason() {
	o.ActiveLockReason.Unset()
}

// GetAssignees returns the Assignees field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IssueSearchResultItem) GetAssignees() []SimpleUser {
	if o == nil {
		var ret []SimpleUser
		return ret
	}
	return o.Assignees
}

// GetAssigneesOk returns a tuple with the Assignees field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueSearchResultItem) GetAssigneesOk() ([]SimpleUser, bool) {
	if o == nil || o.Assignees == nil {
		return nil, false
	}
	return o.Assignees, true
}

// HasAssignees returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasAssignees() bool {
	if o != nil && o.Assignees != nil {
		return true
	}

	return false
}

// SetAssignees gets a reference to the given []SimpleUser and assigns it to the Assignees field.
func (o *IssueSearchResultItem) SetAssignees(v []SimpleUser) {
	o.Assignees = v
}

// GetUser returns the User field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *IssueSearchResultItem) GetUser() NullableSimpleUser {
	if o == nil || o.User.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueSearchResultItem) GetUserOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// SetUser sets field value
func (o *IssueSearchResultItem) SetUser(v NullableSimpleUser) {
	o.User.Set(&v)
}

// GetLabels returns the Labels field value
func (o *IssueSearchResultItem) GetLabels() []IssueSearchResultItemLabelsInner {
	if o == nil {
		var ret []IssueSearchResultItemLabelsInner
		return ret
	}

	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetLabelsOk() ([]IssueSearchResultItemLabelsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Labels, true
}

// SetLabels sets field value
func (o *IssueSearchResultItem) SetLabels(v []IssueSearchResultItemLabelsInner) {
	o.Labels = v
}

// GetState returns the State field value
func (o *IssueSearchResultItem) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *IssueSearchResultItem) SetState(v string) {
	o.State = v
}

// GetStateReason returns the StateReason field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IssueSearchResultItem) GetStateReason() string {
	if o == nil || o.StateReason.Get() == nil {
		var ret string
		return ret
	}
	return *o.StateReason.Get()
}

// GetStateReasonOk returns a tuple with the StateReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueSearchResultItem) GetStateReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StateReason.Get(), o.StateReason.IsSet()
}

// HasStateReason returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasStateReason() bool {
	if o != nil && o.StateReason.IsSet() {
		return true
	}

	return false
}

// SetStateReason gets a reference to the given NullableString and assigns it to the StateReason field.
func (o *IssueSearchResultItem) SetStateReason(v string) {
	o.StateReason.Set(&v)
}
// SetStateReasonNil sets the value for StateReason to be an explicit nil
func (o *IssueSearchResultItem) SetStateReasonNil() {
	o.StateReason.Set(nil)
}

// UnsetStateReason ensures that no value is present for StateReason, not even an explicit nil
func (o *IssueSearchResultItem) UnsetStateReason() {
	o.StateReason.Unset()
}

// GetAssignee returns the Assignee field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *IssueSearchResultItem) GetAssignee() NullableSimpleUser {
	if o == nil || o.Assignee.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.Assignee.Get()
}

// GetAssigneeOk returns a tuple with the Assignee field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueSearchResultItem) GetAssigneeOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Assignee.Get(), o.Assignee.IsSet()
}

// SetAssignee sets field value
func (o *IssueSearchResultItem) SetAssignee(v NullableSimpleUser) {
	o.Assignee.Set(&v)
}

// GetMilestone returns the Milestone field value
// If the value is explicit nil, the zero value for NullableMilestone will be returned
func (o *IssueSearchResultItem) GetMilestone() NullableMilestone {
	if o == nil || o.Milestone.Get() == nil {
		var ret NullableMilestone
		return ret
	}

	return *o.Milestone.Get()
}

// GetMilestoneOk returns a tuple with the Milestone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueSearchResultItem) GetMilestoneOk() (*NullableMilestone, bool) {
	if o == nil {
		return nil, false
	}
	return o.Milestone.Get(), o.Milestone.IsSet()
}

// SetMilestone sets field value
func (o *IssueSearchResultItem) SetMilestone(v NullableMilestone) {
	o.Milestone.Set(&v)
}

// GetComments returns the Comments field value
func (o *IssueSearchResultItem) GetComments() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Comments
}

// GetCommentsOk returns a tuple with the Comments field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetCommentsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Comments, true
}

// SetComments sets field value
func (o *IssueSearchResultItem) SetComments(v int32) {
	o.Comments = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *IssueSearchResultItem) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *IssueSearchResultItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *IssueSearchResultItem) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *IssueSearchResultItem) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetClosedAt returns the ClosedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *IssueSearchResultItem) GetClosedAt() time.Time {
	if o == nil || o.ClosedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ClosedAt.Get()
}

// GetClosedAtOk returns a tuple with the ClosedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueSearchResultItem) GetClosedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClosedAt.Get(), o.ClosedAt.IsSet()
}

// SetClosedAt sets field value
func (o *IssueSearchResultItem) SetClosedAt(v time.Time) {
	o.ClosedAt.Set(&v)
}

// GetTextMatches returns the TextMatches field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetTextMatches() []SearchResultTextMatchesInner {
	if o == nil || o.TextMatches == nil {
		var ret []SearchResultTextMatchesInner
		return ret
	}
	return o.TextMatches
}

// GetTextMatchesOk returns a tuple with the TextMatches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetTextMatchesOk() ([]SearchResultTextMatchesInner, bool) {
	if o == nil || o.TextMatches == nil {
		return nil, false
	}
	return o.TextMatches, true
}

// HasTextMatches returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasTextMatches() bool {
	if o != nil && o.TextMatches != nil {
		return true
	}

	return false
}

// SetTextMatches gets a reference to the given []SearchResultTextMatchesInner and assigns it to the TextMatches field.
func (o *IssueSearchResultItem) SetTextMatches(v []SearchResultTextMatchesInner) {
	o.TextMatches = v
}

// GetPullRequest returns the PullRequest field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetPullRequest() IssuePullRequest {
	if o == nil || o.PullRequest == nil {
		var ret IssuePullRequest
		return ret
	}
	return *o.PullRequest
}

// GetPullRequestOk returns a tuple with the PullRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetPullRequestOk() (*IssuePullRequest, bool) {
	if o == nil || o.PullRequest == nil {
		return nil, false
	}
	return o.PullRequest, true
}

// HasPullRequest returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasPullRequest() bool {
	if o != nil && o.PullRequest != nil {
		return true
	}

	return false
}

// SetPullRequest gets a reference to the given IssuePullRequest and assigns it to the PullRequest field.
func (o *IssueSearchResultItem) SetPullRequest(v IssuePullRequest) {
	o.PullRequest = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *IssueSearchResultItem) SetBody(v string) {
	o.Body = &v
}

// GetScore returns the Score field value
func (o *IssueSearchResultItem) GetScore() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Score
}

// GetScoreOk returns a tuple with the Score field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetScoreOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Score, true
}

// SetScore sets field value
func (o *IssueSearchResultItem) SetScore(v float32) {
	o.Score = v
}

// GetAuthorAssociation returns the AuthorAssociation field value
func (o *IssueSearchResultItem) GetAuthorAssociation() AuthorAssociation {
	if o == nil {
		var ret AuthorAssociation
		return ret
	}

	return o.AuthorAssociation
}

// GetAuthorAssociationOk returns a tuple with the AuthorAssociation field value
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetAuthorAssociationOk() (*AuthorAssociation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorAssociation, true
}

// SetAuthorAssociation sets field value
func (o *IssueSearchResultItem) SetAuthorAssociation(v AuthorAssociation) {
	o.AuthorAssociation = v
}

// GetDraft returns the Draft field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetDraft() bool {
	if o == nil || o.Draft == nil {
		var ret bool
		return ret
	}
	return *o.Draft
}

// GetDraftOk returns a tuple with the Draft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetDraftOk() (*bool, bool) {
	if o == nil || o.Draft == nil {
		return nil, false
	}
	return o.Draft, true
}

// HasDraft returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasDraft() bool {
	if o != nil && o.Draft != nil {
		return true
	}

	return false
}

// SetDraft gets a reference to the given bool and assigns it to the Draft field.
func (o *IssueSearchResultItem) SetDraft(v bool) {
	o.Draft = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetRepository() Repository {
	if o == nil || o.Repository == nil {
		var ret Repository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetRepositoryOk() (*Repository, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given Repository and assigns it to the Repository field.
func (o *IssueSearchResultItem) SetRepository(v Repository) {
	o.Repository = &v
}

// GetBodyHtml returns the BodyHtml field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetBodyHtml() string {
	if o == nil || o.BodyHtml == nil {
		var ret string
		return ret
	}
	return *o.BodyHtml
}

// GetBodyHtmlOk returns a tuple with the BodyHtml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetBodyHtmlOk() (*string, bool) {
	if o == nil || o.BodyHtml == nil {
		return nil, false
	}
	return o.BodyHtml, true
}

// HasBodyHtml returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasBodyHtml() bool {
	if o != nil && o.BodyHtml != nil {
		return true
	}

	return false
}

// SetBodyHtml gets a reference to the given string and assigns it to the BodyHtml field.
func (o *IssueSearchResultItem) SetBodyHtml(v string) {
	o.BodyHtml = &v
}

// GetBodyText returns the BodyText field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetBodyText() string {
	if o == nil || o.BodyText == nil {
		var ret string
		return ret
	}
	return *o.BodyText
}

// GetBodyTextOk returns a tuple with the BodyText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetBodyTextOk() (*string, bool) {
	if o == nil || o.BodyText == nil {
		return nil, false
	}
	return o.BodyText, true
}

// HasBodyText returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasBodyText() bool {
	if o != nil && o.BodyText != nil {
		return true
	}

	return false
}

// SetBodyText gets a reference to the given string and assigns it to the BodyText field.
func (o *IssueSearchResultItem) SetBodyText(v string) {
	o.BodyText = &v
}

// GetTimelineUrl returns the TimelineUrl field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetTimelineUrl() string {
	if o == nil || o.TimelineUrl == nil {
		var ret string
		return ret
	}
	return *o.TimelineUrl
}

// GetTimelineUrlOk returns a tuple with the TimelineUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetTimelineUrlOk() (*string, bool) {
	if o == nil || o.TimelineUrl == nil {
		return nil, false
	}
	return o.TimelineUrl, true
}

// HasTimelineUrl returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasTimelineUrl() bool {
	if o != nil && o.TimelineUrl != nil {
		return true
	}

	return false
}

// SetTimelineUrl gets a reference to the given string and assigns it to the TimelineUrl field.
func (o *IssueSearchResultItem) SetTimelineUrl(v string) {
	o.TimelineUrl = &v
}

// GetPerformedViaGithubApp returns the PerformedViaGithubApp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IssueSearchResultItem) GetPerformedViaGithubApp() NullableIntegration {
	if o == nil || o.PerformedViaGithubApp.Get() == nil {
		var ret NullableIntegration
		return ret
	}
	return *o.PerformedViaGithubApp.Get()
}

// GetPerformedViaGithubAppOk returns a tuple with the PerformedViaGithubApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IssueSearchResultItem) GetPerformedViaGithubAppOk() (*NullableIntegration, bool) {
	if o == nil {
		return nil, false
	}
	return o.PerformedViaGithubApp.Get(), o.PerformedViaGithubApp.IsSet()
}

// HasPerformedViaGithubApp returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasPerformedViaGithubApp() bool {
	if o != nil && o.PerformedViaGithubApp.IsSet() {
		return true
	}

	return false
}

// SetPerformedViaGithubApp gets a reference to the given NullableNullableIntegration and assigns it to the PerformedViaGithubApp field.
func (o *IssueSearchResultItem) SetPerformedViaGithubApp(v NullableIntegration) {
	o.PerformedViaGithubApp.Set(&v)
}
// SetPerformedViaGithubAppNil sets the value for PerformedViaGithubApp to be an explicit nil
func (o *IssueSearchResultItem) SetPerformedViaGithubAppNil() {
	o.PerformedViaGithubApp.Set(nil)
}

// UnsetPerformedViaGithubApp ensures that no value is present for PerformedViaGithubApp, not even an explicit nil
func (o *IssueSearchResultItem) UnsetPerformedViaGithubApp() {
	o.PerformedViaGithubApp.Unset()
}

// GetReactions returns the Reactions field value if set, zero value otherwise.
func (o *IssueSearchResultItem) GetReactions() ReactionRollup {
	if o == nil || o.Reactions == nil {
		var ret ReactionRollup
		return ret
	}
	return *o.Reactions
}

// GetReactionsOk returns a tuple with the Reactions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IssueSearchResultItem) GetReactionsOk() (*ReactionRollup, bool) {
	if o == nil || o.Reactions == nil {
		return nil, false
	}
	return o.Reactions, true
}

// HasReactions returns a boolean if a field has been set.
func (o *IssueSearchResultItem) HasReactions() bool {
	if o != nil && o.Reactions != nil {
		return true
	}

	return false
}

// SetReactions gets a reference to the given ReactionRollup and assigns it to the Reactions field.
func (o *IssueSearchResultItem) SetReactions(v ReactionRollup) {
	o.Reactions = &v
}

func (o IssueSearchResultItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["repository_url"] = o.RepositoryUrl
	}
	if true {
		toSerialize["labels_url"] = o.LabelsUrl
	}
	if true {
		toSerialize["comments_url"] = o.CommentsUrl
	}
	if true {
		toSerialize["events_url"] = o.EventsUrl
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["locked"] = o.Locked
	}
	if o.ActiveLockReason.IsSet() {
		toSerialize["active_lock_reason"] = o.ActiveLockReason.Get()
	}
	if o.Assignees != nil {
		toSerialize["assignees"] = o.Assignees
	}
	if true {
		toSerialize["user"] = o.User.Get()
	}
	if true {
		toSerialize["labels"] = o.Labels
	}
	if true {
		toSerialize["state"] = o.State
	}
	if o.StateReason.IsSet() {
		toSerialize["state_reason"] = o.StateReason.Get()
	}
	if true {
		toSerialize["assignee"] = o.Assignee.Get()
	}
	if true {
		toSerialize["milestone"] = o.Milestone.Get()
	}
	if true {
		toSerialize["comments"] = o.Comments
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["closed_at"] = o.ClosedAt.Get()
	}
	if o.TextMatches != nil {
		toSerialize["text_matches"] = o.TextMatches
	}
	if o.PullRequest != nil {
		toSerialize["pull_request"] = o.PullRequest
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if true {
		toSerialize["score"] = o.Score
	}
	if true {
		toSerialize["author_association"] = o.AuthorAssociation
	}
	if o.Draft != nil {
		toSerialize["draft"] = o.Draft
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.BodyHtml != nil {
		toSerialize["body_html"] = o.BodyHtml
	}
	if o.BodyText != nil {
		toSerialize["body_text"] = o.BodyText
	}
	if o.TimelineUrl != nil {
		toSerialize["timeline_url"] = o.TimelineUrl
	}
	if o.PerformedViaGithubApp.IsSet() {
		toSerialize["performed_via_github_app"] = o.PerformedViaGithubApp.Get()
	}
	if o.Reactions != nil {
		toSerialize["reactions"] = o.Reactions
	}
	return json.Marshal(toSerialize)
}

type NullableIssueSearchResultItem struct {
	value *IssueSearchResultItem
	isSet bool
}

func (v NullableIssueSearchResultItem) Get() *IssueSearchResultItem {
	return v.value
}

func (v *NullableIssueSearchResultItem) Set(val *IssueSearchResultItem) {
	v.value = val
	v.isSet = true
}

func (v NullableIssueSearchResultItem) IsSet() bool {
	return v.isSet
}

func (v *NullableIssueSearchResultItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIssueSearchResultItem(val *IssueSearchResultItem) *NullableIssueSearchResultItem {
	return &NullableIssueSearchResultItem{value: val, isSet: true}
}

func (v NullableIssueSearchResultItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIssueSearchResultItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


