/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ApiOverviewSshKeyFingerprints struct for ApiOverviewSshKeyFingerprints
type ApiOverviewSshKeyFingerprints struct {
	SHA256RSA *string `json:"SHA256_RSA,omitempty"`
	SHA256DSA *string `json:"SHA256_DSA,omitempty"`
	SHA256ECDSA *string `json:"SHA256_ECDSA,omitempty"`
	SHA256ED25519 *string `json:"SHA256_ED25519,omitempty"`
}

// NewApiOverviewSshKeyFingerprints instantiates a new ApiOverviewSshKeyFingerprints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOverviewSshKeyFingerprints() *ApiOverviewSshKeyFingerprints {
	this := ApiOverviewSshKeyFingerprints{}
	return &this
}

// NewApiOverviewSshKeyFingerprintsWithDefaults instantiates a new ApiOverviewSshKeyFingerprints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOverviewSshKeyFingerprintsWithDefaults() *ApiOverviewSshKeyFingerprints {
	this := ApiOverviewSshKeyFingerprints{}
	return &this
}

// GetSHA256RSA returns the SHA256RSA field value if set, zero value otherwise.
func (o *ApiOverviewSshKeyFingerprints) GetSHA256RSA() string {
	if o == nil || o.SHA256RSA == nil {
		var ret string
		return ret
	}
	return *o.SHA256RSA
}

// GetSHA256RSAOk returns a tuple with the SHA256RSA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverviewSshKeyFingerprints) GetSHA256RSAOk() (*string, bool) {
	if o == nil || o.SHA256RSA == nil {
		return nil, false
	}
	return o.SHA256RSA, true
}

// HasSHA256RSA returns a boolean if a field has been set.
func (o *ApiOverviewSshKeyFingerprints) HasSHA256RSA() bool {
	if o != nil && o.SHA256RSA != nil {
		return true
	}

	return false
}

// SetSHA256RSA gets a reference to the given string and assigns it to the SHA256RSA field.
func (o *ApiOverviewSshKeyFingerprints) SetSHA256RSA(v string) {
	o.SHA256RSA = &v
}

// GetSHA256DSA returns the SHA256DSA field value if set, zero value otherwise.
func (o *ApiOverviewSshKeyFingerprints) GetSHA256DSA() string {
	if o == nil || o.SHA256DSA == nil {
		var ret string
		return ret
	}
	return *o.SHA256DSA
}

// GetSHA256DSAOk returns a tuple with the SHA256DSA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverviewSshKeyFingerprints) GetSHA256DSAOk() (*string, bool) {
	if o == nil || o.SHA256DSA == nil {
		return nil, false
	}
	return o.SHA256DSA, true
}

// HasSHA256DSA returns a boolean if a field has been set.
func (o *ApiOverviewSshKeyFingerprints) HasSHA256DSA() bool {
	if o != nil && o.SHA256DSA != nil {
		return true
	}

	return false
}

// SetSHA256DSA gets a reference to the given string and assigns it to the SHA256DSA field.
func (o *ApiOverviewSshKeyFingerprints) SetSHA256DSA(v string) {
	o.SHA256DSA = &v
}

// GetSHA256ECDSA returns the SHA256ECDSA field value if set, zero value otherwise.
func (o *ApiOverviewSshKeyFingerprints) GetSHA256ECDSA() string {
	if o == nil || o.SHA256ECDSA == nil {
		var ret string
		return ret
	}
	return *o.SHA256ECDSA
}

// GetSHA256ECDSAOk returns a tuple with the SHA256ECDSA field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverviewSshKeyFingerprints) GetSHA256ECDSAOk() (*string, bool) {
	if o == nil || o.SHA256ECDSA == nil {
		return nil, false
	}
	return o.SHA256ECDSA, true
}

// HasSHA256ECDSA returns a boolean if a field has been set.
func (o *ApiOverviewSshKeyFingerprints) HasSHA256ECDSA() bool {
	if o != nil && o.SHA256ECDSA != nil {
		return true
	}

	return false
}

// SetSHA256ECDSA gets a reference to the given string and assigns it to the SHA256ECDSA field.
func (o *ApiOverviewSshKeyFingerprints) SetSHA256ECDSA(v string) {
	o.SHA256ECDSA = &v
}

// GetSHA256ED25519 returns the SHA256ED25519 field value if set, zero value otherwise.
func (o *ApiOverviewSshKeyFingerprints) GetSHA256ED25519() string {
	if o == nil || o.SHA256ED25519 == nil {
		var ret string
		return ret
	}
	return *o.SHA256ED25519
}

// GetSHA256ED25519Ok returns a tuple with the SHA256ED25519 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverviewSshKeyFingerprints) GetSHA256ED25519Ok() (*string, bool) {
	if o == nil || o.SHA256ED25519 == nil {
		return nil, false
	}
	return o.SHA256ED25519, true
}

// HasSHA256ED25519 returns a boolean if a field has been set.
func (o *ApiOverviewSshKeyFingerprints) HasSHA256ED25519() bool {
	if o != nil && o.SHA256ED25519 != nil {
		return true
	}

	return false
}

// SetSHA256ED25519 gets a reference to the given string and assigns it to the SHA256ED25519 field.
func (o *ApiOverviewSshKeyFingerprints) SetSHA256ED25519(v string) {
	o.SHA256ED25519 = &v
}

func (o ApiOverviewSshKeyFingerprints) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.SHA256RSA != nil {
		toSerialize["SHA256_RSA"] = o.SHA256RSA
	}
	if o.SHA256DSA != nil {
		toSerialize["SHA256_DSA"] = o.SHA256DSA
	}
	if o.SHA256ECDSA != nil {
		toSerialize["SHA256_ECDSA"] = o.SHA256ECDSA
	}
	if o.SHA256ED25519 != nil {
		toSerialize["SHA256_ED25519"] = o.SHA256ED25519
	}
	return json.Marshal(toSerialize)
}

type NullableApiOverviewSshKeyFingerprints struct {
	value *ApiOverviewSshKeyFingerprints
	isSet bool
}

func (v NullableApiOverviewSshKeyFingerprints) Get() *ApiOverviewSshKeyFingerprints {
	return v.value
}

func (v *NullableApiOverviewSshKeyFingerprints) Set(val *ApiOverviewSshKeyFingerprints) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOverviewSshKeyFingerprints) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOverviewSshKeyFingerprints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOverviewSshKeyFingerprints(val *ApiOverviewSshKeyFingerprints) *NullableApiOverviewSshKeyFingerprints {
	return &NullableApiOverviewSshKeyFingerprints{value: val, isSet: true}
}

func (v NullableApiOverviewSshKeyFingerprints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOverviewSshKeyFingerprints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


