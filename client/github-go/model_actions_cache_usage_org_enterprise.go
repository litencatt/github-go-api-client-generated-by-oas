/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ActionsCacheUsageOrgEnterprise struct for ActionsCacheUsageOrgEnterprise
type ActionsCacheUsageOrgEnterprise struct {
	// The count of active caches across all repositories of an enterprise or an organization.
	TotalActiveCachesCount int32 `json:"total_active_caches_count"`
	// The total size in bytes of all active cache items across all repositories of an enterprise or an organization.
	TotalActiveCachesSizeInBytes int32 `json:"total_active_caches_size_in_bytes"`
}

// NewActionsCacheUsageOrgEnterprise instantiates a new ActionsCacheUsageOrgEnterprise object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsCacheUsageOrgEnterprise(totalActiveCachesCount int32, totalActiveCachesSizeInBytes int32) *ActionsCacheUsageOrgEnterprise {
	this := ActionsCacheUsageOrgEnterprise{}
	this.TotalActiveCachesCount = totalActiveCachesCount
	this.TotalActiveCachesSizeInBytes = totalActiveCachesSizeInBytes
	return &this
}

// NewActionsCacheUsageOrgEnterpriseWithDefaults instantiates a new ActionsCacheUsageOrgEnterprise object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsCacheUsageOrgEnterpriseWithDefaults() *ActionsCacheUsageOrgEnterprise {
	this := ActionsCacheUsageOrgEnterprise{}
	return &this
}

// GetTotalActiveCachesCount returns the TotalActiveCachesCount field value
func (o *ActionsCacheUsageOrgEnterprise) GetTotalActiveCachesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalActiveCachesCount
}

// GetTotalActiveCachesCountOk returns a tuple with the TotalActiveCachesCount field value
// and a boolean to check if the value has been set.
func (o *ActionsCacheUsageOrgEnterprise) GetTotalActiveCachesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalActiveCachesCount, true
}

// SetTotalActiveCachesCount sets field value
func (o *ActionsCacheUsageOrgEnterprise) SetTotalActiveCachesCount(v int32) {
	o.TotalActiveCachesCount = v
}

// GetTotalActiveCachesSizeInBytes returns the TotalActiveCachesSizeInBytes field value
func (o *ActionsCacheUsageOrgEnterprise) GetTotalActiveCachesSizeInBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalActiveCachesSizeInBytes
}

// GetTotalActiveCachesSizeInBytesOk returns a tuple with the TotalActiveCachesSizeInBytes field value
// and a boolean to check if the value has been set.
func (o *ActionsCacheUsageOrgEnterprise) GetTotalActiveCachesSizeInBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalActiveCachesSizeInBytes, true
}

// SetTotalActiveCachesSizeInBytes sets field value
func (o *ActionsCacheUsageOrgEnterprise) SetTotalActiveCachesSizeInBytes(v int32) {
	o.TotalActiveCachesSizeInBytes = v
}

func (o ActionsCacheUsageOrgEnterprise) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total_active_caches_count"] = o.TotalActiveCachesCount
	}
	if true {
		toSerialize["total_active_caches_size_in_bytes"] = o.TotalActiveCachesSizeInBytes
	}
	return json.Marshal(toSerialize)
}

type NullableActionsCacheUsageOrgEnterprise struct {
	value *ActionsCacheUsageOrgEnterprise
	isSet bool
}

func (v NullableActionsCacheUsageOrgEnterprise) Get() *ActionsCacheUsageOrgEnterprise {
	return v.value
}

func (v *NullableActionsCacheUsageOrgEnterprise) Set(val *ActionsCacheUsageOrgEnterprise) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsCacheUsageOrgEnterprise) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsCacheUsageOrgEnterprise) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsCacheUsageOrgEnterprise(val *ActionsCacheUsageOrgEnterprise) *NullableActionsCacheUsageOrgEnterprise {
	return &NullableActionsCacheUsageOrgEnterprise{value: val, isSet: true}
}

func (v NullableActionsCacheUsageOrgEnterprise) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsCacheUsageOrgEnterprise) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


