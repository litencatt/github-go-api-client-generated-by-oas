/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PullRequestSimpleLabelsInner struct for PullRequestSimpleLabelsInner
type PullRequestSimpleLabelsInner struct {
	Id int64 `json:"id"`
	NodeId string `json:"node_id"`
	Url string `json:"url"`
	Name string `json:"name"`
	Description string `json:"description"`
	Color string `json:"color"`
	Default bool `json:"default"`
}

// NewPullRequestSimpleLabelsInner instantiates a new PullRequestSimpleLabelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullRequestSimpleLabelsInner(id int64, nodeId string, url string, name string, description string, color string, default_ bool) *PullRequestSimpleLabelsInner {
	this := PullRequestSimpleLabelsInner{}
	this.Id = id
	this.NodeId = nodeId
	this.Url = url
	this.Name = name
	this.Description = description
	this.Color = color
	this.Default = default_
	return &this
}

// NewPullRequestSimpleLabelsInnerWithDefaults instantiates a new PullRequestSimpleLabelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullRequestSimpleLabelsInnerWithDefaults() *PullRequestSimpleLabelsInner {
	this := PullRequestSimpleLabelsInner{}
	return &this
}

// GetId returns the Id field value
func (o *PullRequestSimpleLabelsInner) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PullRequestSimpleLabelsInner) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PullRequestSimpleLabelsInner) SetId(v int64) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *PullRequestSimpleLabelsInner) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *PullRequestSimpleLabelsInner) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *PullRequestSimpleLabelsInner) SetNodeId(v string) {
	o.NodeId = v
}

// GetUrl returns the Url field value
func (o *PullRequestSimpleLabelsInner) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *PullRequestSimpleLabelsInner) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *PullRequestSimpleLabelsInner) SetUrl(v string) {
	o.Url = v
}

// GetName returns the Name field value
func (o *PullRequestSimpleLabelsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *PullRequestSimpleLabelsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *PullRequestSimpleLabelsInner) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value
func (o *PullRequestSimpleLabelsInner) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *PullRequestSimpleLabelsInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *PullRequestSimpleLabelsInner) SetDescription(v string) {
	o.Description = v
}

// GetColor returns the Color field value
func (o *PullRequestSimpleLabelsInner) GetColor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *PullRequestSimpleLabelsInner) GetColorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *PullRequestSimpleLabelsInner) SetColor(v string) {
	o.Color = v
}

// GetDefault returns the Default field value
func (o *PullRequestSimpleLabelsInner) GetDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Default
}

// GetDefaultOk returns a tuple with the Default field value
// and a boolean to check if the value has been set.
func (o *PullRequestSimpleLabelsInner) GetDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Default, true
}

// SetDefault sets field value
func (o *PullRequestSimpleLabelsInner) SetDefault(v bool) {
	o.Default = v
}

func (o PullRequestSimpleLabelsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["color"] = o.Color
	}
	if true {
		toSerialize["default"] = o.Default
	}
	return json.Marshal(toSerialize)
}

type NullablePullRequestSimpleLabelsInner struct {
	value *PullRequestSimpleLabelsInner
	isSet bool
}

func (v NullablePullRequestSimpleLabelsInner) Get() *PullRequestSimpleLabelsInner {
	return v.value
}

func (v *NullablePullRequestSimpleLabelsInner) Set(val *PullRequestSimpleLabelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePullRequestSimpleLabelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePullRequestSimpleLabelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullRequestSimpleLabelsInner(val *PullRequestSimpleLabelsInner) *NullablePullRequestSimpleLabelsInner {
	return &NullablePullRequestSimpleLabelsInner{value: val, isSet: true}
}

func (v NullablePullRequestSimpleLabelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullRequestSimpleLabelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


