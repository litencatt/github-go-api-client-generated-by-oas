/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// License License
type License struct {
	Key string `json:"key"`
	Name string `json:"name"`
	SpdxId NullableString `json:"spdx_id"`
	Url NullableString `json:"url"`
	NodeId string `json:"node_id"`
	HtmlUrl string `json:"html_url"`
	Description string `json:"description"`
	Implementation string `json:"implementation"`
	Permissions []string `json:"permissions"`
	Conditions []string `json:"conditions"`
	Limitations []string `json:"limitations"`
	Body string `json:"body"`
	Featured bool `json:"featured"`
}

// NewLicense instantiates a new License object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLicense(key string, name string, spdxId NullableString, url NullableString, nodeId string, htmlUrl string, description string, implementation string, permissions []string, conditions []string, limitations []string, body string, featured bool) *License {
	this := License{}
	this.Key = key
	this.Name = name
	this.SpdxId = spdxId
	this.Url = url
	this.NodeId = nodeId
	this.HtmlUrl = htmlUrl
	this.Description = description
	this.Implementation = implementation
	this.Permissions = permissions
	this.Conditions = conditions
	this.Limitations = limitations
	this.Body = body
	this.Featured = featured
	return &this
}

// NewLicenseWithDefaults instantiates a new License object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLicenseWithDefaults() *License {
	this := License{}
	return &this
}

// GetKey returns the Key field value
func (o *License) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *License) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *License) SetKey(v string) {
	o.Key = v
}

// GetName returns the Name field value
func (o *License) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *License) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *License) SetName(v string) {
	o.Name = v
}

// GetSpdxId returns the SpdxId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *License) GetSpdxId() string {
	if o == nil || o.SpdxId.Get() == nil {
		var ret string
		return ret
	}

	return *o.SpdxId.Get()
}

// GetSpdxIdOk returns a tuple with the SpdxId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *License) GetSpdxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SpdxId.Get(), o.SpdxId.IsSet()
}

// SetSpdxId sets field value
func (o *License) SetSpdxId(v string) {
	o.SpdxId.Set(&v)
}

// GetUrl returns the Url field value
// If the value is explicit nil, the zero value for string will be returned
func (o *License) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}

	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *License) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// SetUrl sets field value
func (o *License) SetUrl(v string) {
	o.Url.Set(&v)
}

// GetNodeId returns the NodeId field value
func (o *License) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *License) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *License) SetNodeId(v string) {
	o.NodeId = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *License) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *License) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *License) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetDescription returns the Description field value
func (o *License) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *License) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *License) SetDescription(v string) {
	o.Description = v
}

// GetImplementation returns the Implementation field value
func (o *License) GetImplementation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Implementation
}

// GetImplementationOk returns a tuple with the Implementation field value
// and a boolean to check if the value has been set.
func (o *License) GetImplementationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Implementation, true
}

// SetImplementation sets field value
func (o *License) SetImplementation(v string) {
	o.Implementation = v
}

// GetPermissions returns the Permissions field value
func (o *License) GetPermissions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *License) GetPermissionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Permissions, true
}

// SetPermissions sets field value
func (o *License) SetPermissions(v []string) {
	o.Permissions = v
}

// GetConditions returns the Conditions field value
func (o *License) GetConditions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *License) GetConditionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conditions, true
}

// SetConditions sets field value
func (o *License) SetConditions(v []string) {
	o.Conditions = v
}

// GetLimitations returns the Limitations field value
func (o *License) GetLimitations() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Limitations
}

// GetLimitationsOk returns a tuple with the Limitations field value
// and a boolean to check if the value has been set.
func (o *License) GetLimitationsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limitations, true
}

// SetLimitations sets field value
func (o *License) SetLimitations(v []string) {
	o.Limitations = v
}

// GetBody returns the Body field value
func (o *License) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *License) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *License) SetBody(v string) {
	o.Body = v
}

// GetFeatured returns the Featured field value
func (o *License) GetFeatured() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Featured
}

// GetFeaturedOk returns a tuple with the Featured field value
// and a boolean to check if the value has been set.
func (o *License) GetFeaturedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Featured, true
}

// SetFeatured sets field value
func (o *License) SetFeatured(v bool) {
	o.Featured = v
}

func (o License) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["key"] = o.Key
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["spdx_id"] = o.SpdxId.Get()
	}
	if true {
		toSerialize["url"] = o.Url.Get()
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["implementation"] = o.Implementation
	}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	if true {
		toSerialize["conditions"] = o.Conditions
	}
	if true {
		toSerialize["limitations"] = o.Limitations
	}
	if true {
		toSerialize["body"] = o.Body
	}
	if true {
		toSerialize["featured"] = o.Featured
	}
	return json.Marshal(toSerialize)
}

type NullableLicense struct {
	value *License
	isSet bool
}

func (v NullableLicense) Get() *License {
	return v.value
}

func (v *NullableLicense) Set(val *License) {
	v.value = val
	v.isSet = true
}

func (v NullableLicense) IsSet() bool {
	return v.isSet
}

func (v *NullableLicense) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLicense(val *License) *NullableLicense {
	return &NullableLicense{value: val, isSet: true}
}

func (v NullableLicense) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLicense) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


