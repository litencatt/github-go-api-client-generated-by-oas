/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// Deployment A request for a specific ref(branch,sha,tag) to be deployed
type Deployment struct {
	Url string `json:"url"`
	// Unique identifier of the deployment
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	Sha string `json:"sha"`
	// The ref to deploy. This can be a branch, tag, or sha.
	Ref string `json:"ref"`
	// Parameter to specify a task to execute
	Task string `json:"task"`
	Payload DeploymentPayload `json:"payload"`
	OriginalEnvironment *string `json:"original_environment,omitempty"`
	// Name for the target deployment environment.
	Environment string `json:"environment"`
	Description NullableString `json:"description"`
	Creator NullableNullableSimpleUser `json:"creator"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	StatusesUrl string `json:"statuses_url"`
	RepositoryUrl string `json:"repository_url"`
	// Specifies if the given environment is will no longer exist at some point in the future. Default: false.
	TransientEnvironment *bool `json:"transient_environment,omitempty"`
	// Specifies if the given environment is one that end-users directly interact with. Default: false.
	ProductionEnvironment *bool `json:"production_environment,omitempty"`
	PerformedViaGithubApp NullableNullableIntegration `json:"performed_via_github_app,omitempty"`
}

// NewDeployment instantiates a new Deployment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeployment(url string, id int32, nodeId string, sha string, ref string, task string, payload DeploymentPayload, environment string, description NullableString, creator NullableNullableSimpleUser, createdAt time.Time, updatedAt time.Time, statusesUrl string, repositoryUrl string) *Deployment {
	this := Deployment{}
	this.Url = url
	this.Id = id
	this.NodeId = nodeId
	this.Sha = sha
	this.Ref = ref
	this.Task = task
	this.Payload = payload
	this.Environment = environment
	this.Description = description
	this.Creator = creator
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.StatusesUrl = statusesUrl
	this.RepositoryUrl = repositoryUrl
	return &this
}

// NewDeploymentWithDefaults instantiates a new Deployment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentWithDefaults() *Deployment {
	this := Deployment{}
	return &this
}

// GetUrl returns the Url field value
func (o *Deployment) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Deployment) SetUrl(v string) {
	o.Url = v
}

// GetId returns the Id field value
func (o *Deployment) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Deployment) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *Deployment) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *Deployment) SetNodeId(v string) {
	o.NodeId = v
}

// GetSha returns the Sha field value
func (o *Deployment) GetSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Sha
}

// GetShaOk returns a tuple with the Sha field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Sha, true
}

// SetSha sets field value
func (o *Deployment) SetSha(v string) {
	o.Sha = v
}

// GetRef returns the Ref field value
func (o *Deployment) GetRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ref
}

// GetRefOk returns a tuple with the Ref field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ref, true
}

// SetRef sets field value
func (o *Deployment) SetRef(v string) {
	o.Ref = v
}

// GetTask returns the Task field value
func (o *Deployment) GetTask() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Task
}

// GetTaskOk returns a tuple with the Task field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetTaskOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Task, true
}

// SetTask sets field value
func (o *Deployment) SetTask(v string) {
	o.Task = v
}

// GetPayload returns the Payload field value
func (o *Deployment) GetPayload() DeploymentPayload {
	if o == nil {
		var ret DeploymentPayload
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetPayloadOk() (*DeploymentPayload, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *Deployment) SetPayload(v DeploymentPayload) {
	o.Payload = v
}

// GetOriginalEnvironment returns the OriginalEnvironment field value if set, zero value otherwise.
func (o *Deployment) GetOriginalEnvironment() string {
	if o == nil || o.OriginalEnvironment == nil {
		var ret string
		return ret
	}
	return *o.OriginalEnvironment
}

// GetOriginalEnvironmentOk returns a tuple with the OriginalEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetOriginalEnvironmentOk() (*string, bool) {
	if o == nil || o.OriginalEnvironment == nil {
		return nil, false
	}
	return o.OriginalEnvironment, true
}

// HasOriginalEnvironment returns a boolean if a field has been set.
func (o *Deployment) HasOriginalEnvironment() bool {
	if o != nil && o.OriginalEnvironment != nil {
		return true
	}

	return false
}

// SetOriginalEnvironment gets a reference to the given string and assigns it to the OriginalEnvironment field.
func (o *Deployment) SetOriginalEnvironment(v string) {
	o.OriginalEnvironment = &v
}

// GetEnvironment returns the Environment field value
func (o *Deployment) GetEnvironment() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Environment
}

// GetEnvironmentOk returns a tuple with the Environment field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetEnvironmentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Environment, true
}

// SetEnvironment sets field value
func (o *Deployment) SetEnvironment(v string) {
	o.Environment = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Deployment) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Deployment) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetCreator returns the Creator field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *Deployment) GetCreator() NullableSimpleUser {
	if o == nil || o.Creator.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.Creator.Get()
}

// GetCreatorOk returns a tuple with the Creator field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetCreatorOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Creator.Get(), o.Creator.IsSet()
}

// SetCreator sets field value
func (o *Deployment) SetCreator(v NullableSimpleUser) {
	o.Creator.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *Deployment) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Deployment) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Deployment) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Deployment) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetStatusesUrl returns the StatusesUrl field value
func (o *Deployment) GetStatusesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StatusesUrl
}

// GetStatusesUrlOk returns a tuple with the StatusesUrl field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetStatusesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusesUrl, true
}

// SetStatusesUrl sets field value
func (o *Deployment) SetStatusesUrl(v string) {
	o.StatusesUrl = v
}

// GetRepositoryUrl returns the RepositoryUrl field value
func (o *Deployment) GetRepositoryUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositoryUrl
}

// GetRepositoryUrlOk returns a tuple with the RepositoryUrl field value
// and a boolean to check if the value has been set.
func (o *Deployment) GetRepositoryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositoryUrl, true
}

// SetRepositoryUrl sets field value
func (o *Deployment) SetRepositoryUrl(v string) {
	o.RepositoryUrl = v
}

// GetTransientEnvironment returns the TransientEnvironment field value if set, zero value otherwise.
func (o *Deployment) GetTransientEnvironment() bool {
	if o == nil || o.TransientEnvironment == nil {
		var ret bool
		return ret
	}
	return *o.TransientEnvironment
}

// GetTransientEnvironmentOk returns a tuple with the TransientEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetTransientEnvironmentOk() (*bool, bool) {
	if o == nil || o.TransientEnvironment == nil {
		return nil, false
	}
	return o.TransientEnvironment, true
}

// HasTransientEnvironment returns a boolean if a field has been set.
func (o *Deployment) HasTransientEnvironment() bool {
	if o != nil && o.TransientEnvironment != nil {
		return true
	}

	return false
}

// SetTransientEnvironment gets a reference to the given bool and assigns it to the TransientEnvironment field.
func (o *Deployment) SetTransientEnvironment(v bool) {
	o.TransientEnvironment = &v
}

// GetProductionEnvironment returns the ProductionEnvironment field value if set, zero value otherwise.
func (o *Deployment) GetProductionEnvironment() bool {
	if o == nil || o.ProductionEnvironment == nil {
		var ret bool
		return ret
	}
	return *o.ProductionEnvironment
}

// GetProductionEnvironmentOk returns a tuple with the ProductionEnvironment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Deployment) GetProductionEnvironmentOk() (*bool, bool) {
	if o == nil || o.ProductionEnvironment == nil {
		return nil, false
	}
	return o.ProductionEnvironment, true
}

// HasProductionEnvironment returns a boolean if a field has been set.
func (o *Deployment) HasProductionEnvironment() bool {
	if o != nil && o.ProductionEnvironment != nil {
		return true
	}

	return false
}

// SetProductionEnvironment gets a reference to the given bool and assigns it to the ProductionEnvironment field.
func (o *Deployment) SetProductionEnvironment(v bool) {
	o.ProductionEnvironment = &v
}

// GetPerformedViaGithubApp returns the PerformedViaGithubApp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Deployment) GetPerformedViaGithubApp() NullableIntegration {
	if o == nil || o.PerformedViaGithubApp.Get() == nil {
		var ret NullableIntegration
		return ret
	}
	return *o.PerformedViaGithubApp.Get()
}

// GetPerformedViaGithubAppOk returns a tuple with the PerformedViaGithubApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Deployment) GetPerformedViaGithubAppOk() (*NullableIntegration, bool) {
	if o == nil {
		return nil, false
	}
	return o.PerformedViaGithubApp.Get(), o.PerformedViaGithubApp.IsSet()
}

// HasPerformedViaGithubApp returns a boolean if a field has been set.
func (o *Deployment) HasPerformedViaGithubApp() bool {
	if o != nil && o.PerformedViaGithubApp.IsSet() {
		return true
	}

	return false
}

// SetPerformedViaGithubApp gets a reference to the given NullableNullableIntegration and assigns it to the PerformedViaGithubApp field.
func (o *Deployment) SetPerformedViaGithubApp(v NullableIntegration) {
	o.PerformedViaGithubApp.Set(&v)
}
// SetPerformedViaGithubAppNil sets the value for PerformedViaGithubApp to be an explicit nil
func (o *Deployment) SetPerformedViaGithubAppNil() {
	o.PerformedViaGithubApp.Set(nil)
}

// UnsetPerformedViaGithubApp ensures that no value is present for PerformedViaGithubApp, not even an explicit nil
func (o *Deployment) UnsetPerformedViaGithubApp() {
	o.PerformedViaGithubApp.Unset()
}

func (o Deployment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["sha"] = o.Sha
	}
	if true {
		toSerialize["ref"] = o.Ref
	}
	if true {
		toSerialize["task"] = o.Task
	}
	if true {
		toSerialize["payload"] = o.Payload
	}
	if o.OriginalEnvironment != nil {
		toSerialize["original_environment"] = o.OriginalEnvironment
	}
	if true {
		toSerialize["environment"] = o.Environment
	}
	if true {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["creator"] = o.Creator.Get()
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["statuses_url"] = o.StatusesUrl
	}
	if true {
		toSerialize["repository_url"] = o.RepositoryUrl
	}
	if o.TransientEnvironment != nil {
		toSerialize["transient_environment"] = o.TransientEnvironment
	}
	if o.ProductionEnvironment != nil {
		toSerialize["production_environment"] = o.ProductionEnvironment
	}
	if o.PerformedViaGithubApp.IsSet() {
		toSerialize["performed_via_github_app"] = o.PerformedViaGithubApp.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableDeployment struct {
	value *Deployment
	isSet bool
}

func (v NullableDeployment) Get() *Deployment {
	return v.value
}

func (v *NullableDeployment) Set(val *Deployment) {
	v.value = val
	v.isSet = true
}

func (v NullableDeployment) IsSet() bool {
	return v.isSet
}

func (v *NullableDeployment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeployment(val *Deployment) *NullableDeployment {
	return &NullableDeployment{value: val, isSet: true}
}

func (v NullableDeployment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeployment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


