/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// SnapshotDetector A description of the detector used.
type SnapshotDetector struct {
	// The name of the detector used.
	Name string `json:"name"`
	// The version of the detector used.
	Version string `json:"version"`
	// The url of the detector used.
	Url string `json:"url"`
}

// NewSnapshotDetector instantiates a new SnapshotDetector object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSnapshotDetector(name string, version string, url string) *SnapshotDetector {
	this := SnapshotDetector{}
	this.Name = name
	this.Version = version
	this.Url = url
	return &this
}

// NewSnapshotDetectorWithDefaults instantiates a new SnapshotDetector object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSnapshotDetectorWithDefaults() *SnapshotDetector {
	this := SnapshotDetector{}
	return &this
}

// GetName returns the Name field value
func (o *SnapshotDetector) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SnapshotDetector) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SnapshotDetector) SetName(v string) {
	o.Name = v
}

// GetVersion returns the Version field value
func (o *SnapshotDetector) GetVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Version
}

// GetVersionOk returns a tuple with the Version field value
// and a boolean to check if the value has been set.
func (o *SnapshotDetector) GetVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Version, true
}

// SetVersion sets field value
func (o *SnapshotDetector) SetVersion(v string) {
	o.Version = v
}

// GetUrl returns the Url field value
func (o *SnapshotDetector) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *SnapshotDetector) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *SnapshotDetector) SetUrl(v string) {
	o.Url = v
}

func (o SnapshotDetector) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["version"] = o.Version
	}
	if true {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableSnapshotDetector struct {
	value *SnapshotDetector
	isSet bool
}

func (v NullableSnapshotDetector) Get() *SnapshotDetector {
	return v.value
}

func (v *NullableSnapshotDetector) Set(val *SnapshotDetector) {
	v.value = val
	v.isSet = true
}

func (v NullableSnapshotDetector) IsSet() bool {
	return v.isSet
}

func (v *NullableSnapshotDetector) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSnapshotDetector(val *SnapshotDetector) *NullableSnapshotDetector {
	return &NullableSnapshotDetector{value: val, isSet: true}
}

func (v NullableSnapshotDetector) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSnapshotDetector) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


