/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PullsCreateRequest struct for PullsCreateRequest
type PullsCreateRequest struct {
	// The title of the new pull request.
	Title *string `json:"title,omitempty"`
	// The name of the branch where your changes are implemented. For cross-repository pull requests in the same network, namespace `head` with a user like this: `username:branch`.
	Head string `json:"head"`
	// The name of the branch you want the changes pulled into. This should be an existing branch on the current repository. You cannot submit a pull request to one repository that requests a merge to a base of another repository.
	Base string `json:"base"`
	// The contents of the pull request.
	Body *string `json:"body,omitempty"`
	// Indicates whether [maintainers can modify](https://docs.github.com/articles/allowing-changes-to-a-pull-request-branch-created-from-a-fork/) the pull request.
	MaintainerCanModify *bool `json:"maintainer_can_modify,omitempty"`
	// Indicates whether the pull request is a draft. See \"[Draft Pull Requests](https://docs.github.com/en/articles/about-pull-requests#draft-pull-requests)\" in the GitHub Help documentation to learn more.
	Draft *bool `json:"draft,omitempty"`
	Issue *int32 `json:"issue,omitempty"`
}

// NewPullsCreateRequest instantiates a new PullsCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullsCreateRequest(head string, base string) *PullsCreateRequest {
	this := PullsCreateRequest{}
	this.Head = head
	this.Base = base
	return &this
}

// NewPullsCreateRequestWithDefaults instantiates a new PullsCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullsCreateRequestWithDefaults() *PullsCreateRequest {
	this := PullsCreateRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *PullsCreateRequest) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullsCreateRequest) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *PullsCreateRequest) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *PullsCreateRequest) SetTitle(v string) {
	o.Title = &v
}

// GetHead returns the Head field value
func (o *PullsCreateRequest) GetHead() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Head
}

// GetHeadOk returns a tuple with the Head field value
// and a boolean to check if the value has been set.
func (o *PullsCreateRequest) GetHeadOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Head, true
}

// SetHead sets field value
func (o *PullsCreateRequest) SetHead(v string) {
	o.Head = v
}

// GetBase returns the Base field value
func (o *PullsCreateRequest) GetBase() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Base
}

// GetBaseOk returns a tuple with the Base field value
// and a boolean to check if the value has been set.
func (o *PullsCreateRequest) GetBaseOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Base, true
}

// SetBase sets field value
func (o *PullsCreateRequest) SetBase(v string) {
	o.Base = v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *PullsCreateRequest) GetBody() string {
	if o == nil || o.Body == nil {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullsCreateRequest) GetBodyOk() (*string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *PullsCreateRequest) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *PullsCreateRequest) SetBody(v string) {
	o.Body = &v
}

// GetMaintainerCanModify returns the MaintainerCanModify field value if set, zero value otherwise.
func (o *PullsCreateRequest) GetMaintainerCanModify() bool {
	if o == nil || o.MaintainerCanModify == nil {
		var ret bool
		return ret
	}
	return *o.MaintainerCanModify
}

// GetMaintainerCanModifyOk returns a tuple with the MaintainerCanModify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullsCreateRequest) GetMaintainerCanModifyOk() (*bool, bool) {
	if o == nil || o.MaintainerCanModify == nil {
		return nil, false
	}
	return o.MaintainerCanModify, true
}

// HasMaintainerCanModify returns a boolean if a field has been set.
func (o *PullsCreateRequest) HasMaintainerCanModify() bool {
	if o != nil && o.MaintainerCanModify != nil {
		return true
	}

	return false
}

// SetMaintainerCanModify gets a reference to the given bool and assigns it to the MaintainerCanModify field.
func (o *PullsCreateRequest) SetMaintainerCanModify(v bool) {
	o.MaintainerCanModify = &v
}

// GetDraft returns the Draft field value if set, zero value otherwise.
func (o *PullsCreateRequest) GetDraft() bool {
	if o == nil || o.Draft == nil {
		var ret bool
		return ret
	}
	return *o.Draft
}

// GetDraftOk returns a tuple with the Draft field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullsCreateRequest) GetDraftOk() (*bool, bool) {
	if o == nil || o.Draft == nil {
		return nil, false
	}
	return o.Draft, true
}

// HasDraft returns a boolean if a field has been set.
func (o *PullsCreateRequest) HasDraft() bool {
	if o != nil && o.Draft != nil {
		return true
	}

	return false
}

// SetDraft gets a reference to the given bool and assigns it to the Draft field.
func (o *PullsCreateRequest) SetDraft(v bool) {
	o.Draft = &v
}

// GetIssue returns the Issue field value if set, zero value otherwise.
func (o *PullsCreateRequest) GetIssue() int32 {
	if o == nil || o.Issue == nil {
		var ret int32
		return ret
	}
	return *o.Issue
}

// GetIssueOk returns a tuple with the Issue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullsCreateRequest) GetIssueOk() (*int32, bool) {
	if o == nil || o.Issue == nil {
		return nil, false
	}
	return o.Issue, true
}

// HasIssue returns a boolean if a field has been set.
func (o *PullsCreateRequest) HasIssue() bool {
	if o != nil && o.Issue != nil {
		return true
	}

	return false
}

// SetIssue gets a reference to the given int32 and assigns it to the Issue field.
func (o *PullsCreateRequest) SetIssue(v int32) {
	o.Issue = &v
}

func (o PullsCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["head"] = o.Head
	}
	if true {
		toSerialize["base"] = o.Base
	}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	if o.MaintainerCanModify != nil {
		toSerialize["maintainer_can_modify"] = o.MaintainerCanModify
	}
	if o.Draft != nil {
		toSerialize["draft"] = o.Draft
	}
	if o.Issue != nil {
		toSerialize["issue"] = o.Issue
	}
	return json.Marshal(toSerialize)
}

type NullablePullsCreateRequest struct {
	value *PullsCreateRequest
	isSet bool
}

func (v NullablePullsCreateRequest) Get() *PullsCreateRequest {
	return v.value
}

func (v *NullablePullsCreateRequest) Set(val *PullsCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePullsCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePullsCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullsCreateRequest(val *PullsCreateRequest) *NullablePullsCreateRequest {
	return &NullablePullsCreateRequest{value: val, isSet: true}
}

func (v NullablePullsCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullsCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


