/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// DockerMetadata struct for DockerMetadata
type DockerMetadata struct {
	Tag []string `json:"tag,omitempty"`
}

// NewDockerMetadata instantiates a new DockerMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDockerMetadata() *DockerMetadata {
	this := DockerMetadata{}
	return &this
}

// NewDockerMetadataWithDefaults instantiates a new DockerMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDockerMetadataWithDefaults() *DockerMetadata {
	this := DockerMetadata{}
	return &this
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *DockerMetadata) GetTag() []string {
	if o == nil || o.Tag == nil {
		var ret []string
		return ret
	}
	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DockerMetadata) GetTagOk() ([]string, bool) {
	if o == nil || o.Tag == nil {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *DockerMetadata) HasTag() bool {
	if o != nil && o.Tag != nil {
		return true
	}

	return false
}

// SetTag gets a reference to the given []string and assigns it to the Tag field.
func (o *DockerMetadata) SetTag(v []string) {
	o.Tag = v
}

func (o DockerMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tag != nil {
		toSerialize["tag"] = o.Tag
	}
	return json.Marshal(toSerialize)
}

type NullableDockerMetadata struct {
	value *DockerMetadata
	isSet bool
}

func (v NullableDockerMetadata) Get() *DockerMetadata {
	return v.value
}

func (v *NullableDockerMetadata) Set(val *DockerMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableDockerMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableDockerMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDockerMetadata(val *DockerMetadata) *NullableDockerMetadata {
	return &NullableDockerMetadata{value: val, isSet: true}
}

func (v NullableDockerMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDockerMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


