/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposAddCollaboratorRequest struct for ReposAddCollaboratorRequest
type ReposAddCollaboratorRequest struct {
	// The permission to grant the collaborator. **Only valid on organization-owned repositories.** In addition to the enumerated values, you can also specify a custom repository role name, if the owning organization has defined any.
	Permission *string `json:"permission,omitempty"`
}

// NewReposAddCollaboratorRequest instantiates a new ReposAddCollaboratorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposAddCollaboratorRequest() *ReposAddCollaboratorRequest {
	this := ReposAddCollaboratorRequest{}
	var permission string = "push"
	this.Permission = &permission
	return &this
}

// NewReposAddCollaboratorRequestWithDefaults instantiates a new ReposAddCollaboratorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposAddCollaboratorRequestWithDefaults() *ReposAddCollaboratorRequest {
	this := ReposAddCollaboratorRequest{}
	var permission string = "push"
	this.Permission = &permission
	return &this
}

// GetPermission returns the Permission field value if set, zero value otherwise.
func (o *ReposAddCollaboratorRequest) GetPermission() string {
	if o == nil || o.Permission == nil {
		var ret string
		return ret
	}
	return *o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposAddCollaboratorRequest) GetPermissionOk() (*string, bool) {
	if o == nil || o.Permission == nil {
		return nil, false
	}
	return o.Permission, true
}

// HasPermission returns a boolean if a field has been set.
func (o *ReposAddCollaboratorRequest) HasPermission() bool {
	if o != nil && o.Permission != nil {
		return true
	}

	return false
}

// SetPermission gets a reference to the given string and assigns it to the Permission field.
func (o *ReposAddCollaboratorRequest) SetPermission(v string) {
	o.Permission = &v
}

func (o ReposAddCollaboratorRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Permission != nil {
		toSerialize["permission"] = o.Permission
	}
	return json.Marshal(toSerialize)
}

type NullableReposAddCollaboratorRequest struct {
	value *ReposAddCollaboratorRequest
	isSet bool
}

func (v NullableReposAddCollaboratorRequest) Get() *ReposAddCollaboratorRequest {
	return v.value
}

func (v *NullableReposAddCollaboratorRequest) Set(val *ReposAddCollaboratorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposAddCollaboratorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposAddCollaboratorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposAddCollaboratorRequest(val *ReposAddCollaboratorRequest) *NullableReposAddCollaboratorRequest {
	return &NullableReposAddCollaboratorRequest{value: val, isSet: true}
}

func (v NullableReposAddCollaboratorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposAddCollaboratorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


