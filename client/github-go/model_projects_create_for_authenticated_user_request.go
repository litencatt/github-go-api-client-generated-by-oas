/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ProjectsCreateForAuthenticatedUserRequest struct for ProjectsCreateForAuthenticatedUserRequest
type ProjectsCreateForAuthenticatedUserRequest struct {
	// Name of the project
	Name string `json:"name"`
	// Body of the project
	Body NullableString `json:"body,omitempty"`
}

// NewProjectsCreateForAuthenticatedUserRequest instantiates a new ProjectsCreateForAuthenticatedUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsCreateForAuthenticatedUserRequest(name string) *ProjectsCreateForAuthenticatedUserRequest {
	this := ProjectsCreateForAuthenticatedUserRequest{}
	this.Name = name
	return &this
}

// NewProjectsCreateForAuthenticatedUserRequestWithDefaults instantiates a new ProjectsCreateForAuthenticatedUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsCreateForAuthenticatedUserRequestWithDefaults() *ProjectsCreateForAuthenticatedUserRequest {
	this := ProjectsCreateForAuthenticatedUserRequest{}
	return &this
}

// GetName returns the Name field value
func (o *ProjectsCreateForAuthenticatedUserRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ProjectsCreateForAuthenticatedUserRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ProjectsCreateForAuthenticatedUserRequest) SetName(v string) {
	o.Name = v
}

// GetBody returns the Body field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProjectsCreateForAuthenticatedUserRequest) GetBody() string {
	if o == nil || o.Body.Get() == nil {
		var ret string
		return ret
	}
	return *o.Body.Get()
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectsCreateForAuthenticatedUserRequest) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Body.Get(), o.Body.IsSet()
}

// HasBody returns a boolean if a field has been set.
func (o *ProjectsCreateForAuthenticatedUserRequest) HasBody() bool {
	if o != nil && o.Body.IsSet() {
		return true
	}

	return false
}

// SetBody gets a reference to the given NullableString and assigns it to the Body field.
func (o *ProjectsCreateForAuthenticatedUserRequest) SetBody(v string) {
	o.Body.Set(&v)
}
// SetBodyNil sets the value for Body to be an explicit nil
func (o *ProjectsCreateForAuthenticatedUserRequest) SetBodyNil() {
	o.Body.Set(nil)
}

// UnsetBody ensures that no value is present for Body, not even an explicit nil
func (o *ProjectsCreateForAuthenticatedUserRequest) UnsetBody() {
	o.Body.Unset()
}

func (o ProjectsCreateForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Body.IsSet() {
		toSerialize["body"] = o.Body.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsCreateForAuthenticatedUserRequest struct {
	value *ProjectsCreateForAuthenticatedUserRequest
	isSet bool
}

func (v NullableProjectsCreateForAuthenticatedUserRequest) Get() *ProjectsCreateForAuthenticatedUserRequest {
	return v.value
}

func (v *NullableProjectsCreateForAuthenticatedUserRequest) Set(val *ProjectsCreateForAuthenticatedUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsCreateForAuthenticatedUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsCreateForAuthenticatedUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsCreateForAuthenticatedUserRequest(val *ProjectsCreateForAuthenticatedUserRequest) *NullableProjectsCreateForAuthenticatedUserRequest {
	return &NullableProjectsCreateForAuthenticatedUserRequest{value: val, isSet: true}
}

func (v NullableProjectsCreateForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsCreateForAuthenticatedUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


