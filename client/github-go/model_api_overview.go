/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ApiOverview Api Overview
type ApiOverview struct {
	VerifiablePasswordAuthentication bool `json:"verifiable_password_authentication"`
	SshKeyFingerprints *ApiOverviewSshKeyFingerprints `json:"ssh_key_fingerprints,omitempty"`
	SshKeys []string `json:"ssh_keys,omitempty"`
	Hooks []string `json:"hooks,omitempty"`
	Web []string `json:"web,omitempty"`
	Api []string `json:"api,omitempty"`
	Git []string `json:"git,omitempty"`
	Packages []string `json:"packages,omitempty"`
	Pages []string `json:"pages,omitempty"`
	Importer []string `json:"importer,omitempty"`
	Actions []string `json:"actions,omitempty"`
	Dependabot []string `json:"dependabot,omitempty"`
}

// NewApiOverview instantiates a new ApiOverview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiOverview(verifiablePasswordAuthentication bool) *ApiOverview {
	this := ApiOverview{}
	this.VerifiablePasswordAuthentication = verifiablePasswordAuthentication
	return &this
}

// NewApiOverviewWithDefaults instantiates a new ApiOverview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiOverviewWithDefaults() *ApiOverview {
	this := ApiOverview{}
	return &this
}

// GetVerifiablePasswordAuthentication returns the VerifiablePasswordAuthentication field value
func (o *ApiOverview) GetVerifiablePasswordAuthentication() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.VerifiablePasswordAuthentication
}

// GetVerifiablePasswordAuthenticationOk returns a tuple with the VerifiablePasswordAuthentication field value
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetVerifiablePasswordAuthenticationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerifiablePasswordAuthentication, true
}

// SetVerifiablePasswordAuthentication sets field value
func (o *ApiOverview) SetVerifiablePasswordAuthentication(v bool) {
	o.VerifiablePasswordAuthentication = v
}

// GetSshKeyFingerprints returns the SshKeyFingerprints field value if set, zero value otherwise.
func (o *ApiOverview) GetSshKeyFingerprints() ApiOverviewSshKeyFingerprints {
	if o == nil || o.SshKeyFingerprints == nil {
		var ret ApiOverviewSshKeyFingerprints
		return ret
	}
	return *o.SshKeyFingerprints
}

// GetSshKeyFingerprintsOk returns a tuple with the SshKeyFingerprints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetSshKeyFingerprintsOk() (*ApiOverviewSshKeyFingerprints, bool) {
	if o == nil || o.SshKeyFingerprints == nil {
		return nil, false
	}
	return o.SshKeyFingerprints, true
}

// HasSshKeyFingerprints returns a boolean if a field has been set.
func (o *ApiOverview) HasSshKeyFingerprints() bool {
	if o != nil && o.SshKeyFingerprints != nil {
		return true
	}

	return false
}

// SetSshKeyFingerprints gets a reference to the given ApiOverviewSshKeyFingerprints and assigns it to the SshKeyFingerprints field.
func (o *ApiOverview) SetSshKeyFingerprints(v ApiOverviewSshKeyFingerprints) {
	o.SshKeyFingerprints = &v
}

// GetSshKeys returns the SshKeys field value if set, zero value otherwise.
func (o *ApiOverview) GetSshKeys() []string {
	if o == nil || o.SshKeys == nil {
		var ret []string
		return ret
	}
	return o.SshKeys
}

// GetSshKeysOk returns a tuple with the SshKeys field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetSshKeysOk() ([]string, bool) {
	if o == nil || o.SshKeys == nil {
		return nil, false
	}
	return o.SshKeys, true
}

// HasSshKeys returns a boolean if a field has been set.
func (o *ApiOverview) HasSshKeys() bool {
	if o != nil && o.SshKeys != nil {
		return true
	}

	return false
}

// SetSshKeys gets a reference to the given []string and assigns it to the SshKeys field.
func (o *ApiOverview) SetSshKeys(v []string) {
	o.SshKeys = v
}

// GetHooks returns the Hooks field value if set, zero value otherwise.
func (o *ApiOverview) GetHooks() []string {
	if o == nil || o.Hooks == nil {
		var ret []string
		return ret
	}
	return o.Hooks
}

// GetHooksOk returns a tuple with the Hooks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetHooksOk() ([]string, bool) {
	if o == nil || o.Hooks == nil {
		return nil, false
	}
	return o.Hooks, true
}

// HasHooks returns a boolean if a field has been set.
func (o *ApiOverview) HasHooks() bool {
	if o != nil && o.Hooks != nil {
		return true
	}

	return false
}

// SetHooks gets a reference to the given []string and assigns it to the Hooks field.
func (o *ApiOverview) SetHooks(v []string) {
	o.Hooks = v
}

// GetWeb returns the Web field value if set, zero value otherwise.
func (o *ApiOverview) GetWeb() []string {
	if o == nil || o.Web == nil {
		var ret []string
		return ret
	}
	return o.Web
}

// GetWebOk returns a tuple with the Web field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetWebOk() ([]string, bool) {
	if o == nil || o.Web == nil {
		return nil, false
	}
	return o.Web, true
}

// HasWeb returns a boolean if a field has been set.
func (o *ApiOverview) HasWeb() bool {
	if o != nil && o.Web != nil {
		return true
	}

	return false
}

// SetWeb gets a reference to the given []string and assigns it to the Web field.
func (o *ApiOverview) SetWeb(v []string) {
	o.Web = v
}

// GetApi returns the Api field value if set, zero value otherwise.
func (o *ApiOverview) GetApi() []string {
	if o == nil || o.Api == nil {
		var ret []string
		return ret
	}
	return o.Api
}

// GetApiOk returns a tuple with the Api field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetApiOk() ([]string, bool) {
	if o == nil || o.Api == nil {
		return nil, false
	}
	return o.Api, true
}

// HasApi returns a boolean if a field has been set.
func (o *ApiOverview) HasApi() bool {
	if o != nil && o.Api != nil {
		return true
	}

	return false
}

// SetApi gets a reference to the given []string and assigns it to the Api field.
func (o *ApiOverview) SetApi(v []string) {
	o.Api = v
}

// GetGit returns the Git field value if set, zero value otherwise.
func (o *ApiOverview) GetGit() []string {
	if o == nil || o.Git == nil {
		var ret []string
		return ret
	}
	return o.Git
}

// GetGitOk returns a tuple with the Git field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetGitOk() ([]string, bool) {
	if o == nil || o.Git == nil {
		return nil, false
	}
	return o.Git, true
}

// HasGit returns a boolean if a field has been set.
func (o *ApiOverview) HasGit() bool {
	if o != nil && o.Git != nil {
		return true
	}

	return false
}

// SetGit gets a reference to the given []string and assigns it to the Git field.
func (o *ApiOverview) SetGit(v []string) {
	o.Git = v
}

// GetPackages returns the Packages field value if set, zero value otherwise.
func (o *ApiOverview) GetPackages() []string {
	if o == nil || o.Packages == nil {
		var ret []string
		return ret
	}
	return o.Packages
}

// GetPackagesOk returns a tuple with the Packages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetPackagesOk() ([]string, bool) {
	if o == nil || o.Packages == nil {
		return nil, false
	}
	return o.Packages, true
}

// HasPackages returns a boolean if a field has been set.
func (o *ApiOverview) HasPackages() bool {
	if o != nil && o.Packages != nil {
		return true
	}

	return false
}

// SetPackages gets a reference to the given []string and assigns it to the Packages field.
func (o *ApiOverview) SetPackages(v []string) {
	o.Packages = v
}

// GetPages returns the Pages field value if set, zero value otherwise.
func (o *ApiOverview) GetPages() []string {
	if o == nil || o.Pages == nil {
		var ret []string
		return ret
	}
	return o.Pages
}

// GetPagesOk returns a tuple with the Pages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetPagesOk() ([]string, bool) {
	if o == nil || o.Pages == nil {
		return nil, false
	}
	return o.Pages, true
}

// HasPages returns a boolean if a field has been set.
func (o *ApiOverview) HasPages() bool {
	if o != nil && o.Pages != nil {
		return true
	}

	return false
}

// SetPages gets a reference to the given []string and assigns it to the Pages field.
func (o *ApiOverview) SetPages(v []string) {
	o.Pages = v
}

// GetImporter returns the Importer field value if set, zero value otherwise.
func (o *ApiOverview) GetImporter() []string {
	if o == nil || o.Importer == nil {
		var ret []string
		return ret
	}
	return o.Importer
}

// GetImporterOk returns a tuple with the Importer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetImporterOk() ([]string, bool) {
	if o == nil || o.Importer == nil {
		return nil, false
	}
	return o.Importer, true
}

// HasImporter returns a boolean if a field has been set.
func (o *ApiOverview) HasImporter() bool {
	if o != nil && o.Importer != nil {
		return true
	}

	return false
}

// SetImporter gets a reference to the given []string and assigns it to the Importer field.
func (o *ApiOverview) SetImporter(v []string) {
	o.Importer = v
}

// GetActions returns the Actions field value if set, zero value otherwise.
func (o *ApiOverview) GetActions() []string {
	if o == nil || o.Actions == nil {
		var ret []string
		return ret
	}
	return o.Actions
}

// GetActionsOk returns a tuple with the Actions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetActionsOk() ([]string, bool) {
	if o == nil || o.Actions == nil {
		return nil, false
	}
	return o.Actions, true
}

// HasActions returns a boolean if a field has been set.
func (o *ApiOverview) HasActions() bool {
	if o != nil && o.Actions != nil {
		return true
	}

	return false
}

// SetActions gets a reference to the given []string and assigns it to the Actions field.
func (o *ApiOverview) SetActions(v []string) {
	o.Actions = v
}

// GetDependabot returns the Dependabot field value if set, zero value otherwise.
func (o *ApiOverview) GetDependabot() []string {
	if o == nil || o.Dependabot == nil {
		var ret []string
		return ret
	}
	return o.Dependabot
}

// GetDependabotOk returns a tuple with the Dependabot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiOverview) GetDependabotOk() ([]string, bool) {
	if o == nil || o.Dependabot == nil {
		return nil, false
	}
	return o.Dependabot, true
}

// HasDependabot returns a boolean if a field has been set.
func (o *ApiOverview) HasDependabot() bool {
	if o != nil && o.Dependabot != nil {
		return true
	}

	return false
}

// SetDependabot gets a reference to the given []string and assigns it to the Dependabot field.
func (o *ApiOverview) SetDependabot(v []string) {
	o.Dependabot = v
}

func (o ApiOverview) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["verifiable_password_authentication"] = o.VerifiablePasswordAuthentication
	}
	if o.SshKeyFingerprints != nil {
		toSerialize["ssh_key_fingerprints"] = o.SshKeyFingerprints
	}
	if o.SshKeys != nil {
		toSerialize["ssh_keys"] = o.SshKeys
	}
	if o.Hooks != nil {
		toSerialize["hooks"] = o.Hooks
	}
	if o.Web != nil {
		toSerialize["web"] = o.Web
	}
	if o.Api != nil {
		toSerialize["api"] = o.Api
	}
	if o.Git != nil {
		toSerialize["git"] = o.Git
	}
	if o.Packages != nil {
		toSerialize["packages"] = o.Packages
	}
	if o.Pages != nil {
		toSerialize["pages"] = o.Pages
	}
	if o.Importer != nil {
		toSerialize["importer"] = o.Importer
	}
	if o.Actions != nil {
		toSerialize["actions"] = o.Actions
	}
	if o.Dependabot != nil {
		toSerialize["dependabot"] = o.Dependabot
	}
	return json.Marshal(toSerialize)
}

type NullableApiOverview struct {
	value *ApiOverview
	isSet bool
}

func (v NullableApiOverview) Get() *ApiOverview {
	return v.value
}

func (v *NullableApiOverview) Set(val *ApiOverview) {
	v.value = val
	v.isSet = true
}

func (v NullableApiOverview) IsSet() bool {
	return v.isSet
}

func (v *NullableApiOverview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiOverview(val *ApiOverview) *NullableApiOverview {
	return &NullableApiOverview{value: val, isSet: true}
}

func (v NullableApiOverview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiOverview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


