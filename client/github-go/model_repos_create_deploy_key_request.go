/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposCreateDeployKeyRequest struct for ReposCreateDeployKeyRequest
type ReposCreateDeployKeyRequest struct {
	// A name for the key.
	Title *string `json:"title,omitempty"`
	// The contents of the key.
	Key string `json:"key"`
	// If `true`, the key will only be able to read repository contents. Otherwise, the key will be able to read and write.      Deploy keys with write access can perform the same actions as an organization member with admin access, or a collaborator on a personal repository. For more information, see \"[Repository permission levels for an organization](https://docs.github.com/articles/repository-permission-levels-for-an-organization/)\" and \"[Permission levels for a user account repository](https://docs.github.com/articles/permission-levels-for-a-user-account-repository/).\"
	ReadOnly *bool `json:"read_only,omitempty"`
}

// NewReposCreateDeployKeyRequest instantiates a new ReposCreateDeployKeyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposCreateDeployKeyRequest(key string) *ReposCreateDeployKeyRequest {
	this := ReposCreateDeployKeyRequest{}
	this.Key = key
	return &this
}

// NewReposCreateDeployKeyRequestWithDefaults instantiates a new ReposCreateDeployKeyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposCreateDeployKeyRequestWithDefaults() *ReposCreateDeployKeyRequest {
	this := ReposCreateDeployKeyRequest{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ReposCreateDeployKeyRequest) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateDeployKeyRequest) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ReposCreateDeployKeyRequest) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ReposCreateDeployKeyRequest) SetTitle(v string) {
	o.Title = &v
}

// GetKey returns the Key field value
func (o *ReposCreateDeployKeyRequest) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ReposCreateDeployKeyRequest) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ReposCreateDeployKeyRequest) SetKey(v string) {
	o.Key = v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *ReposCreateDeployKeyRequest) GetReadOnly() bool {
	if o == nil || o.ReadOnly == nil {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateDeployKeyRequest) GetReadOnlyOk() (*bool, bool) {
	if o == nil || o.ReadOnly == nil {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *ReposCreateDeployKeyRequest) HasReadOnly() bool {
	if o != nil && o.ReadOnly != nil {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *ReposCreateDeployKeyRequest) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

func (o ReposCreateDeployKeyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["key"] = o.Key
	}
	if o.ReadOnly != nil {
		toSerialize["read_only"] = o.ReadOnly
	}
	return json.Marshal(toSerialize)
}

type NullableReposCreateDeployKeyRequest struct {
	value *ReposCreateDeployKeyRequest
	isSet bool
}

func (v NullableReposCreateDeployKeyRequest) Get() *ReposCreateDeployKeyRequest {
	return v.value
}

func (v *NullableReposCreateDeployKeyRequest) Set(val *ReposCreateDeployKeyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposCreateDeployKeyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposCreateDeployKeyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposCreateDeployKeyRequest(val *ReposCreateDeployKeyRequest) *NullableReposCreateDeployKeyRequest {
	return &NullableReposCreateDeployKeyRequest{value: val, isSet: true}
}

func (v NullableReposCreateDeployKeyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposCreateDeployKeyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


