/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposCreateOrUpdateFileContentsRequest struct for ReposCreateOrUpdateFileContentsRequest
type ReposCreateOrUpdateFileContentsRequest struct {
	// The commit message.
	Message string `json:"message"`
	// The new file content, using Base64 encoding.
	Content string `json:"content"`
	// **Required if you are updating a file**. The blob SHA of the file being replaced.
	Sha *string `json:"sha,omitempty"`
	// The branch name. Default: the repositoryâ€™s default branch (usually `master`)
	Branch *string `json:"branch,omitempty"`
	Committer *ReposCreateOrUpdateFileContentsRequestCommitter `json:"committer,omitempty"`
	Author *ReposCreateOrUpdateFileContentsRequestAuthor `json:"author,omitempty"`
}

// NewReposCreateOrUpdateFileContentsRequest instantiates a new ReposCreateOrUpdateFileContentsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposCreateOrUpdateFileContentsRequest(message string, content string) *ReposCreateOrUpdateFileContentsRequest {
	this := ReposCreateOrUpdateFileContentsRequest{}
	this.Message = message
	this.Content = content
	return &this
}

// NewReposCreateOrUpdateFileContentsRequestWithDefaults instantiates a new ReposCreateOrUpdateFileContentsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposCreateOrUpdateFileContentsRequestWithDefaults() *ReposCreateOrUpdateFileContentsRequest {
	this := ReposCreateOrUpdateFileContentsRequest{}
	return &this
}

// GetMessage returns the Message field value
func (o *ReposCreateOrUpdateFileContentsRequest) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *ReposCreateOrUpdateFileContentsRequest) SetMessage(v string) {
	o.Message = v
}

// GetContent returns the Content field value
func (o *ReposCreateOrUpdateFileContentsRequest) GetContent() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) GetContentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *ReposCreateOrUpdateFileContentsRequest) SetContent(v string) {
	o.Content = v
}

// GetSha returns the Sha field value if set, zero value otherwise.
func (o *ReposCreateOrUpdateFileContentsRequest) GetSha() string {
	if o == nil || o.Sha == nil {
		var ret string
		return ret
	}
	return *o.Sha
}

// GetShaOk returns a tuple with the Sha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) GetShaOk() (*string, bool) {
	if o == nil || o.Sha == nil {
		return nil, false
	}
	return o.Sha, true
}

// HasSha returns a boolean if a field has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) HasSha() bool {
	if o != nil && o.Sha != nil {
		return true
	}

	return false
}

// SetSha gets a reference to the given string and assigns it to the Sha field.
func (o *ReposCreateOrUpdateFileContentsRequest) SetSha(v string) {
	o.Sha = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *ReposCreateOrUpdateFileContentsRequest) GetBranch() string {
	if o == nil || o.Branch == nil {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) GetBranchOk() (*string, bool) {
	if o == nil || o.Branch == nil {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) HasBranch() bool {
	if o != nil && o.Branch != nil {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *ReposCreateOrUpdateFileContentsRequest) SetBranch(v string) {
	o.Branch = &v
}

// GetCommitter returns the Committer field value if set, zero value otherwise.
func (o *ReposCreateOrUpdateFileContentsRequest) GetCommitter() ReposCreateOrUpdateFileContentsRequestCommitter {
	if o == nil || o.Committer == nil {
		var ret ReposCreateOrUpdateFileContentsRequestCommitter
		return ret
	}
	return *o.Committer
}

// GetCommitterOk returns a tuple with the Committer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) GetCommitterOk() (*ReposCreateOrUpdateFileContentsRequestCommitter, bool) {
	if o == nil || o.Committer == nil {
		return nil, false
	}
	return o.Committer, true
}

// HasCommitter returns a boolean if a field has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) HasCommitter() bool {
	if o != nil && o.Committer != nil {
		return true
	}

	return false
}

// SetCommitter gets a reference to the given ReposCreateOrUpdateFileContentsRequestCommitter and assigns it to the Committer field.
func (o *ReposCreateOrUpdateFileContentsRequest) SetCommitter(v ReposCreateOrUpdateFileContentsRequestCommitter) {
	o.Committer = &v
}

// GetAuthor returns the Author field value if set, zero value otherwise.
func (o *ReposCreateOrUpdateFileContentsRequest) GetAuthor() ReposCreateOrUpdateFileContentsRequestAuthor {
	if o == nil || o.Author == nil {
		var ret ReposCreateOrUpdateFileContentsRequestAuthor
		return ret
	}
	return *o.Author
}

// GetAuthorOk returns a tuple with the Author field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) GetAuthorOk() (*ReposCreateOrUpdateFileContentsRequestAuthor, bool) {
	if o == nil || o.Author == nil {
		return nil, false
	}
	return o.Author, true
}

// HasAuthor returns a boolean if a field has been set.
func (o *ReposCreateOrUpdateFileContentsRequest) HasAuthor() bool {
	if o != nil && o.Author != nil {
		return true
	}

	return false
}

// SetAuthor gets a reference to the given ReposCreateOrUpdateFileContentsRequestAuthor and assigns it to the Author field.
func (o *ReposCreateOrUpdateFileContentsRequest) SetAuthor(v ReposCreateOrUpdateFileContentsRequestAuthor) {
	o.Author = &v
}

func (o ReposCreateOrUpdateFileContentsRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["message"] = o.Message
	}
	if true {
		toSerialize["content"] = o.Content
	}
	if o.Sha != nil {
		toSerialize["sha"] = o.Sha
	}
	if o.Branch != nil {
		toSerialize["branch"] = o.Branch
	}
	if o.Committer != nil {
		toSerialize["committer"] = o.Committer
	}
	if o.Author != nil {
		toSerialize["author"] = o.Author
	}
	return json.Marshal(toSerialize)
}

type NullableReposCreateOrUpdateFileContentsRequest struct {
	value *ReposCreateOrUpdateFileContentsRequest
	isSet bool
}

func (v NullableReposCreateOrUpdateFileContentsRequest) Get() *ReposCreateOrUpdateFileContentsRequest {
	return v.value
}

func (v *NullableReposCreateOrUpdateFileContentsRequest) Set(val *ReposCreateOrUpdateFileContentsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposCreateOrUpdateFileContentsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposCreateOrUpdateFileContentsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposCreateOrUpdateFileContentsRequest(val *ReposCreateOrUpdateFileContentsRequest) *NullableReposCreateOrUpdateFileContentsRequest {
	return &NullableReposCreateOrUpdateFileContentsRequest{value: val, isSet: true}
}

func (v NullableReposCreateOrUpdateFileContentsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposCreateOrUpdateFileContentsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


