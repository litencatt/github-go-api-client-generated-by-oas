/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// CodeScanningAlert struct for CodeScanningAlert
type CodeScanningAlert struct {
	// The security alert number.
	Number int32 `json:"number"`
	// The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
	CreatedAt time.Time `json:"created_at"`
	// The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// The REST API URL of the alert resource.
	Url string `json:"url"`
	// The GitHub URL of the alert resource.
	HtmlUrl string `json:"html_url"`
	// The REST API URL for fetching the list of instances for an alert.
	InstancesUrl string `json:"instances_url"`
	State CodeScanningAlertState `json:"state"`
	// The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
	FixedAt NullableTime `json:"fixed_at,omitempty"`
	DismissedBy NullableNullableSimpleUser `json:"dismissed_by"`
	// The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
	DismissedAt NullableTime `json:"dismissed_at"`
	DismissedReason NullableCodeScanningAlertDismissedReason `json:"dismissed_reason"`
	// The dismissal comment associated with the dismissal of the alert.
	DismissedComment NullableString `json:"dismissed_comment,omitempty"`
	Rule CodeScanningAlertRule `json:"rule"`
	Tool CodeScanningAnalysisTool `json:"tool"`
	MostRecentInstance CodeScanningAlertInstance `json:"most_recent_instance"`
}

// NewCodeScanningAlert instantiates a new CodeScanningAlert object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeScanningAlert(number int32, createdAt time.Time, url string, htmlUrl string, instancesUrl string, state CodeScanningAlertState, dismissedBy NullableNullableSimpleUser, dismissedAt NullableTime, dismissedReason NullableCodeScanningAlertDismissedReason, rule CodeScanningAlertRule, tool CodeScanningAnalysisTool, mostRecentInstance CodeScanningAlertInstance) *CodeScanningAlert {
	this := CodeScanningAlert{}
	this.Number = number
	this.CreatedAt = createdAt
	this.Url = url
	this.HtmlUrl = htmlUrl
	this.InstancesUrl = instancesUrl
	this.State = state
	this.DismissedBy = dismissedBy
	this.DismissedAt = dismissedAt
	this.DismissedReason = dismissedReason
	this.Rule = rule
	this.Tool = tool
	this.MostRecentInstance = mostRecentInstance
	return &this
}

// NewCodeScanningAlertWithDefaults instantiates a new CodeScanningAlert object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeScanningAlertWithDefaults() *CodeScanningAlert {
	this := CodeScanningAlert{}
	return &this
}

// GetNumber returns the Number field value
func (o *CodeScanningAlert) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *CodeScanningAlert) SetNumber(v int32) {
	o.Number = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *CodeScanningAlert) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *CodeScanningAlert) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *CodeScanningAlert) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *CodeScanningAlert) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *CodeScanningAlert) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetUrl returns the Url field value
func (o *CodeScanningAlert) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CodeScanningAlert) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *CodeScanningAlert) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *CodeScanningAlert) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetInstancesUrl returns the InstancesUrl field value
func (o *CodeScanningAlert) GetInstancesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstancesUrl
}

// GetInstancesUrlOk returns a tuple with the InstancesUrl field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetInstancesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstancesUrl, true
}

// SetInstancesUrl sets field value
func (o *CodeScanningAlert) SetInstancesUrl(v string) {
	o.InstancesUrl = v
}

// GetState returns the State field value
func (o *CodeScanningAlert) GetState() CodeScanningAlertState {
	if o == nil {
		var ret CodeScanningAlertState
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetStateOk() (*CodeScanningAlertState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CodeScanningAlert) SetState(v CodeScanningAlertState) {
	o.State = v
}

// GetFixedAt returns the FixedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CodeScanningAlert) GetFixedAt() time.Time {
	if o == nil || o.FixedAt.Get() == nil {
		var ret time.Time
		return ret
	}
	return *o.FixedAt.Get()
}

// GetFixedAtOk returns a tuple with the FixedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodeScanningAlert) GetFixedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.FixedAt.Get(), o.FixedAt.IsSet()
}

// HasFixedAt returns a boolean if a field has been set.
func (o *CodeScanningAlert) HasFixedAt() bool {
	if o != nil && o.FixedAt.IsSet() {
		return true
	}

	return false
}

// SetFixedAt gets a reference to the given NullableTime and assigns it to the FixedAt field.
func (o *CodeScanningAlert) SetFixedAt(v time.Time) {
	o.FixedAt.Set(&v)
}
// SetFixedAtNil sets the value for FixedAt to be an explicit nil
func (o *CodeScanningAlert) SetFixedAtNil() {
	o.FixedAt.Set(nil)
}

// UnsetFixedAt ensures that no value is present for FixedAt, not even an explicit nil
func (o *CodeScanningAlert) UnsetFixedAt() {
	o.FixedAt.Unset()
}

// GetDismissedBy returns the DismissedBy field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *CodeScanningAlert) GetDismissedBy() NullableSimpleUser {
	if o == nil || o.DismissedBy.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.DismissedBy.Get()
}

// GetDismissedByOk returns a tuple with the DismissedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodeScanningAlert) GetDismissedByOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.DismissedBy.Get(), o.DismissedBy.IsSet()
}

// SetDismissedBy sets field value
func (o *CodeScanningAlert) SetDismissedBy(v NullableSimpleUser) {
	o.DismissedBy.Set(&v)
}

// GetDismissedAt returns the DismissedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CodeScanningAlert) GetDismissedAt() time.Time {
	if o == nil || o.DismissedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.DismissedAt.Get()
}

// GetDismissedAtOk returns a tuple with the DismissedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodeScanningAlert) GetDismissedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DismissedAt.Get(), o.DismissedAt.IsSet()
}

// SetDismissedAt sets field value
func (o *CodeScanningAlert) SetDismissedAt(v time.Time) {
	o.DismissedAt.Set(&v)
}

// GetDismissedReason returns the DismissedReason field value
// If the value is explicit nil, the zero value for CodeScanningAlertDismissedReason will be returned
func (o *CodeScanningAlert) GetDismissedReason() CodeScanningAlertDismissedReason {
	if o == nil || o.DismissedReason.Get() == nil {
		var ret CodeScanningAlertDismissedReason
		return ret
	}

	return *o.DismissedReason.Get()
}

// GetDismissedReasonOk returns a tuple with the DismissedReason field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodeScanningAlert) GetDismissedReasonOk() (*CodeScanningAlertDismissedReason, bool) {
	if o == nil {
		return nil, false
	}
	return o.DismissedReason.Get(), o.DismissedReason.IsSet()
}

// SetDismissedReason sets field value
func (o *CodeScanningAlert) SetDismissedReason(v CodeScanningAlertDismissedReason) {
	o.DismissedReason.Set(&v)
}

// GetDismissedComment returns the DismissedComment field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CodeScanningAlert) GetDismissedComment() string {
	if o == nil || o.DismissedComment.Get() == nil {
		var ret string
		return ret
	}
	return *o.DismissedComment.Get()
}

// GetDismissedCommentOk returns a tuple with the DismissedComment field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodeScanningAlert) GetDismissedCommentOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DismissedComment.Get(), o.DismissedComment.IsSet()
}

// HasDismissedComment returns a boolean if a field has been set.
func (o *CodeScanningAlert) HasDismissedComment() bool {
	if o != nil && o.DismissedComment.IsSet() {
		return true
	}

	return false
}

// SetDismissedComment gets a reference to the given NullableString and assigns it to the DismissedComment field.
func (o *CodeScanningAlert) SetDismissedComment(v string) {
	o.DismissedComment.Set(&v)
}
// SetDismissedCommentNil sets the value for DismissedComment to be an explicit nil
func (o *CodeScanningAlert) SetDismissedCommentNil() {
	o.DismissedComment.Set(nil)
}

// UnsetDismissedComment ensures that no value is present for DismissedComment, not even an explicit nil
func (o *CodeScanningAlert) UnsetDismissedComment() {
	o.DismissedComment.Unset()
}

// GetRule returns the Rule field value
func (o *CodeScanningAlert) GetRule() CodeScanningAlertRule {
	if o == nil {
		var ret CodeScanningAlertRule
		return ret
	}

	return o.Rule
}

// GetRuleOk returns a tuple with the Rule field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetRuleOk() (*CodeScanningAlertRule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rule, true
}

// SetRule sets field value
func (o *CodeScanningAlert) SetRule(v CodeScanningAlertRule) {
	o.Rule = v
}

// GetTool returns the Tool field value
func (o *CodeScanningAlert) GetTool() CodeScanningAnalysisTool {
	if o == nil {
		var ret CodeScanningAnalysisTool
		return ret
	}

	return o.Tool
}

// GetToolOk returns a tuple with the Tool field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetToolOk() (*CodeScanningAnalysisTool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tool, true
}

// SetTool sets field value
func (o *CodeScanningAlert) SetTool(v CodeScanningAnalysisTool) {
	o.Tool = v
}

// GetMostRecentInstance returns the MostRecentInstance field value
func (o *CodeScanningAlert) GetMostRecentInstance() CodeScanningAlertInstance {
	if o == nil {
		var ret CodeScanningAlertInstance
		return ret
	}

	return o.MostRecentInstance
}

// GetMostRecentInstanceOk returns a tuple with the MostRecentInstance field value
// and a boolean to check if the value has been set.
func (o *CodeScanningAlert) GetMostRecentInstanceOk() (*CodeScanningAlertInstance, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MostRecentInstance, true
}

// SetMostRecentInstance sets field value
func (o *CodeScanningAlert) SetMostRecentInstance(v CodeScanningAlertInstance) {
	o.MostRecentInstance = v
}

func (o CodeScanningAlert) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["instances_url"] = o.InstancesUrl
	}
	if true {
		toSerialize["state"] = o.State
	}
	if o.FixedAt.IsSet() {
		toSerialize["fixed_at"] = o.FixedAt.Get()
	}
	if true {
		toSerialize["dismissed_by"] = o.DismissedBy.Get()
	}
	if true {
		toSerialize["dismissed_at"] = o.DismissedAt.Get()
	}
	if true {
		toSerialize["dismissed_reason"] = o.DismissedReason.Get()
	}
	if o.DismissedComment.IsSet() {
		toSerialize["dismissed_comment"] = o.DismissedComment.Get()
	}
	if true {
		toSerialize["rule"] = o.Rule
	}
	if true {
		toSerialize["tool"] = o.Tool
	}
	if true {
		toSerialize["most_recent_instance"] = o.MostRecentInstance
	}
	return json.Marshal(toSerialize)
}

type NullableCodeScanningAlert struct {
	value *CodeScanningAlert
	isSet bool
}

func (v NullableCodeScanningAlert) Get() *CodeScanningAlert {
	return v.value
}

func (v *NullableCodeScanningAlert) Set(val *CodeScanningAlert) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeScanningAlert) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeScanningAlert) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeScanningAlert(val *CodeScanningAlert) *NullableCodeScanningAlert {
	return &NullableCodeScanningAlert{value: val, isSet: true}
}

func (v NullableCodeScanningAlert) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeScanningAlert) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


