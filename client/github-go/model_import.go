/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ModelImport A repository import from an external source.
type ModelImport struct {
	Vcs NullableString `json:"vcs"`
	UseLfs *bool `json:"use_lfs,omitempty"`
	// The URL of the originating repository.
	VcsUrl string `json:"vcs_url"`
	SvcRoot *string `json:"svc_root,omitempty"`
	TfvcProject *string `json:"tfvc_project,omitempty"`
	Status string `json:"status"`
	StatusText NullableString `json:"status_text,omitempty"`
	FailedStep NullableString `json:"failed_step,omitempty"`
	ErrorMessage NullableString `json:"error_message,omitempty"`
	ImportPercent NullableInt32 `json:"import_percent,omitempty"`
	CommitCount NullableInt32 `json:"commit_count,omitempty"`
	PushPercent NullableInt32 `json:"push_percent,omitempty"`
	HasLargeFiles *bool `json:"has_large_files,omitempty"`
	LargeFilesSize *int32 `json:"large_files_size,omitempty"`
	LargeFilesCount *int32 `json:"large_files_count,omitempty"`
	ProjectChoices []ImportProjectChoicesInner `json:"project_choices,omitempty"`
	Message *string `json:"message,omitempty"`
	AuthorsCount NullableInt32 `json:"authors_count,omitempty"`
	Url string `json:"url"`
	HtmlUrl string `json:"html_url"`
	AuthorsUrl string `json:"authors_url"`
	RepositoryUrl string `json:"repository_url"`
	SvnRoot *string `json:"svn_root,omitempty"`
}

// NewModelImport instantiates a new ModelImport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelImport(vcs NullableString, vcsUrl string, status string, url string, htmlUrl string, authorsUrl string, repositoryUrl string) *ModelImport {
	this := ModelImport{}
	this.Vcs = vcs
	this.VcsUrl = vcsUrl
	this.Status = status
	this.Url = url
	this.HtmlUrl = htmlUrl
	this.AuthorsUrl = authorsUrl
	this.RepositoryUrl = repositoryUrl
	return &this
}

// NewModelImportWithDefaults instantiates a new ModelImport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelImportWithDefaults() *ModelImport {
	this := ModelImport{}
	return &this
}

// GetVcs returns the Vcs field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ModelImport) GetVcs() string {
	if o == nil || o.Vcs.Get() == nil {
		var ret string
		return ret
	}

	return *o.Vcs.Get()
}

// GetVcsOk returns a tuple with the Vcs field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelImport) GetVcsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Vcs.Get(), o.Vcs.IsSet()
}

// SetVcs sets field value
func (o *ModelImport) SetVcs(v string) {
	o.Vcs.Set(&v)
}

// GetUseLfs returns the UseLfs field value if set, zero value otherwise.
func (o *ModelImport) GetUseLfs() bool {
	if o == nil || o.UseLfs == nil {
		var ret bool
		return ret
	}
	return *o.UseLfs
}

// GetUseLfsOk returns a tuple with the UseLfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetUseLfsOk() (*bool, bool) {
	if o == nil || o.UseLfs == nil {
		return nil, false
	}
	return o.UseLfs, true
}

// HasUseLfs returns a boolean if a field has been set.
func (o *ModelImport) HasUseLfs() bool {
	if o != nil && o.UseLfs != nil {
		return true
	}

	return false
}

// SetUseLfs gets a reference to the given bool and assigns it to the UseLfs field.
func (o *ModelImport) SetUseLfs(v bool) {
	o.UseLfs = &v
}

// GetVcsUrl returns the VcsUrl field value
func (o *ModelImport) GetVcsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VcsUrl
}

// GetVcsUrlOk returns a tuple with the VcsUrl field value
// and a boolean to check if the value has been set.
func (o *ModelImport) GetVcsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VcsUrl, true
}

// SetVcsUrl sets field value
func (o *ModelImport) SetVcsUrl(v string) {
	o.VcsUrl = v
}

// GetSvcRoot returns the SvcRoot field value if set, zero value otherwise.
func (o *ModelImport) GetSvcRoot() string {
	if o == nil || o.SvcRoot == nil {
		var ret string
		return ret
	}
	return *o.SvcRoot
}

// GetSvcRootOk returns a tuple with the SvcRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetSvcRootOk() (*string, bool) {
	if o == nil || o.SvcRoot == nil {
		return nil, false
	}
	return o.SvcRoot, true
}

// HasSvcRoot returns a boolean if a field has been set.
func (o *ModelImport) HasSvcRoot() bool {
	if o != nil && o.SvcRoot != nil {
		return true
	}

	return false
}

// SetSvcRoot gets a reference to the given string and assigns it to the SvcRoot field.
func (o *ModelImport) SetSvcRoot(v string) {
	o.SvcRoot = &v
}

// GetTfvcProject returns the TfvcProject field value if set, zero value otherwise.
func (o *ModelImport) GetTfvcProject() string {
	if o == nil || o.TfvcProject == nil {
		var ret string
		return ret
	}
	return *o.TfvcProject
}

// GetTfvcProjectOk returns a tuple with the TfvcProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetTfvcProjectOk() (*string, bool) {
	if o == nil || o.TfvcProject == nil {
		return nil, false
	}
	return o.TfvcProject, true
}

// HasTfvcProject returns a boolean if a field has been set.
func (o *ModelImport) HasTfvcProject() bool {
	if o != nil && o.TfvcProject != nil {
		return true
	}

	return false
}

// SetTfvcProject gets a reference to the given string and assigns it to the TfvcProject field.
func (o *ModelImport) SetTfvcProject(v string) {
	o.TfvcProject = &v
}

// GetStatus returns the Status field value
func (o *ModelImport) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ModelImport) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ModelImport) SetStatus(v string) {
	o.Status = v
}

// GetStatusText returns the StatusText field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelImport) GetStatusText() string {
	if o == nil || o.StatusText.Get() == nil {
		var ret string
		return ret
	}
	return *o.StatusText.Get()
}

// GetStatusTextOk returns a tuple with the StatusText field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelImport) GetStatusTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.StatusText.Get(), o.StatusText.IsSet()
}

// HasStatusText returns a boolean if a field has been set.
func (o *ModelImport) HasStatusText() bool {
	if o != nil && o.StatusText.IsSet() {
		return true
	}

	return false
}

// SetStatusText gets a reference to the given NullableString and assigns it to the StatusText field.
func (o *ModelImport) SetStatusText(v string) {
	o.StatusText.Set(&v)
}
// SetStatusTextNil sets the value for StatusText to be an explicit nil
func (o *ModelImport) SetStatusTextNil() {
	o.StatusText.Set(nil)
}

// UnsetStatusText ensures that no value is present for StatusText, not even an explicit nil
func (o *ModelImport) UnsetStatusText() {
	o.StatusText.Unset()
}

// GetFailedStep returns the FailedStep field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelImport) GetFailedStep() string {
	if o == nil || o.FailedStep.Get() == nil {
		var ret string
		return ret
	}
	return *o.FailedStep.Get()
}

// GetFailedStepOk returns a tuple with the FailedStep field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelImport) GetFailedStepOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FailedStep.Get(), o.FailedStep.IsSet()
}

// HasFailedStep returns a boolean if a field has been set.
func (o *ModelImport) HasFailedStep() bool {
	if o != nil && o.FailedStep.IsSet() {
		return true
	}

	return false
}

// SetFailedStep gets a reference to the given NullableString and assigns it to the FailedStep field.
func (o *ModelImport) SetFailedStep(v string) {
	o.FailedStep.Set(&v)
}
// SetFailedStepNil sets the value for FailedStep to be an explicit nil
func (o *ModelImport) SetFailedStepNil() {
	o.FailedStep.Set(nil)
}

// UnsetFailedStep ensures that no value is present for FailedStep, not even an explicit nil
func (o *ModelImport) UnsetFailedStep() {
	o.FailedStep.Unset()
}

// GetErrorMessage returns the ErrorMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelImport) GetErrorMessage() string {
	if o == nil || o.ErrorMessage.Get() == nil {
		var ret string
		return ret
	}
	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelImport) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// HasErrorMessage returns a boolean if a field has been set.
func (o *ModelImport) HasErrorMessage() bool {
	if o != nil && o.ErrorMessage.IsSet() {
		return true
	}

	return false
}

// SetErrorMessage gets a reference to the given NullableString and assigns it to the ErrorMessage field.
func (o *ModelImport) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}
// SetErrorMessageNil sets the value for ErrorMessage to be an explicit nil
func (o *ModelImport) SetErrorMessageNil() {
	o.ErrorMessage.Set(nil)
}

// UnsetErrorMessage ensures that no value is present for ErrorMessage, not even an explicit nil
func (o *ModelImport) UnsetErrorMessage() {
	o.ErrorMessage.Unset()
}

// GetImportPercent returns the ImportPercent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelImport) GetImportPercent() int32 {
	if o == nil || o.ImportPercent.Get() == nil {
		var ret int32
		return ret
	}
	return *o.ImportPercent.Get()
}

// GetImportPercentOk returns a tuple with the ImportPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelImport) GetImportPercentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ImportPercent.Get(), o.ImportPercent.IsSet()
}

// HasImportPercent returns a boolean if a field has been set.
func (o *ModelImport) HasImportPercent() bool {
	if o != nil && o.ImportPercent.IsSet() {
		return true
	}

	return false
}

// SetImportPercent gets a reference to the given NullableInt32 and assigns it to the ImportPercent field.
func (o *ModelImport) SetImportPercent(v int32) {
	o.ImportPercent.Set(&v)
}
// SetImportPercentNil sets the value for ImportPercent to be an explicit nil
func (o *ModelImport) SetImportPercentNil() {
	o.ImportPercent.Set(nil)
}

// UnsetImportPercent ensures that no value is present for ImportPercent, not even an explicit nil
func (o *ModelImport) UnsetImportPercent() {
	o.ImportPercent.Unset()
}

// GetCommitCount returns the CommitCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelImport) GetCommitCount() int32 {
	if o == nil || o.CommitCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.CommitCount.Get()
}

// GetCommitCountOk returns a tuple with the CommitCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelImport) GetCommitCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CommitCount.Get(), o.CommitCount.IsSet()
}

// HasCommitCount returns a boolean if a field has been set.
func (o *ModelImport) HasCommitCount() bool {
	if o != nil && o.CommitCount.IsSet() {
		return true
	}

	return false
}

// SetCommitCount gets a reference to the given NullableInt32 and assigns it to the CommitCount field.
func (o *ModelImport) SetCommitCount(v int32) {
	o.CommitCount.Set(&v)
}
// SetCommitCountNil sets the value for CommitCount to be an explicit nil
func (o *ModelImport) SetCommitCountNil() {
	o.CommitCount.Set(nil)
}

// UnsetCommitCount ensures that no value is present for CommitCount, not even an explicit nil
func (o *ModelImport) UnsetCommitCount() {
	o.CommitCount.Unset()
}

// GetPushPercent returns the PushPercent field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelImport) GetPushPercent() int32 {
	if o == nil || o.PushPercent.Get() == nil {
		var ret int32
		return ret
	}
	return *o.PushPercent.Get()
}

// GetPushPercentOk returns a tuple with the PushPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelImport) GetPushPercentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PushPercent.Get(), o.PushPercent.IsSet()
}

// HasPushPercent returns a boolean if a field has been set.
func (o *ModelImport) HasPushPercent() bool {
	if o != nil && o.PushPercent.IsSet() {
		return true
	}

	return false
}

// SetPushPercent gets a reference to the given NullableInt32 and assigns it to the PushPercent field.
func (o *ModelImport) SetPushPercent(v int32) {
	o.PushPercent.Set(&v)
}
// SetPushPercentNil sets the value for PushPercent to be an explicit nil
func (o *ModelImport) SetPushPercentNil() {
	o.PushPercent.Set(nil)
}

// UnsetPushPercent ensures that no value is present for PushPercent, not even an explicit nil
func (o *ModelImport) UnsetPushPercent() {
	o.PushPercent.Unset()
}

// GetHasLargeFiles returns the HasLargeFiles field value if set, zero value otherwise.
func (o *ModelImport) GetHasLargeFiles() bool {
	if o == nil || o.HasLargeFiles == nil {
		var ret bool
		return ret
	}
	return *o.HasLargeFiles
}

// GetHasLargeFilesOk returns a tuple with the HasLargeFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetHasLargeFilesOk() (*bool, bool) {
	if o == nil || o.HasLargeFiles == nil {
		return nil, false
	}
	return o.HasLargeFiles, true
}

// HasHasLargeFiles returns a boolean if a field has been set.
func (o *ModelImport) HasHasLargeFiles() bool {
	if o != nil && o.HasLargeFiles != nil {
		return true
	}

	return false
}

// SetHasLargeFiles gets a reference to the given bool and assigns it to the HasLargeFiles field.
func (o *ModelImport) SetHasLargeFiles(v bool) {
	o.HasLargeFiles = &v
}

// GetLargeFilesSize returns the LargeFilesSize field value if set, zero value otherwise.
func (o *ModelImport) GetLargeFilesSize() int32 {
	if o == nil || o.LargeFilesSize == nil {
		var ret int32
		return ret
	}
	return *o.LargeFilesSize
}

// GetLargeFilesSizeOk returns a tuple with the LargeFilesSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetLargeFilesSizeOk() (*int32, bool) {
	if o == nil || o.LargeFilesSize == nil {
		return nil, false
	}
	return o.LargeFilesSize, true
}

// HasLargeFilesSize returns a boolean if a field has been set.
func (o *ModelImport) HasLargeFilesSize() bool {
	if o != nil && o.LargeFilesSize != nil {
		return true
	}

	return false
}

// SetLargeFilesSize gets a reference to the given int32 and assigns it to the LargeFilesSize field.
func (o *ModelImport) SetLargeFilesSize(v int32) {
	o.LargeFilesSize = &v
}

// GetLargeFilesCount returns the LargeFilesCount field value if set, zero value otherwise.
func (o *ModelImport) GetLargeFilesCount() int32 {
	if o == nil || o.LargeFilesCount == nil {
		var ret int32
		return ret
	}
	return *o.LargeFilesCount
}

// GetLargeFilesCountOk returns a tuple with the LargeFilesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetLargeFilesCountOk() (*int32, bool) {
	if o == nil || o.LargeFilesCount == nil {
		return nil, false
	}
	return o.LargeFilesCount, true
}

// HasLargeFilesCount returns a boolean if a field has been set.
func (o *ModelImport) HasLargeFilesCount() bool {
	if o != nil && o.LargeFilesCount != nil {
		return true
	}

	return false
}

// SetLargeFilesCount gets a reference to the given int32 and assigns it to the LargeFilesCount field.
func (o *ModelImport) SetLargeFilesCount(v int32) {
	o.LargeFilesCount = &v
}

// GetProjectChoices returns the ProjectChoices field value if set, zero value otherwise.
func (o *ModelImport) GetProjectChoices() []ImportProjectChoicesInner {
	if o == nil || o.ProjectChoices == nil {
		var ret []ImportProjectChoicesInner
		return ret
	}
	return o.ProjectChoices
}

// GetProjectChoicesOk returns a tuple with the ProjectChoices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetProjectChoicesOk() ([]ImportProjectChoicesInner, bool) {
	if o == nil || o.ProjectChoices == nil {
		return nil, false
	}
	return o.ProjectChoices, true
}

// HasProjectChoices returns a boolean if a field has been set.
func (o *ModelImport) HasProjectChoices() bool {
	if o != nil && o.ProjectChoices != nil {
		return true
	}

	return false
}

// SetProjectChoices gets a reference to the given []ImportProjectChoicesInner and assigns it to the ProjectChoices field.
func (o *ModelImport) SetProjectChoices(v []ImportProjectChoicesInner) {
	o.ProjectChoices = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ModelImport) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ModelImport) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ModelImport) SetMessage(v string) {
	o.Message = &v
}

// GetAuthorsCount returns the AuthorsCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ModelImport) GetAuthorsCount() int32 {
	if o == nil || o.AuthorsCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.AuthorsCount.Get()
}

// GetAuthorsCountOk returns a tuple with the AuthorsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ModelImport) GetAuthorsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.AuthorsCount.Get(), o.AuthorsCount.IsSet()
}

// HasAuthorsCount returns a boolean if a field has been set.
func (o *ModelImport) HasAuthorsCount() bool {
	if o != nil && o.AuthorsCount.IsSet() {
		return true
	}

	return false
}

// SetAuthorsCount gets a reference to the given NullableInt32 and assigns it to the AuthorsCount field.
func (o *ModelImport) SetAuthorsCount(v int32) {
	o.AuthorsCount.Set(&v)
}
// SetAuthorsCountNil sets the value for AuthorsCount to be an explicit nil
func (o *ModelImport) SetAuthorsCountNil() {
	o.AuthorsCount.Set(nil)
}

// UnsetAuthorsCount ensures that no value is present for AuthorsCount, not even an explicit nil
func (o *ModelImport) UnsetAuthorsCount() {
	o.AuthorsCount.Unset()
}

// GetUrl returns the Url field value
func (o *ModelImport) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *ModelImport) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *ModelImport) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *ModelImport) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *ModelImport) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *ModelImport) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetAuthorsUrl returns the AuthorsUrl field value
func (o *ModelImport) GetAuthorsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthorsUrl
}

// GetAuthorsUrlOk returns a tuple with the AuthorsUrl field value
// and a boolean to check if the value has been set.
func (o *ModelImport) GetAuthorsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorsUrl, true
}

// SetAuthorsUrl sets field value
func (o *ModelImport) SetAuthorsUrl(v string) {
	o.AuthorsUrl = v
}

// GetRepositoryUrl returns the RepositoryUrl field value
func (o *ModelImport) GetRepositoryUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositoryUrl
}

// GetRepositoryUrlOk returns a tuple with the RepositoryUrl field value
// and a boolean to check if the value has been set.
func (o *ModelImport) GetRepositoryUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositoryUrl, true
}

// SetRepositoryUrl sets field value
func (o *ModelImport) SetRepositoryUrl(v string) {
	o.RepositoryUrl = v
}

// GetSvnRoot returns the SvnRoot field value if set, zero value otherwise.
func (o *ModelImport) GetSvnRoot() string {
	if o == nil || o.SvnRoot == nil {
		var ret string
		return ret
	}
	return *o.SvnRoot
}

// GetSvnRootOk returns a tuple with the SvnRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelImport) GetSvnRootOk() (*string, bool) {
	if o == nil || o.SvnRoot == nil {
		return nil, false
	}
	return o.SvnRoot, true
}

// HasSvnRoot returns a boolean if a field has been set.
func (o *ModelImport) HasSvnRoot() bool {
	if o != nil && o.SvnRoot != nil {
		return true
	}

	return false
}

// SetSvnRoot gets a reference to the given string and assigns it to the SvnRoot field.
func (o *ModelImport) SetSvnRoot(v string) {
	o.SvnRoot = &v
}

func (o ModelImport) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["vcs"] = o.Vcs.Get()
	}
	if o.UseLfs != nil {
		toSerialize["use_lfs"] = o.UseLfs
	}
	if true {
		toSerialize["vcs_url"] = o.VcsUrl
	}
	if o.SvcRoot != nil {
		toSerialize["svc_root"] = o.SvcRoot
	}
	if o.TfvcProject != nil {
		toSerialize["tfvc_project"] = o.TfvcProject
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if o.StatusText.IsSet() {
		toSerialize["status_text"] = o.StatusText.Get()
	}
	if o.FailedStep.IsSet() {
		toSerialize["failed_step"] = o.FailedStep.Get()
	}
	if o.ErrorMessage.IsSet() {
		toSerialize["error_message"] = o.ErrorMessage.Get()
	}
	if o.ImportPercent.IsSet() {
		toSerialize["import_percent"] = o.ImportPercent.Get()
	}
	if o.CommitCount.IsSet() {
		toSerialize["commit_count"] = o.CommitCount.Get()
	}
	if o.PushPercent.IsSet() {
		toSerialize["push_percent"] = o.PushPercent.Get()
	}
	if o.HasLargeFiles != nil {
		toSerialize["has_large_files"] = o.HasLargeFiles
	}
	if o.LargeFilesSize != nil {
		toSerialize["large_files_size"] = o.LargeFilesSize
	}
	if o.LargeFilesCount != nil {
		toSerialize["large_files_count"] = o.LargeFilesCount
	}
	if o.ProjectChoices != nil {
		toSerialize["project_choices"] = o.ProjectChoices
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.AuthorsCount.IsSet() {
		toSerialize["authors_count"] = o.AuthorsCount.Get()
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["authors_url"] = o.AuthorsUrl
	}
	if true {
		toSerialize["repository_url"] = o.RepositoryUrl
	}
	if o.SvnRoot != nil {
		toSerialize["svn_root"] = o.SvnRoot
	}
	return json.Marshal(toSerialize)
}

type NullableModelImport struct {
	value *ModelImport
	isSet bool
}

func (v NullableModelImport) Get() *ModelImport {
	return v.value
}

func (v *NullableModelImport) Set(val *ModelImport) {
	v.value = val
	v.isSet = true
}

func (v NullableModelImport) IsSet() bool {
	return v.isSet
}

func (v *NullableModelImport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelImport(val *ModelImport) *NullableModelImport {
	return &NullableModelImport{value: val, isSet: true}
}

func (v NullableModelImport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelImport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


