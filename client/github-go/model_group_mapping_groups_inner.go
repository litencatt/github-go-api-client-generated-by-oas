/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GroupMappingGroupsInner struct for GroupMappingGroupsInner
type GroupMappingGroupsInner struct {
	// The ID of the group
	GroupId string `json:"group_id"`
	// The name of the group
	GroupName string `json:"group_name"`
	// a description of the group
	GroupDescription string `json:"group_description"`
	// synchronization status for this group mapping
	Status *string `json:"status,omitempty"`
	// the time of the last sync for this group-mapping
	SyncedAt NullableString `json:"synced_at,omitempty"`
}

// NewGroupMappingGroupsInner instantiates a new GroupMappingGroupsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGroupMappingGroupsInner(groupId string, groupName string, groupDescription string) *GroupMappingGroupsInner {
	this := GroupMappingGroupsInner{}
	this.GroupId = groupId
	this.GroupName = groupName
	this.GroupDescription = groupDescription
	return &this
}

// NewGroupMappingGroupsInnerWithDefaults instantiates a new GroupMappingGroupsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGroupMappingGroupsInnerWithDefaults() *GroupMappingGroupsInner {
	this := GroupMappingGroupsInner{}
	return &this
}

// GetGroupId returns the GroupId field value
func (o *GroupMappingGroupsInner) GetGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *GroupMappingGroupsInner) GetGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *GroupMappingGroupsInner) SetGroupId(v string) {
	o.GroupId = v
}

// GetGroupName returns the GroupName field value
func (o *GroupMappingGroupsInner) GetGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value
// and a boolean to check if the value has been set.
func (o *GroupMappingGroupsInner) GetGroupNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupName, true
}

// SetGroupName sets field value
func (o *GroupMappingGroupsInner) SetGroupName(v string) {
	o.GroupName = v
}

// GetGroupDescription returns the GroupDescription field value
func (o *GroupMappingGroupsInner) GetGroupDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupDescription
}

// GetGroupDescriptionOk returns a tuple with the GroupDescription field value
// and a boolean to check if the value has been set.
func (o *GroupMappingGroupsInner) GetGroupDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupDescription, true
}

// SetGroupDescription sets field value
func (o *GroupMappingGroupsInner) SetGroupDescription(v string) {
	o.GroupDescription = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GroupMappingGroupsInner) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GroupMappingGroupsInner) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GroupMappingGroupsInner) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GroupMappingGroupsInner) SetStatus(v string) {
	o.Status = &v
}

// GetSyncedAt returns the SyncedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GroupMappingGroupsInner) GetSyncedAt() string {
	if o == nil || o.SyncedAt.Get() == nil {
		var ret string
		return ret
	}
	return *o.SyncedAt.Get()
}

// GetSyncedAtOk returns a tuple with the SyncedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GroupMappingGroupsInner) GetSyncedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SyncedAt.Get(), o.SyncedAt.IsSet()
}

// HasSyncedAt returns a boolean if a field has been set.
func (o *GroupMappingGroupsInner) HasSyncedAt() bool {
	if o != nil && o.SyncedAt.IsSet() {
		return true
	}

	return false
}

// SetSyncedAt gets a reference to the given NullableString and assigns it to the SyncedAt field.
func (o *GroupMappingGroupsInner) SetSyncedAt(v string) {
	o.SyncedAt.Set(&v)
}
// SetSyncedAtNil sets the value for SyncedAt to be an explicit nil
func (o *GroupMappingGroupsInner) SetSyncedAtNil() {
	o.SyncedAt.Set(nil)
}

// UnsetSyncedAt ensures that no value is present for SyncedAt, not even an explicit nil
func (o *GroupMappingGroupsInner) UnsetSyncedAt() {
	o.SyncedAt.Unset()
}

func (o GroupMappingGroupsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["group_id"] = o.GroupId
	}
	if true {
		toSerialize["group_name"] = o.GroupName
	}
	if true {
		toSerialize["group_description"] = o.GroupDescription
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.SyncedAt.IsSet() {
		toSerialize["synced_at"] = o.SyncedAt.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableGroupMappingGroupsInner struct {
	value *GroupMappingGroupsInner
	isSet bool
}

func (v NullableGroupMappingGroupsInner) Get() *GroupMappingGroupsInner {
	return v.value
}

func (v *NullableGroupMappingGroupsInner) Set(val *GroupMappingGroupsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupMappingGroupsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupMappingGroupsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupMappingGroupsInner(val *GroupMappingGroupsInner) *NullableGroupMappingGroupsInner {
	return &NullableGroupMappingGroupsInner{value: val, isSet: true}
}

func (v NullableGroupMappingGroupsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupMappingGroupsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


