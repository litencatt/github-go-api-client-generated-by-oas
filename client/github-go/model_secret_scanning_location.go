/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// SecretScanningLocation struct for SecretScanningLocation
type SecretScanningLocation struct {
	// The location type. Because secrets may be found in different types of resources (ie. code, comments, issues), this field identifies the type of resource where the secret was found.
	Type string `json:"type"`
	Details SecretScanningLocationDetails `json:"details"`
}

// NewSecretScanningLocation instantiates a new SecretScanningLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSecretScanningLocation(type_ string, details SecretScanningLocationDetails) *SecretScanningLocation {
	this := SecretScanningLocation{}
	this.Type = type_
	this.Details = details
	return &this
}

// NewSecretScanningLocationWithDefaults instantiates a new SecretScanningLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSecretScanningLocationWithDefaults() *SecretScanningLocation {
	this := SecretScanningLocation{}
	return &this
}

// GetType returns the Type field value
func (o *SecretScanningLocation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *SecretScanningLocation) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *SecretScanningLocation) SetType(v string) {
	o.Type = v
}

// GetDetails returns the Details field value
func (o *SecretScanningLocation) GetDetails() SecretScanningLocationDetails {
	if o == nil {
		var ret SecretScanningLocationDetails
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *SecretScanningLocation) GetDetailsOk() (*SecretScanningLocationDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *SecretScanningLocation) SetDetails(v SecretScanningLocationDetails) {
	o.Details = v
}

func (o SecretScanningLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["details"] = o.Details
	}
	return json.Marshal(toSerialize)
}

type NullableSecretScanningLocation struct {
	value *SecretScanningLocation
	isSet bool
}

func (v NullableSecretScanningLocation) Get() *SecretScanningLocation {
	return v.value
}

func (v *NullableSecretScanningLocation) Set(val *SecretScanningLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableSecretScanningLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableSecretScanningLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSecretScanningLocation(val *SecretScanningLocation) *NullableSecretScanningLocation {
	return &NullableSecretScanningLocation{value: val, isSet: true}
}

func (v NullableSecretScanningLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSecretScanningLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


