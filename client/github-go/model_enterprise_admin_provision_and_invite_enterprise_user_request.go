/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// EnterpriseAdminProvisionAndInviteEnterpriseUserRequest struct for EnterpriseAdminProvisionAndInviteEnterpriseUserRequest
type EnterpriseAdminProvisionAndInviteEnterpriseUserRequest struct {
	// The SCIM schema URIs.
	Schemas []string `json:"schemas"`
	// The username for the user.
	UserName string `json:"userName"`
	Name EnterpriseAdminProvisionAndInviteEnterpriseUserRequestName `json:"name"`
	// List of user emails.
	Emails []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestEmailsInner `json:"emails"`
	// List of SCIM group IDs the user is a member of.
	Groups []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestGroupsInner `json:"groups,omitempty"`
}

// NewEnterpriseAdminProvisionAndInviteEnterpriseUserRequest instantiates a new EnterpriseAdminProvisionAndInviteEnterpriseUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnterpriseAdminProvisionAndInviteEnterpriseUserRequest(schemas []string, userName string, name EnterpriseAdminProvisionAndInviteEnterpriseUserRequestName, emails []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestEmailsInner) *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest {
	this := EnterpriseAdminProvisionAndInviteEnterpriseUserRequest{}
	this.Schemas = schemas
	this.UserName = userName
	this.Name = name
	this.Emails = emails
	return &this
}

// NewEnterpriseAdminProvisionAndInviteEnterpriseUserRequestWithDefaults instantiates a new EnterpriseAdminProvisionAndInviteEnterpriseUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnterpriseAdminProvisionAndInviteEnterpriseUserRequestWithDefaults() *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest {
	this := EnterpriseAdminProvisionAndInviteEnterpriseUserRequest{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetSchemas() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetSchemasOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) SetSchemas(v []string) {
	o.Schemas = v
}

// GetUserName returns the UserName field value
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetUserNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) SetUserName(v string) {
	o.UserName = v
}

// GetName returns the Name field value
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetName() EnterpriseAdminProvisionAndInviteEnterpriseUserRequestName {
	if o == nil {
		var ret EnterpriseAdminProvisionAndInviteEnterpriseUserRequestName
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetNameOk() (*EnterpriseAdminProvisionAndInviteEnterpriseUserRequestName, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) SetName(v EnterpriseAdminProvisionAndInviteEnterpriseUserRequestName) {
	o.Name = v
}

// GetEmails returns the Emails field value
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetEmails() []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestEmailsInner {
	if o == nil {
		var ret []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestEmailsInner
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetEmailsOk() ([]EnterpriseAdminProvisionAndInviteEnterpriseUserRequestEmailsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Emails, true
}

// SetEmails sets field value
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) SetEmails(v []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestEmailsInner) {
	o.Emails = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetGroups() []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestGroupsInner {
	if o == nil || o.Groups == nil {
		var ret []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestGroupsInner
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) GetGroupsOk() ([]EnterpriseAdminProvisionAndInviteEnterpriseUserRequestGroupsInner, bool) {
	if o == nil || o.Groups == nil {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) HasGroups() bool {
	if o != nil && o.Groups != nil {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestGroupsInner and assigns it to the Groups field.
func (o *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) SetGroups(v []EnterpriseAdminProvisionAndInviteEnterpriseUserRequestGroupsInner) {
	o.Groups = v
}

func (o EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["userName"] = o.UserName
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["emails"] = o.Emails
	}
	if o.Groups != nil {
		toSerialize["groups"] = o.Groups
	}
	return json.Marshal(toSerialize)
}

type NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest struct {
	value *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest
	isSet bool
}

func (v NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest) Get() *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest {
	return v.value
}

func (v *NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest) Set(val *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest(val *EnterpriseAdminProvisionAndInviteEnterpriseUserRequest) *NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest {
	return &NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest{value: val, isSet: true}
}

func (v NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnterpriseAdminProvisionAndInviteEnterpriseUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


