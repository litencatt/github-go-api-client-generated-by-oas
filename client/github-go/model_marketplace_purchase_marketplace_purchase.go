/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// MarketplacePurchaseMarketplacePurchase struct for MarketplacePurchaseMarketplacePurchase
type MarketplacePurchaseMarketplacePurchase struct {
	BillingCycle *string `json:"billing_cycle,omitempty"`
	NextBillingDate NullableString `json:"next_billing_date,omitempty"`
	IsInstalled *bool `json:"is_installed,omitempty"`
	UnitCount NullableInt32 `json:"unit_count,omitempty"`
	OnFreeTrial *bool `json:"on_free_trial,omitempty"`
	FreeTrialEndsOn NullableString `json:"free_trial_ends_on,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Plan *MarketplaceListingPlan `json:"plan,omitempty"`
}

// NewMarketplacePurchaseMarketplacePurchase instantiates a new MarketplacePurchaseMarketplacePurchase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketplacePurchaseMarketplacePurchase() *MarketplacePurchaseMarketplacePurchase {
	this := MarketplacePurchaseMarketplacePurchase{}
	return &this
}

// NewMarketplacePurchaseMarketplacePurchaseWithDefaults instantiates a new MarketplacePurchaseMarketplacePurchase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketplacePurchaseMarketplacePurchaseWithDefaults() *MarketplacePurchaseMarketplacePurchase {
	this := MarketplacePurchaseMarketplacePurchase{}
	return &this
}

// GetBillingCycle returns the BillingCycle field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePurchase) GetBillingCycle() string {
	if o == nil || o.BillingCycle == nil {
		var ret string
		return ret
	}
	return *o.BillingCycle
}

// GetBillingCycleOk returns a tuple with the BillingCycle field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePurchase) GetBillingCycleOk() (*string, bool) {
	if o == nil || o.BillingCycle == nil {
		return nil, false
	}
	return o.BillingCycle, true
}

// HasBillingCycle returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePurchase) HasBillingCycle() bool {
	if o != nil && o.BillingCycle != nil {
		return true
	}

	return false
}

// SetBillingCycle gets a reference to the given string and assigns it to the BillingCycle field.
func (o *MarketplacePurchaseMarketplacePurchase) SetBillingCycle(v string) {
	o.BillingCycle = &v
}

// GetNextBillingDate returns the NextBillingDate field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketplacePurchaseMarketplacePurchase) GetNextBillingDate() string {
	if o == nil || o.NextBillingDate.Get() == nil {
		var ret string
		return ret
	}
	return *o.NextBillingDate.Get()
}

// GetNextBillingDateOk returns a tuple with the NextBillingDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketplacePurchaseMarketplacePurchase) GetNextBillingDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextBillingDate.Get(), o.NextBillingDate.IsSet()
}

// HasNextBillingDate returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePurchase) HasNextBillingDate() bool {
	if o != nil && o.NextBillingDate.IsSet() {
		return true
	}

	return false
}

// SetNextBillingDate gets a reference to the given NullableString and assigns it to the NextBillingDate field.
func (o *MarketplacePurchaseMarketplacePurchase) SetNextBillingDate(v string) {
	o.NextBillingDate.Set(&v)
}
// SetNextBillingDateNil sets the value for NextBillingDate to be an explicit nil
func (o *MarketplacePurchaseMarketplacePurchase) SetNextBillingDateNil() {
	o.NextBillingDate.Set(nil)
}

// UnsetNextBillingDate ensures that no value is present for NextBillingDate, not even an explicit nil
func (o *MarketplacePurchaseMarketplacePurchase) UnsetNextBillingDate() {
	o.NextBillingDate.Unset()
}

// GetIsInstalled returns the IsInstalled field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePurchase) GetIsInstalled() bool {
	if o == nil || o.IsInstalled == nil {
		var ret bool
		return ret
	}
	return *o.IsInstalled
}

// GetIsInstalledOk returns a tuple with the IsInstalled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePurchase) GetIsInstalledOk() (*bool, bool) {
	if o == nil || o.IsInstalled == nil {
		return nil, false
	}
	return o.IsInstalled, true
}

// HasIsInstalled returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePurchase) HasIsInstalled() bool {
	if o != nil && o.IsInstalled != nil {
		return true
	}

	return false
}

// SetIsInstalled gets a reference to the given bool and assigns it to the IsInstalled field.
func (o *MarketplacePurchaseMarketplacePurchase) SetIsInstalled(v bool) {
	o.IsInstalled = &v
}

// GetUnitCount returns the UnitCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketplacePurchaseMarketplacePurchase) GetUnitCount() int32 {
	if o == nil || o.UnitCount.Get() == nil {
		var ret int32
		return ret
	}
	return *o.UnitCount.Get()
}

// GetUnitCountOk returns a tuple with the UnitCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketplacePurchaseMarketplacePurchase) GetUnitCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.UnitCount.Get(), o.UnitCount.IsSet()
}

// HasUnitCount returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePurchase) HasUnitCount() bool {
	if o != nil && o.UnitCount.IsSet() {
		return true
	}

	return false
}

// SetUnitCount gets a reference to the given NullableInt32 and assigns it to the UnitCount field.
func (o *MarketplacePurchaseMarketplacePurchase) SetUnitCount(v int32) {
	o.UnitCount.Set(&v)
}
// SetUnitCountNil sets the value for UnitCount to be an explicit nil
func (o *MarketplacePurchaseMarketplacePurchase) SetUnitCountNil() {
	o.UnitCount.Set(nil)
}

// UnsetUnitCount ensures that no value is present for UnitCount, not even an explicit nil
func (o *MarketplacePurchaseMarketplacePurchase) UnsetUnitCount() {
	o.UnitCount.Unset()
}

// GetOnFreeTrial returns the OnFreeTrial field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePurchase) GetOnFreeTrial() bool {
	if o == nil || o.OnFreeTrial == nil {
		var ret bool
		return ret
	}
	return *o.OnFreeTrial
}

// GetOnFreeTrialOk returns a tuple with the OnFreeTrial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePurchase) GetOnFreeTrialOk() (*bool, bool) {
	if o == nil || o.OnFreeTrial == nil {
		return nil, false
	}
	return o.OnFreeTrial, true
}

// HasOnFreeTrial returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePurchase) HasOnFreeTrial() bool {
	if o != nil && o.OnFreeTrial != nil {
		return true
	}

	return false
}

// SetOnFreeTrial gets a reference to the given bool and assigns it to the OnFreeTrial field.
func (o *MarketplacePurchaseMarketplacePurchase) SetOnFreeTrial(v bool) {
	o.OnFreeTrial = &v
}

// GetFreeTrialEndsOn returns the FreeTrialEndsOn field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MarketplacePurchaseMarketplacePurchase) GetFreeTrialEndsOn() string {
	if o == nil || o.FreeTrialEndsOn.Get() == nil {
		var ret string
		return ret
	}
	return *o.FreeTrialEndsOn.Get()
}

// GetFreeTrialEndsOnOk returns a tuple with the FreeTrialEndsOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MarketplacePurchaseMarketplacePurchase) GetFreeTrialEndsOnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.FreeTrialEndsOn.Get(), o.FreeTrialEndsOn.IsSet()
}

// HasFreeTrialEndsOn returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePurchase) HasFreeTrialEndsOn() bool {
	if o != nil && o.FreeTrialEndsOn.IsSet() {
		return true
	}

	return false
}

// SetFreeTrialEndsOn gets a reference to the given NullableString and assigns it to the FreeTrialEndsOn field.
func (o *MarketplacePurchaseMarketplacePurchase) SetFreeTrialEndsOn(v string) {
	o.FreeTrialEndsOn.Set(&v)
}
// SetFreeTrialEndsOnNil sets the value for FreeTrialEndsOn to be an explicit nil
func (o *MarketplacePurchaseMarketplacePurchase) SetFreeTrialEndsOnNil() {
	o.FreeTrialEndsOn.Set(nil)
}

// UnsetFreeTrialEndsOn ensures that no value is present for FreeTrialEndsOn, not even an explicit nil
func (o *MarketplacePurchaseMarketplacePurchase) UnsetFreeTrialEndsOn() {
	o.FreeTrialEndsOn.Unset()
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePurchase) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePurchase) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePurchase) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *MarketplacePurchaseMarketplacePurchase) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetPlan returns the Plan field value if set, zero value otherwise.
func (o *MarketplacePurchaseMarketplacePurchase) GetPlan() MarketplaceListingPlan {
	if o == nil || o.Plan == nil {
		var ret MarketplaceListingPlan
		return ret
	}
	return *o.Plan
}

// GetPlanOk returns a tuple with the Plan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketplacePurchaseMarketplacePurchase) GetPlanOk() (*MarketplaceListingPlan, bool) {
	if o == nil || o.Plan == nil {
		return nil, false
	}
	return o.Plan, true
}

// HasPlan returns a boolean if a field has been set.
func (o *MarketplacePurchaseMarketplacePurchase) HasPlan() bool {
	if o != nil && o.Plan != nil {
		return true
	}

	return false
}

// SetPlan gets a reference to the given MarketplaceListingPlan and assigns it to the Plan field.
func (o *MarketplacePurchaseMarketplacePurchase) SetPlan(v MarketplaceListingPlan) {
	o.Plan = &v
}

func (o MarketplacePurchaseMarketplacePurchase) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BillingCycle != nil {
		toSerialize["billing_cycle"] = o.BillingCycle
	}
	if o.NextBillingDate.IsSet() {
		toSerialize["next_billing_date"] = o.NextBillingDate.Get()
	}
	if o.IsInstalled != nil {
		toSerialize["is_installed"] = o.IsInstalled
	}
	if o.UnitCount.IsSet() {
		toSerialize["unit_count"] = o.UnitCount.Get()
	}
	if o.OnFreeTrial != nil {
		toSerialize["on_free_trial"] = o.OnFreeTrial
	}
	if o.FreeTrialEndsOn.IsSet() {
		toSerialize["free_trial_ends_on"] = o.FreeTrialEndsOn.Get()
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Plan != nil {
		toSerialize["plan"] = o.Plan
	}
	return json.Marshal(toSerialize)
}

type NullableMarketplacePurchaseMarketplacePurchase struct {
	value *MarketplacePurchaseMarketplacePurchase
	isSet bool
}

func (v NullableMarketplacePurchaseMarketplacePurchase) Get() *MarketplacePurchaseMarketplacePurchase {
	return v.value
}

func (v *NullableMarketplacePurchaseMarketplacePurchase) Set(val *MarketplacePurchaseMarketplacePurchase) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketplacePurchaseMarketplacePurchase) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketplacePurchaseMarketplacePurchase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketplacePurchaseMarketplacePurchase(val *MarketplacePurchaseMarketplacePurchase) *NullableMarketplacePurchaseMarketplacePurchase {
	return &NullableMarketplacePurchaseMarketplacePurchase{value: val, isSet: true}
}

func (v NullableMarketplacePurchaseMarketplacePurchase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketplacePurchaseMarketplacePurchase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


