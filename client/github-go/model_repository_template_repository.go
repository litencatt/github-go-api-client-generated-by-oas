/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// RepositoryTemplateRepository struct for RepositoryTemplateRepository
type RepositoryTemplateRepository struct {
	Id *int32 `json:"id,omitempty"`
	NodeId *string `json:"node_id,omitempty"`
	Name *string `json:"name,omitempty"`
	FullName *string `json:"full_name,omitempty"`
	Owner *RepositoryTemplateRepositoryOwner `json:"owner,omitempty"`
	Private *bool `json:"private,omitempty"`
	HtmlUrl *string `json:"html_url,omitempty"`
	Description *string `json:"description,omitempty"`
	Fork *bool `json:"fork,omitempty"`
	Url *string `json:"url,omitempty"`
	ArchiveUrl *string `json:"archive_url,omitempty"`
	AssigneesUrl *string `json:"assignees_url,omitempty"`
	BlobsUrl *string `json:"blobs_url,omitempty"`
	BranchesUrl *string `json:"branches_url,omitempty"`
	CollaboratorsUrl *string `json:"collaborators_url,omitempty"`
	CommentsUrl *string `json:"comments_url,omitempty"`
	CommitsUrl *string `json:"commits_url,omitempty"`
	CompareUrl *string `json:"compare_url,omitempty"`
	ContentsUrl *string `json:"contents_url,omitempty"`
	ContributorsUrl *string `json:"contributors_url,omitempty"`
	DeploymentsUrl *string `json:"deployments_url,omitempty"`
	DownloadsUrl *string `json:"downloads_url,omitempty"`
	EventsUrl *string `json:"events_url,omitempty"`
	ForksUrl *string `json:"forks_url,omitempty"`
	GitCommitsUrl *string `json:"git_commits_url,omitempty"`
	GitRefsUrl *string `json:"git_refs_url,omitempty"`
	GitTagsUrl *string `json:"git_tags_url,omitempty"`
	GitUrl *string `json:"git_url,omitempty"`
	IssueCommentUrl *string `json:"issue_comment_url,omitempty"`
	IssueEventsUrl *string `json:"issue_events_url,omitempty"`
	IssuesUrl *string `json:"issues_url,omitempty"`
	KeysUrl *string `json:"keys_url,omitempty"`
	LabelsUrl *string `json:"labels_url,omitempty"`
	LanguagesUrl *string `json:"languages_url,omitempty"`
	MergesUrl *string `json:"merges_url,omitempty"`
	MilestonesUrl *string `json:"milestones_url,omitempty"`
	NotificationsUrl *string `json:"notifications_url,omitempty"`
	PullsUrl *string `json:"pulls_url,omitempty"`
	ReleasesUrl *string `json:"releases_url,omitempty"`
	SshUrl *string `json:"ssh_url,omitempty"`
	StargazersUrl *string `json:"stargazers_url,omitempty"`
	StatusesUrl *string `json:"statuses_url,omitempty"`
	SubscribersUrl *string `json:"subscribers_url,omitempty"`
	SubscriptionUrl *string `json:"subscription_url,omitempty"`
	TagsUrl *string `json:"tags_url,omitempty"`
	TeamsUrl *string `json:"teams_url,omitempty"`
	TreesUrl *string `json:"trees_url,omitempty"`
	CloneUrl *string `json:"clone_url,omitempty"`
	MirrorUrl *string `json:"mirror_url,omitempty"`
	HooksUrl *string `json:"hooks_url,omitempty"`
	SvnUrl *string `json:"svn_url,omitempty"`
	Homepage *string `json:"homepage,omitempty"`
	Language *string `json:"language,omitempty"`
	ForksCount *int32 `json:"forks_count,omitempty"`
	StargazersCount *int32 `json:"stargazers_count,omitempty"`
	WatchersCount *int32 `json:"watchers_count,omitempty"`
	Size *int32 `json:"size,omitempty"`
	DefaultBranch *string `json:"default_branch,omitempty"`
	OpenIssuesCount *int32 `json:"open_issues_count,omitempty"`
	IsTemplate *bool `json:"is_template,omitempty"`
	Topics []string `json:"topics,omitempty"`
	HasIssues *bool `json:"has_issues,omitempty"`
	HasProjects *bool `json:"has_projects,omitempty"`
	HasWiki *bool `json:"has_wiki,omitempty"`
	HasPages *bool `json:"has_pages,omitempty"`
	HasDownloads *bool `json:"has_downloads,omitempty"`
	Archived *bool `json:"archived,omitempty"`
	Disabled *bool `json:"disabled,omitempty"`
	Visibility *string `json:"visibility,omitempty"`
	PushedAt *string `json:"pushed_at,omitempty"`
	CreatedAt *string `json:"created_at,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
	Permissions *RepositoryTemplateRepositoryPermissions `json:"permissions,omitempty"`
	AllowRebaseMerge *bool `json:"allow_rebase_merge,omitempty"`
	TempCloneToken *string `json:"temp_clone_token,omitempty"`
	AllowSquashMerge *bool `json:"allow_squash_merge,omitempty"`
	AllowAutoMerge *bool `json:"allow_auto_merge,omitempty"`
	DeleteBranchOnMerge *bool `json:"delete_branch_on_merge,omitempty"`
	AllowUpdateBranch *bool `json:"allow_update_branch,omitempty"`
	UseSquashPrTitleAsDefault *bool `json:"use_squash_pr_title_as_default,omitempty"`
	AllowMergeCommit *bool `json:"allow_merge_commit,omitempty"`
	SubscribersCount *int32 `json:"subscribers_count,omitempty"`
	NetworkCount *int32 `json:"network_count,omitempty"`
}

// NewRepositoryTemplateRepository instantiates a new RepositoryTemplateRepository object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRepositoryTemplateRepository() *RepositoryTemplateRepository {
	this := RepositoryTemplateRepository{}
	return &this
}

// NewRepositoryTemplateRepositoryWithDefaults instantiates a new RepositoryTemplateRepository object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRepositoryTemplateRepositoryWithDefaults() *RepositoryTemplateRepository {
	this := RepositoryTemplateRepository{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetId() int32 {
	if o == nil || o.Id == nil {
		var ret int32
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetIdOk() (*int32, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given int32 and assigns it to the Id field.
func (o *RepositoryTemplateRepository) SetId(v int32) {
	o.Id = &v
}

// GetNodeId returns the NodeId field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetNodeId() string {
	if o == nil || o.NodeId == nil {
		var ret string
		return ret
	}
	return *o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetNodeIdOk() (*string, bool) {
	if o == nil || o.NodeId == nil {
		return nil, false
	}
	return o.NodeId, true
}

// HasNodeId returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasNodeId() bool {
	if o != nil && o.NodeId != nil {
		return true
	}

	return false
}

// SetNodeId gets a reference to the given string and assigns it to the NodeId field.
func (o *RepositoryTemplateRepository) SetNodeId(v string) {
	o.NodeId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *RepositoryTemplateRepository) SetName(v string) {
	o.Name = &v
}

// GetFullName returns the FullName field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetFullName() string {
	if o == nil || o.FullName == nil {
		var ret string
		return ret
	}
	return *o.FullName
}

// GetFullNameOk returns a tuple with the FullName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetFullNameOk() (*string, bool) {
	if o == nil || o.FullName == nil {
		return nil, false
	}
	return o.FullName, true
}

// HasFullName returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasFullName() bool {
	if o != nil && o.FullName != nil {
		return true
	}

	return false
}

// SetFullName gets a reference to the given string and assigns it to the FullName field.
func (o *RepositoryTemplateRepository) SetFullName(v string) {
	o.FullName = &v
}

// GetOwner returns the Owner field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetOwner() RepositoryTemplateRepositoryOwner {
	if o == nil || o.Owner == nil {
		var ret RepositoryTemplateRepositoryOwner
		return ret
	}
	return *o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetOwnerOk() (*RepositoryTemplateRepositoryOwner, bool) {
	if o == nil || o.Owner == nil {
		return nil, false
	}
	return o.Owner, true
}

// HasOwner returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasOwner() bool {
	if o != nil && o.Owner != nil {
		return true
	}

	return false
}

// SetOwner gets a reference to the given RepositoryTemplateRepositoryOwner and assigns it to the Owner field.
func (o *RepositoryTemplateRepository) SetOwner(v RepositoryTemplateRepositoryOwner) {
	o.Owner = &v
}

// GetPrivate returns the Private field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetPrivate() bool {
	if o == nil || o.Private == nil {
		var ret bool
		return ret
	}
	return *o.Private
}

// GetPrivateOk returns a tuple with the Private field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetPrivateOk() (*bool, bool) {
	if o == nil || o.Private == nil {
		return nil, false
	}
	return o.Private, true
}

// HasPrivate returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasPrivate() bool {
	if o != nil && o.Private != nil {
		return true
	}

	return false
}

// SetPrivate gets a reference to the given bool and assigns it to the Private field.
func (o *RepositoryTemplateRepository) SetPrivate(v bool) {
	o.Private = &v
}

// GetHtmlUrl returns the HtmlUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetHtmlUrl() string {
	if o == nil || o.HtmlUrl == nil {
		var ret string
		return ret
	}
	return *o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetHtmlUrlOk() (*string, bool) {
	if o == nil || o.HtmlUrl == nil {
		return nil, false
	}
	return o.HtmlUrl, true
}

// HasHtmlUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasHtmlUrl() bool {
	if o != nil && o.HtmlUrl != nil {
		return true
	}

	return false
}

// SetHtmlUrl gets a reference to the given string and assigns it to the HtmlUrl field.
func (o *RepositoryTemplateRepository) SetHtmlUrl(v string) {
	o.HtmlUrl = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RepositoryTemplateRepository) SetDescription(v string) {
	o.Description = &v
}

// GetFork returns the Fork field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetFork() bool {
	if o == nil || o.Fork == nil {
		var ret bool
		return ret
	}
	return *o.Fork
}

// GetForkOk returns a tuple with the Fork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetForkOk() (*bool, bool) {
	if o == nil || o.Fork == nil {
		return nil, false
	}
	return o.Fork, true
}

// HasFork returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasFork() bool {
	if o != nil && o.Fork != nil {
		return true
	}

	return false
}

// SetFork gets a reference to the given bool and assigns it to the Fork field.
func (o *RepositoryTemplateRepository) SetFork(v bool) {
	o.Fork = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *RepositoryTemplateRepository) SetUrl(v string) {
	o.Url = &v
}

// GetArchiveUrl returns the ArchiveUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetArchiveUrl() string {
	if o == nil || o.ArchiveUrl == nil {
		var ret string
		return ret
	}
	return *o.ArchiveUrl
}

// GetArchiveUrlOk returns a tuple with the ArchiveUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetArchiveUrlOk() (*string, bool) {
	if o == nil || o.ArchiveUrl == nil {
		return nil, false
	}
	return o.ArchiveUrl, true
}

// HasArchiveUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasArchiveUrl() bool {
	if o != nil && o.ArchiveUrl != nil {
		return true
	}

	return false
}

// SetArchiveUrl gets a reference to the given string and assigns it to the ArchiveUrl field.
func (o *RepositoryTemplateRepository) SetArchiveUrl(v string) {
	o.ArchiveUrl = &v
}

// GetAssigneesUrl returns the AssigneesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetAssigneesUrl() string {
	if o == nil || o.AssigneesUrl == nil {
		var ret string
		return ret
	}
	return *o.AssigneesUrl
}

// GetAssigneesUrlOk returns a tuple with the AssigneesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetAssigneesUrlOk() (*string, bool) {
	if o == nil || o.AssigneesUrl == nil {
		return nil, false
	}
	return o.AssigneesUrl, true
}

// HasAssigneesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasAssigneesUrl() bool {
	if o != nil && o.AssigneesUrl != nil {
		return true
	}

	return false
}

// SetAssigneesUrl gets a reference to the given string and assigns it to the AssigneesUrl field.
func (o *RepositoryTemplateRepository) SetAssigneesUrl(v string) {
	o.AssigneesUrl = &v
}

// GetBlobsUrl returns the BlobsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetBlobsUrl() string {
	if o == nil || o.BlobsUrl == nil {
		var ret string
		return ret
	}
	return *o.BlobsUrl
}

// GetBlobsUrlOk returns a tuple with the BlobsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetBlobsUrlOk() (*string, bool) {
	if o == nil || o.BlobsUrl == nil {
		return nil, false
	}
	return o.BlobsUrl, true
}

// HasBlobsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasBlobsUrl() bool {
	if o != nil && o.BlobsUrl != nil {
		return true
	}

	return false
}

// SetBlobsUrl gets a reference to the given string and assigns it to the BlobsUrl field.
func (o *RepositoryTemplateRepository) SetBlobsUrl(v string) {
	o.BlobsUrl = &v
}

// GetBranchesUrl returns the BranchesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetBranchesUrl() string {
	if o == nil || o.BranchesUrl == nil {
		var ret string
		return ret
	}
	return *o.BranchesUrl
}

// GetBranchesUrlOk returns a tuple with the BranchesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetBranchesUrlOk() (*string, bool) {
	if o == nil || o.BranchesUrl == nil {
		return nil, false
	}
	return o.BranchesUrl, true
}

// HasBranchesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasBranchesUrl() bool {
	if o != nil && o.BranchesUrl != nil {
		return true
	}

	return false
}

// SetBranchesUrl gets a reference to the given string and assigns it to the BranchesUrl field.
func (o *RepositoryTemplateRepository) SetBranchesUrl(v string) {
	o.BranchesUrl = &v
}

// GetCollaboratorsUrl returns the CollaboratorsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetCollaboratorsUrl() string {
	if o == nil || o.CollaboratorsUrl == nil {
		var ret string
		return ret
	}
	return *o.CollaboratorsUrl
}

// GetCollaboratorsUrlOk returns a tuple with the CollaboratorsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetCollaboratorsUrlOk() (*string, bool) {
	if o == nil || o.CollaboratorsUrl == nil {
		return nil, false
	}
	return o.CollaboratorsUrl, true
}

// HasCollaboratorsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasCollaboratorsUrl() bool {
	if o != nil && o.CollaboratorsUrl != nil {
		return true
	}

	return false
}

// SetCollaboratorsUrl gets a reference to the given string and assigns it to the CollaboratorsUrl field.
func (o *RepositoryTemplateRepository) SetCollaboratorsUrl(v string) {
	o.CollaboratorsUrl = &v
}

// GetCommentsUrl returns the CommentsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetCommentsUrl() string {
	if o == nil || o.CommentsUrl == nil {
		var ret string
		return ret
	}
	return *o.CommentsUrl
}

// GetCommentsUrlOk returns a tuple with the CommentsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetCommentsUrlOk() (*string, bool) {
	if o == nil || o.CommentsUrl == nil {
		return nil, false
	}
	return o.CommentsUrl, true
}

// HasCommentsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasCommentsUrl() bool {
	if o != nil && o.CommentsUrl != nil {
		return true
	}

	return false
}

// SetCommentsUrl gets a reference to the given string and assigns it to the CommentsUrl field.
func (o *RepositoryTemplateRepository) SetCommentsUrl(v string) {
	o.CommentsUrl = &v
}

// GetCommitsUrl returns the CommitsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetCommitsUrl() string {
	if o == nil || o.CommitsUrl == nil {
		var ret string
		return ret
	}
	return *o.CommitsUrl
}

// GetCommitsUrlOk returns a tuple with the CommitsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetCommitsUrlOk() (*string, bool) {
	if o == nil || o.CommitsUrl == nil {
		return nil, false
	}
	return o.CommitsUrl, true
}

// HasCommitsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasCommitsUrl() bool {
	if o != nil && o.CommitsUrl != nil {
		return true
	}

	return false
}

// SetCommitsUrl gets a reference to the given string and assigns it to the CommitsUrl field.
func (o *RepositoryTemplateRepository) SetCommitsUrl(v string) {
	o.CommitsUrl = &v
}

// GetCompareUrl returns the CompareUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetCompareUrl() string {
	if o == nil || o.CompareUrl == nil {
		var ret string
		return ret
	}
	return *o.CompareUrl
}

// GetCompareUrlOk returns a tuple with the CompareUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetCompareUrlOk() (*string, bool) {
	if o == nil || o.CompareUrl == nil {
		return nil, false
	}
	return o.CompareUrl, true
}

// HasCompareUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasCompareUrl() bool {
	if o != nil && o.CompareUrl != nil {
		return true
	}

	return false
}

// SetCompareUrl gets a reference to the given string and assigns it to the CompareUrl field.
func (o *RepositoryTemplateRepository) SetCompareUrl(v string) {
	o.CompareUrl = &v
}

// GetContentsUrl returns the ContentsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetContentsUrl() string {
	if o == nil || o.ContentsUrl == nil {
		var ret string
		return ret
	}
	return *o.ContentsUrl
}

// GetContentsUrlOk returns a tuple with the ContentsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetContentsUrlOk() (*string, bool) {
	if o == nil || o.ContentsUrl == nil {
		return nil, false
	}
	return o.ContentsUrl, true
}

// HasContentsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasContentsUrl() bool {
	if o != nil && o.ContentsUrl != nil {
		return true
	}

	return false
}

// SetContentsUrl gets a reference to the given string and assigns it to the ContentsUrl field.
func (o *RepositoryTemplateRepository) SetContentsUrl(v string) {
	o.ContentsUrl = &v
}

// GetContributorsUrl returns the ContributorsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetContributorsUrl() string {
	if o == nil || o.ContributorsUrl == nil {
		var ret string
		return ret
	}
	return *o.ContributorsUrl
}

// GetContributorsUrlOk returns a tuple with the ContributorsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetContributorsUrlOk() (*string, bool) {
	if o == nil || o.ContributorsUrl == nil {
		return nil, false
	}
	return o.ContributorsUrl, true
}

// HasContributorsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasContributorsUrl() bool {
	if o != nil && o.ContributorsUrl != nil {
		return true
	}

	return false
}

// SetContributorsUrl gets a reference to the given string and assigns it to the ContributorsUrl field.
func (o *RepositoryTemplateRepository) SetContributorsUrl(v string) {
	o.ContributorsUrl = &v
}

// GetDeploymentsUrl returns the DeploymentsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetDeploymentsUrl() string {
	if o == nil || o.DeploymentsUrl == nil {
		var ret string
		return ret
	}
	return *o.DeploymentsUrl
}

// GetDeploymentsUrlOk returns a tuple with the DeploymentsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetDeploymentsUrlOk() (*string, bool) {
	if o == nil || o.DeploymentsUrl == nil {
		return nil, false
	}
	return o.DeploymentsUrl, true
}

// HasDeploymentsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasDeploymentsUrl() bool {
	if o != nil && o.DeploymentsUrl != nil {
		return true
	}

	return false
}

// SetDeploymentsUrl gets a reference to the given string and assigns it to the DeploymentsUrl field.
func (o *RepositoryTemplateRepository) SetDeploymentsUrl(v string) {
	o.DeploymentsUrl = &v
}

// GetDownloadsUrl returns the DownloadsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetDownloadsUrl() string {
	if o == nil || o.DownloadsUrl == nil {
		var ret string
		return ret
	}
	return *o.DownloadsUrl
}

// GetDownloadsUrlOk returns a tuple with the DownloadsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetDownloadsUrlOk() (*string, bool) {
	if o == nil || o.DownloadsUrl == nil {
		return nil, false
	}
	return o.DownloadsUrl, true
}

// HasDownloadsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasDownloadsUrl() bool {
	if o != nil && o.DownloadsUrl != nil {
		return true
	}

	return false
}

// SetDownloadsUrl gets a reference to the given string and assigns it to the DownloadsUrl field.
func (o *RepositoryTemplateRepository) SetDownloadsUrl(v string) {
	o.DownloadsUrl = &v
}

// GetEventsUrl returns the EventsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetEventsUrl() string {
	if o == nil || o.EventsUrl == nil {
		var ret string
		return ret
	}
	return *o.EventsUrl
}

// GetEventsUrlOk returns a tuple with the EventsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetEventsUrlOk() (*string, bool) {
	if o == nil || o.EventsUrl == nil {
		return nil, false
	}
	return o.EventsUrl, true
}

// HasEventsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasEventsUrl() bool {
	if o != nil && o.EventsUrl != nil {
		return true
	}

	return false
}

// SetEventsUrl gets a reference to the given string and assigns it to the EventsUrl field.
func (o *RepositoryTemplateRepository) SetEventsUrl(v string) {
	o.EventsUrl = &v
}

// GetForksUrl returns the ForksUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetForksUrl() string {
	if o == nil || o.ForksUrl == nil {
		var ret string
		return ret
	}
	return *o.ForksUrl
}

// GetForksUrlOk returns a tuple with the ForksUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetForksUrlOk() (*string, bool) {
	if o == nil || o.ForksUrl == nil {
		return nil, false
	}
	return o.ForksUrl, true
}

// HasForksUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasForksUrl() bool {
	if o != nil && o.ForksUrl != nil {
		return true
	}

	return false
}

// SetForksUrl gets a reference to the given string and assigns it to the ForksUrl field.
func (o *RepositoryTemplateRepository) SetForksUrl(v string) {
	o.ForksUrl = &v
}

// GetGitCommitsUrl returns the GitCommitsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetGitCommitsUrl() string {
	if o == nil || o.GitCommitsUrl == nil {
		var ret string
		return ret
	}
	return *o.GitCommitsUrl
}

// GetGitCommitsUrlOk returns a tuple with the GitCommitsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetGitCommitsUrlOk() (*string, bool) {
	if o == nil || o.GitCommitsUrl == nil {
		return nil, false
	}
	return o.GitCommitsUrl, true
}

// HasGitCommitsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasGitCommitsUrl() bool {
	if o != nil && o.GitCommitsUrl != nil {
		return true
	}

	return false
}

// SetGitCommitsUrl gets a reference to the given string and assigns it to the GitCommitsUrl field.
func (o *RepositoryTemplateRepository) SetGitCommitsUrl(v string) {
	o.GitCommitsUrl = &v
}

// GetGitRefsUrl returns the GitRefsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetGitRefsUrl() string {
	if o == nil || o.GitRefsUrl == nil {
		var ret string
		return ret
	}
	return *o.GitRefsUrl
}

// GetGitRefsUrlOk returns a tuple with the GitRefsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetGitRefsUrlOk() (*string, bool) {
	if o == nil || o.GitRefsUrl == nil {
		return nil, false
	}
	return o.GitRefsUrl, true
}

// HasGitRefsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasGitRefsUrl() bool {
	if o != nil && o.GitRefsUrl != nil {
		return true
	}

	return false
}

// SetGitRefsUrl gets a reference to the given string and assigns it to the GitRefsUrl field.
func (o *RepositoryTemplateRepository) SetGitRefsUrl(v string) {
	o.GitRefsUrl = &v
}

// GetGitTagsUrl returns the GitTagsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetGitTagsUrl() string {
	if o == nil || o.GitTagsUrl == nil {
		var ret string
		return ret
	}
	return *o.GitTagsUrl
}

// GetGitTagsUrlOk returns a tuple with the GitTagsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetGitTagsUrlOk() (*string, bool) {
	if o == nil || o.GitTagsUrl == nil {
		return nil, false
	}
	return o.GitTagsUrl, true
}

// HasGitTagsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasGitTagsUrl() bool {
	if o != nil && o.GitTagsUrl != nil {
		return true
	}

	return false
}

// SetGitTagsUrl gets a reference to the given string and assigns it to the GitTagsUrl field.
func (o *RepositoryTemplateRepository) SetGitTagsUrl(v string) {
	o.GitTagsUrl = &v
}

// GetGitUrl returns the GitUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetGitUrl() string {
	if o == nil || o.GitUrl == nil {
		var ret string
		return ret
	}
	return *o.GitUrl
}

// GetGitUrlOk returns a tuple with the GitUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetGitUrlOk() (*string, bool) {
	if o == nil || o.GitUrl == nil {
		return nil, false
	}
	return o.GitUrl, true
}

// HasGitUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasGitUrl() bool {
	if o != nil && o.GitUrl != nil {
		return true
	}

	return false
}

// SetGitUrl gets a reference to the given string and assigns it to the GitUrl field.
func (o *RepositoryTemplateRepository) SetGitUrl(v string) {
	o.GitUrl = &v
}

// GetIssueCommentUrl returns the IssueCommentUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetIssueCommentUrl() string {
	if o == nil || o.IssueCommentUrl == nil {
		var ret string
		return ret
	}
	return *o.IssueCommentUrl
}

// GetIssueCommentUrlOk returns a tuple with the IssueCommentUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetIssueCommentUrlOk() (*string, bool) {
	if o == nil || o.IssueCommentUrl == nil {
		return nil, false
	}
	return o.IssueCommentUrl, true
}

// HasIssueCommentUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasIssueCommentUrl() bool {
	if o != nil && o.IssueCommentUrl != nil {
		return true
	}

	return false
}

// SetIssueCommentUrl gets a reference to the given string and assigns it to the IssueCommentUrl field.
func (o *RepositoryTemplateRepository) SetIssueCommentUrl(v string) {
	o.IssueCommentUrl = &v
}

// GetIssueEventsUrl returns the IssueEventsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetIssueEventsUrl() string {
	if o == nil || o.IssueEventsUrl == nil {
		var ret string
		return ret
	}
	return *o.IssueEventsUrl
}

// GetIssueEventsUrlOk returns a tuple with the IssueEventsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetIssueEventsUrlOk() (*string, bool) {
	if o == nil || o.IssueEventsUrl == nil {
		return nil, false
	}
	return o.IssueEventsUrl, true
}

// HasIssueEventsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasIssueEventsUrl() bool {
	if o != nil && o.IssueEventsUrl != nil {
		return true
	}

	return false
}

// SetIssueEventsUrl gets a reference to the given string and assigns it to the IssueEventsUrl field.
func (o *RepositoryTemplateRepository) SetIssueEventsUrl(v string) {
	o.IssueEventsUrl = &v
}

// GetIssuesUrl returns the IssuesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetIssuesUrl() string {
	if o == nil || o.IssuesUrl == nil {
		var ret string
		return ret
	}
	return *o.IssuesUrl
}

// GetIssuesUrlOk returns a tuple with the IssuesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetIssuesUrlOk() (*string, bool) {
	if o == nil || o.IssuesUrl == nil {
		return nil, false
	}
	return o.IssuesUrl, true
}

// HasIssuesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasIssuesUrl() bool {
	if o != nil && o.IssuesUrl != nil {
		return true
	}

	return false
}

// SetIssuesUrl gets a reference to the given string and assigns it to the IssuesUrl field.
func (o *RepositoryTemplateRepository) SetIssuesUrl(v string) {
	o.IssuesUrl = &v
}

// GetKeysUrl returns the KeysUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetKeysUrl() string {
	if o == nil || o.KeysUrl == nil {
		var ret string
		return ret
	}
	return *o.KeysUrl
}

// GetKeysUrlOk returns a tuple with the KeysUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetKeysUrlOk() (*string, bool) {
	if o == nil || o.KeysUrl == nil {
		return nil, false
	}
	return o.KeysUrl, true
}

// HasKeysUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasKeysUrl() bool {
	if o != nil && o.KeysUrl != nil {
		return true
	}

	return false
}

// SetKeysUrl gets a reference to the given string and assigns it to the KeysUrl field.
func (o *RepositoryTemplateRepository) SetKeysUrl(v string) {
	o.KeysUrl = &v
}

// GetLabelsUrl returns the LabelsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetLabelsUrl() string {
	if o == nil || o.LabelsUrl == nil {
		var ret string
		return ret
	}
	return *o.LabelsUrl
}

// GetLabelsUrlOk returns a tuple with the LabelsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetLabelsUrlOk() (*string, bool) {
	if o == nil || o.LabelsUrl == nil {
		return nil, false
	}
	return o.LabelsUrl, true
}

// HasLabelsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasLabelsUrl() bool {
	if o != nil && o.LabelsUrl != nil {
		return true
	}

	return false
}

// SetLabelsUrl gets a reference to the given string and assigns it to the LabelsUrl field.
func (o *RepositoryTemplateRepository) SetLabelsUrl(v string) {
	o.LabelsUrl = &v
}

// GetLanguagesUrl returns the LanguagesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetLanguagesUrl() string {
	if o == nil || o.LanguagesUrl == nil {
		var ret string
		return ret
	}
	return *o.LanguagesUrl
}

// GetLanguagesUrlOk returns a tuple with the LanguagesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetLanguagesUrlOk() (*string, bool) {
	if o == nil || o.LanguagesUrl == nil {
		return nil, false
	}
	return o.LanguagesUrl, true
}

// HasLanguagesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasLanguagesUrl() bool {
	if o != nil && o.LanguagesUrl != nil {
		return true
	}

	return false
}

// SetLanguagesUrl gets a reference to the given string and assigns it to the LanguagesUrl field.
func (o *RepositoryTemplateRepository) SetLanguagesUrl(v string) {
	o.LanguagesUrl = &v
}

// GetMergesUrl returns the MergesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetMergesUrl() string {
	if o == nil || o.MergesUrl == nil {
		var ret string
		return ret
	}
	return *o.MergesUrl
}

// GetMergesUrlOk returns a tuple with the MergesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetMergesUrlOk() (*string, bool) {
	if o == nil || o.MergesUrl == nil {
		return nil, false
	}
	return o.MergesUrl, true
}

// HasMergesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasMergesUrl() bool {
	if o != nil && o.MergesUrl != nil {
		return true
	}

	return false
}

// SetMergesUrl gets a reference to the given string and assigns it to the MergesUrl field.
func (o *RepositoryTemplateRepository) SetMergesUrl(v string) {
	o.MergesUrl = &v
}

// GetMilestonesUrl returns the MilestonesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetMilestonesUrl() string {
	if o == nil || o.MilestonesUrl == nil {
		var ret string
		return ret
	}
	return *o.MilestonesUrl
}

// GetMilestonesUrlOk returns a tuple with the MilestonesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetMilestonesUrlOk() (*string, bool) {
	if o == nil || o.MilestonesUrl == nil {
		return nil, false
	}
	return o.MilestonesUrl, true
}

// HasMilestonesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasMilestonesUrl() bool {
	if o != nil && o.MilestonesUrl != nil {
		return true
	}

	return false
}

// SetMilestonesUrl gets a reference to the given string and assigns it to the MilestonesUrl field.
func (o *RepositoryTemplateRepository) SetMilestonesUrl(v string) {
	o.MilestonesUrl = &v
}

// GetNotificationsUrl returns the NotificationsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetNotificationsUrl() string {
	if o == nil || o.NotificationsUrl == nil {
		var ret string
		return ret
	}
	return *o.NotificationsUrl
}

// GetNotificationsUrlOk returns a tuple with the NotificationsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetNotificationsUrlOk() (*string, bool) {
	if o == nil || o.NotificationsUrl == nil {
		return nil, false
	}
	return o.NotificationsUrl, true
}

// HasNotificationsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasNotificationsUrl() bool {
	if o != nil && o.NotificationsUrl != nil {
		return true
	}

	return false
}

// SetNotificationsUrl gets a reference to the given string and assigns it to the NotificationsUrl field.
func (o *RepositoryTemplateRepository) SetNotificationsUrl(v string) {
	o.NotificationsUrl = &v
}

// GetPullsUrl returns the PullsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetPullsUrl() string {
	if o == nil || o.PullsUrl == nil {
		var ret string
		return ret
	}
	return *o.PullsUrl
}

// GetPullsUrlOk returns a tuple with the PullsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetPullsUrlOk() (*string, bool) {
	if o == nil || o.PullsUrl == nil {
		return nil, false
	}
	return o.PullsUrl, true
}

// HasPullsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasPullsUrl() bool {
	if o != nil && o.PullsUrl != nil {
		return true
	}

	return false
}

// SetPullsUrl gets a reference to the given string and assigns it to the PullsUrl field.
func (o *RepositoryTemplateRepository) SetPullsUrl(v string) {
	o.PullsUrl = &v
}

// GetReleasesUrl returns the ReleasesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetReleasesUrl() string {
	if o == nil || o.ReleasesUrl == nil {
		var ret string
		return ret
	}
	return *o.ReleasesUrl
}

// GetReleasesUrlOk returns a tuple with the ReleasesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetReleasesUrlOk() (*string, bool) {
	if o == nil || o.ReleasesUrl == nil {
		return nil, false
	}
	return o.ReleasesUrl, true
}

// HasReleasesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasReleasesUrl() bool {
	if o != nil && o.ReleasesUrl != nil {
		return true
	}

	return false
}

// SetReleasesUrl gets a reference to the given string and assigns it to the ReleasesUrl field.
func (o *RepositoryTemplateRepository) SetReleasesUrl(v string) {
	o.ReleasesUrl = &v
}

// GetSshUrl returns the SshUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetSshUrl() string {
	if o == nil || o.SshUrl == nil {
		var ret string
		return ret
	}
	return *o.SshUrl
}

// GetSshUrlOk returns a tuple with the SshUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetSshUrlOk() (*string, bool) {
	if o == nil || o.SshUrl == nil {
		return nil, false
	}
	return o.SshUrl, true
}

// HasSshUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasSshUrl() bool {
	if o != nil && o.SshUrl != nil {
		return true
	}

	return false
}

// SetSshUrl gets a reference to the given string and assigns it to the SshUrl field.
func (o *RepositoryTemplateRepository) SetSshUrl(v string) {
	o.SshUrl = &v
}

// GetStargazersUrl returns the StargazersUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetStargazersUrl() string {
	if o == nil || o.StargazersUrl == nil {
		var ret string
		return ret
	}
	return *o.StargazersUrl
}

// GetStargazersUrlOk returns a tuple with the StargazersUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetStargazersUrlOk() (*string, bool) {
	if o == nil || o.StargazersUrl == nil {
		return nil, false
	}
	return o.StargazersUrl, true
}

// HasStargazersUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasStargazersUrl() bool {
	if o != nil && o.StargazersUrl != nil {
		return true
	}

	return false
}

// SetStargazersUrl gets a reference to the given string and assigns it to the StargazersUrl field.
func (o *RepositoryTemplateRepository) SetStargazersUrl(v string) {
	o.StargazersUrl = &v
}

// GetStatusesUrl returns the StatusesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetStatusesUrl() string {
	if o == nil || o.StatusesUrl == nil {
		var ret string
		return ret
	}
	return *o.StatusesUrl
}

// GetStatusesUrlOk returns a tuple with the StatusesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetStatusesUrlOk() (*string, bool) {
	if o == nil || o.StatusesUrl == nil {
		return nil, false
	}
	return o.StatusesUrl, true
}

// HasStatusesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasStatusesUrl() bool {
	if o != nil && o.StatusesUrl != nil {
		return true
	}

	return false
}

// SetStatusesUrl gets a reference to the given string and assigns it to the StatusesUrl field.
func (o *RepositoryTemplateRepository) SetStatusesUrl(v string) {
	o.StatusesUrl = &v
}

// GetSubscribersUrl returns the SubscribersUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetSubscribersUrl() string {
	if o == nil || o.SubscribersUrl == nil {
		var ret string
		return ret
	}
	return *o.SubscribersUrl
}

// GetSubscribersUrlOk returns a tuple with the SubscribersUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetSubscribersUrlOk() (*string, bool) {
	if o == nil || o.SubscribersUrl == nil {
		return nil, false
	}
	return o.SubscribersUrl, true
}

// HasSubscribersUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasSubscribersUrl() bool {
	if o != nil && o.SubscribersUrl != nil {
		return true
	}

	return false
}

// SetSubscribersUrl gets a reference to the given string and assigns it to the SubscribersUrl field.
func (o *RepositoryTemplateRepository) SetSubscribersUrl(v string) {
	o.SubscribersUrl = &v
}

// GetSubscriptionUrl returns the SubscriptionUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetSubscriptionUrl() string {
	if o == nil || o.SubscriptionUrl == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionUrl
}

// GetSubscriptionUrlOk returns a tuple with the SubscriptionUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetSubscriptionUrlOk() (*string, bool) {
	if o == nil || o.SubscriptionUrl == nil {
		return nil, false
	}
	return o.SubscriptionUrl, true
}

// HasSubscriptionUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasSubscriptionUrl() bool {
	if o != nil && o.SubscriptionUrl != nil {
		return true
	}

	return false
}

// SetSubscriptionUrl gets a reference to the given string and assigns it to the SubscriptionUrl field.
func (o *RepositoryTemplateRepository) SetSubscriptionUrl(v string) {
	o.SubscriptionUrl = &v
}

// GetTagsUrl returns the TagsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetTagsUrl() string {
	if o == nil || o.TagsUrl == nil {
		var ret string
		return ret
	}
	return *o.TagsUrl
}

// GetTagsUrlOk returns a tuple with the TagsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetTagsUrlOk() (*string, bool) {
	if o == nil || o.TagsUrl == nil {
		return nil, false
	}
	return o.TagsUrl, true
}

// HasTagsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasTagsUrl() bool {
	if o != nil && o.TagsUrl != nil {
		return true
	}

	return false
}

// SetTagsUrl gets a reference to the given string and assigns it to the TagsUrl field.
func (o *RepositoryTemplateRepository) SetTagsUrl(v string) {
	o.TagsUrl = &v
}

// GetTeamsUrl returns the TeamsUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetTeamsUrl() string {
	if o == nil || o.TeamsUrl == nil {
		var ret string
		return ret
	}
	return *o.TeamsUrl
}

// GetTeamsUrlOk returns a tuple with the TeamsUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetTeamsUrlOk() (*string, bool) {
	if o == nil || o.TeamsUrl == nil {
		return nil, false
	}
	return o.TeamsUrl, true
}

// HasTeamsUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasTeamsUrl() bool {
	if o != nil && o.TeamsUrl != nil {
		return true
	}

	return false
}

// SetTeamsUrl gets a reference to the given string and assigns it to the TeamsUrl field.
func (o *RepositoryTemplateRepository) SetTeamsUrl(v string) {
	o.TeamsUrl = &v
}

// GetTreesUrl returns the TreesUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetTreesUrl() string {
	if o == nil || o.TreesUrl == nil {
		var ret string
		return ret
	}
	return *o.TreesUrl
}

// GetTreesUrlOk returns a tuple with the TreesUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetTreesUrlOk() (*string, bool) {
	if o == nil || o.TreesUrl == nil {
		return nil, false
	}
	return o.TreesUrl, true
}

// HasTreesUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasTreesUrl() bool {
	if o != nil && o.TreesUrl != nil {
		return true
	}

	return false
}

// SetTreesUrl gets a reference to the given string and assigns it to the TreesUrl field.
func (o *RepositoryTemplateRepository) SetTreesUrl(v string) {
	o.TreesUrl = &v
}

// GetCloneUrl returns the CloneUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetCloneUrl() string {
	if o == nil || o.CloneUrl == nil {
		var ret string
		return ret
	}
	return *o.CloneUrl
}

// GetCloneUrlOk returns a tuple with the CloneUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetCloneUrlOk() (*string, bool) {
	if o == nil || o.CloneUrl == nil {
		return nil, false
	}
	return o.CloneUrl, true
}

// HasCloneUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasCloneUrl() bool {
	if o != nil && o.CloneUrl != nil {
		return true
	}

	return false
}

// SetCloneUrl gets a reference to the given string and assigns it to the CloneUrl field.
func (o *RepositoryTemplateRepository) SetCloneUrl(v string) {
	o.CloneUrl = &v
}

// GetMirrorUrl returns the MirrorUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetMirrorUrl() string {
	if o == nil || o.MirrorUrl == nil {
		var ret string
		return ret
	}
	return *o.MirrorUrl
}

// GetMirrorUrlOk returns a tuple with the MirrorUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetMirrorUrlOk() (*string, bool) {
	if o == nil || o.MirrorUrl == nil {
		return nil, false
	}
	return o.MirrorUrl, true
}

// HasMirrorUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasMirrorUrl() bool {
	if o != nil && o.MirrorUrl != nil {
		return true
	}

	return false
}

// SetMirrorUrl gets a reference to the given string and assigns it to the MirrorUrl field.
func (o *RepositoryTemplateRepository) SetMirrorUrl(v string) {
	o.MirrorUrl = &v
}

// GetHooksUrl returns the HooksUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetHooksUrl() string {
	if o == nil || o.HooksUrl == nil {
		var ret string
		return ret
	}
	return *o.HooksUrl
}

// GetHooksUrlOk returns a tuple with the HooksUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetHooksUrlOk() (*string, bool) {
	if o == nil || o.HooksUrl == nil {
		return nil, false
	}
	return o.HooksUrl, true
}

// HasHooksUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasHooksUrl() bool {
	if o != nil && o.HooksUrl != nil {
		return true
	}

	return false
}

// SetHooksUrl gets a reference to the given string and assigns it to the HooksUrl field.
func (o *RepositoryTemplateRepository) SetHooksUrl(v string) {
	o.HooksUrl = &v
}

// GetSvnUrl returns the SvnUrl field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetSvnUrl() string {
	if o == nil || o.SvnUrl == nil {
		var ret string
		return ret
	}
	return *o.SvnUrl
}

// GetSvnUrlOk returns a tuple with the SvnUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetSvnUrlOk() (*string, bool) {
	if o == nil || o.SvnUrl == nil {
		return nil, false
	}
	return o.SvnUrl, true
}

// HasSvnUrl returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasSvnUrl() bool {
	if o != nil && o.SvnUrl != nil {
		return true
	}

	return false
}

// SetSvnUrl gets a reference to the given string and assigns it to the SvnUrl field.
func (o *RepositoryTemplateRepository) SetSvnUrl(v string) {
	o.SvnUrl = &v
}

// GetHomepage returns the Homepage field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetHomepage() string {
	if o == nil || o.Homepage == nil {
		var ret string
		return ret
	}
	return *o.Homepage
}

// GetHomepageOk returns a tuple with the Homepage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetHomepageOk() (*string, bool) {
	if o == nil || o.Homepage == nil {
		return nil, false
	}
	return o.Homepage, true
}

// HasHomepage returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasHomepage() bool {
	if o != nil && o.Homepage != nil {
		return true
	}

	return false
}

// SetHomepage gets a reference to the given string and assigns it to the Homepage field.
func (o *RepositoryTemplateRepository) SetHomepage(v string) {
	o.Homepage = &v
}

// GetLanguage returns the Language field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetLanguage() string {
	if o == nil || o.Language == nil {
		var ret string
		return ret
	}
	return *o.Language
}

// GetLanguageOk returns a tuple with the Language field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetLanguageOk() (*string, bool) {
	if o == nil || o.Language == nil {
		return nil, false
	}
	return o.Language, true
}

// HasLanguage returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasLanguage() bool {
	if o != nil && o.Language != nil {
		return true
	}

	return false
}

// SetLanguage gets a reference to the given string and assigns it to the Language field.
func (o *RepositoryTemplateRepository) SetLanguage(v string) {
	o.Language = &v
}

// GetForksCount returns the ForksCount field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetForksCount() int32 {
	if o == nil || o.ForksCount == nil {
		var ret int32
		return ret
	}
	return *o.ForksCount
}

// GetForksCountOk returns a tuple with the ForksCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetForksCountOk() (*int32, bool) {
	if o == nil || o.ForksCount == nil {
		return nil, false
	}
	return o.ForksCount, true
}

// HasForksCount returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasForksCount() bool {
	if o != nil && o.ForksCount != nil {
		return true
	}

	return false
}

// SetForksCount gets a reference to the given int32 and assigns it to the ForksCount field.
func (o *RepositoryTemplateRepository) SetForksCount(v int32) {
	o.ForksCount = &v
}

// GetStargazersCount returns the StargazersCount field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetStargazersCount() int32 {
	if o == nil || o.StargazersCount == nil {
		var ret int32
		return ret
	}
	return *o.StargazersCount
}

// GetStargazersCountOk returns a tuple with the StargazersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetStargazersCountOk() (*int32, bool) {
	if o == nil || o.StargazersCount == nil {
		return nil, false
	}
	return o.StargazersCount, true
}

// HasStargazersCount returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasStargazersCount() bool {
	if o != nil && o.StargazersCount != nil {
		return true
	}

	return false
}

// SetStargazersCount gets a reference to the given int32 and assigns it to the StargazersCount field.
func (o *RepositoryTemplateRepository) SetStargazersCount(v int32) {
	o.StargazersCount = &v
}

// GetWatchersCount returns the WatchersCount field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetWatchersCount() int32 {
	if o == nil || o.WatchersCount == nil {
		var ret int32
		return ret
	}
	return *o.WatchersCount
}

// GetWatchersCountOk returns a tuple with the WatchersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetWatchersCountOk() (*int32, bool) {
	if o == nil || o.WatchersCount == nil {
		return nil, false
	}
	return o.WatchersCount, true
}

// HasWatchersCount returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasWatchersCount() bool {
	if o != nil && o.WatchersCount != nil {
		return true
	}

	return false
}

// SetWatchersCount gets a reference to the given int32 and assigns it to the WatchersCount field.
func (o *RepositoryTemplateRepository) SetWatchersCount(v int32) {
	o.WatchersCount = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetSize() int32 {
	if o == nil || o.Size == nil {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetSizeOk() (*int32, bool) {
	if o == nil || o.Size == nil {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasSize() bool {
	if o != nil && o.Size != nil {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *RepositoryTemplateRepository) SetSize(v int32) {
	o.Size = &v
}

// GetDefaultBranch returns the DefaultBranch field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetDefaultBranch() string {
	if o == nil || o.DefaultBranch == nil {
		var ret string
		return ret
	}
	return *o.DefaultBranch
}

// GetDefaultBranchOk returns a tuple with the DefaultBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetDefaultBranchOk() (*string, bool) {
	if o == nil || o.DefaultBranch == nil {
		return nil, false
	}
	return o.DefaultBranch, true
}

// HasDefaultBranch returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasDefaultBranch() bool {
	if o != nil && o.DefaultBranch != nil {
		return true
	}

	return false
}

// SetDefaultBranch gets a reference to the given string and assigns it to the DefaultBranch field.
func (o *RepositoryTemplateRepository) SetDefaultBranch(v string) {
	o.DefaultBranch = &v
}

// GetOpenIssuesCount returns the OpenIssuesCount field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetOpenIssuesCount() int32 {
	if o == nil || o.OpenIssuesCount == nil {
		var ret int32
		return ret
	}
	return *o.OpenIssuesCount
}

// GetOpenIssuesCountOk returns a tuple with the OpenIssuesCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetOpenIssuesCountOk() (*int32, bool) {
	if o == nil || o.OpenIssuesCount == nil {
		return nil, false
	}
	return o.OpenIssuesCount, true
}

// HasOpenIssuesCount returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasOpenIssuesCount() bool {
	if o != nil && o.OpenIssuesCount != nil {
		return true
	}

	return false
}

// SetOpenIssuesCount gets a reference to the given int32 and assigns it to the OpenIssuesCount field.
func (o *RepositoryTemplateRepository) SetOpenIssuesCount(v int32) {
	o.OpenIssuesCount = &v
}

// GetIsTemplate returns the IsTemplate field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetIsTemplate() bool {
	if o == nil || o.IsTemplate == nil {
		var ret bool
		return ret
	}
	return *o.IsTemplate
}

// GetIsTemplateOk returns a tuple with the IsTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetIsTemplateOk() (*bool, bool) {
	if o == nil || o.IsTemplate == nil {
		return nil, false
	}
	return o.IsTemplate, true
}

// HasIsTemplate returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasIsTemplate() bool {
	if o != nil && o.IsTemplate != nil {
		return true
	}

	return false
}

// SetIsTemplate gets a reference to the given bool and assigns it to the IsTemplate field.
func (o *RepositoryTemplateRepository) SetIsTemplate(v bool) {
	o.IsTemplate = &v
}

// GetTopics returns the Topics field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetTopics() []string {
	if o == nil || o.Topics == nil {
		var ret []string
		return ret
	}
	return o.Topics
}

// GetTopicsOk returns a tuple with the Topics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetTopicsOk() ([]string, bool) {
	if o == nil || o.Topics == nil {
		return nil, false
	}
	return o.Topics, true
}

// HasTopics returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasTopics() bool {
	if o != nil && o.Topics != nil {
		return true
	}

	return false
}

// SetTopics gets a reference to the given []string and assigns it to the Topics field.
func (o *RepositoryTemplateRepository) SetTopics(v []string) {
	o.Topics = v
}

// GetHasIssues returns the HasIssues field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetHasIssues() bool {
	if o == nil || o.HasIssues == nil {
		var ret bool
		return ret
	}
	return *o.HasIssues
}

// GetHasIssuesOk returns a tuple with the HasIssues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetHasIssuesOk() (*bool, bool) {
	if o == nil || o.HasIssues == nil {
		return nil, false
	}
	return o.HasIssues, true
}

// HasHasIssues returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasHasIssues() bool {
	if o != nil && o.HasIssues != nil {
		return true
	}

	return false
}

// SetHasIssues gets a reference to the given bool and assigns it to the HasIssues field.
func (o *RepositoryTemplateRepository) SetHasIssues(v bool) {
	o.HasIssues = &v
}

// GetHasProjects returns the HasProjects field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetHasProjects() bool {
	if o == nil || o.HasProjects == nil {
		var ret bool
		return ret
	}
	return *o.HasProjects
}

// GetHasProjectsOk returns a tuple with the HasProjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetHasProjectsOk() (*bool, bool) {
	if o == nil || o.HasProjects == nil {
		return nil, false
	}
	return o.HasProjects, true
}

// HasHasProjects returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasHasProjects() bool {
	if o != nil && o.HasProjects != nil {
		return true
	}

	return false
}

// SetHasProjects gets a reference to the given bool and assigns it to the HasProjects field.
func (o *RepositoryTemplateRepository) SetHasProjects(v bool) {
	o.HasProjects = &v
}

// GetHasWiki returns the HasWiki field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetHasWiki() bool {
	if o == nil || o.HasWiki == nil {
		var ret bool
		return ret
	}
	return *o.HasWiki
}

// GetHasWikiOk returns a tuple with the HasWiki field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetHasWikiOk() (*bool, bool) {
	if o == nil || o.HasWiki == nil {
		return nil, false
	}
	return o.HasWiki, true
}

// HasHasWiki returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasHasWiki() bool {
	if o != nil && o.HasWiki != nil {
		return true
	}

	return false
}

// SetHasWiki gets a reference to the given bool and assigns it to the HasWiki field.
func (o *RepositoryTemplateRepository) SetHasWiki(v bool) {
	o.HasWiki = &v
}

// GetHasPages returns the HasPages field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetHasPages() bool {
	if o == nil || o.HasPages == nil {
		var ret bool
		return ret
	}
	return *o.HasPages
}

// GetHasPagesOk returns a tuple with the HasPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetHasPagesOk() (*bool, bool) {
	if o == nil || o.HasPages == nil {
		return nil, false
	}
	return o.HasPages, true
}

// HasHasPages returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasHasPages() bool {
	if o != nil && o.HasPages != nil {
		return true
	}

	return false
}

// SetHasPages gets a reference to the given bool and assigns it to the HasPages field.
func (o *RepositoryTemplateRepository) SetHasPages(v bool) {
	o.HasPages = &v
}

// GetHasDownloads returns the HasDownloads field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetHasDownloads() bool {
	if o == nil || o.HasDownloads == nil {
		var ret bool
		return ret
	}
	return *o.HasDownloads
}

// GetHasDownloadsOk returns a tuple with the HasDownloads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetHasDownloadsOk() (*bool, bool) {
	if o == nil || o.HasDownloads == nil {
		return nil, false
	}
	return o.HasDownloads, true
}

// HasHasDownloads returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasHasDownloads() bool {
	if o != nil && o.HasDownloads != nil {
		return true
	}

	return false
}

// SetHasDownloads gets a reference to the given bool and assigns it to the HasDownloads field.
func (o *RepositoryTemplateRepository) SetHasDownloads(v bool) {
	o.HasDownloads = &v
}

// GetArchived returns the Archived field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetArchived() bool {
	if o == nil || o.Archived == nil {
		var ret bool
		return ret
	}
	return *o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetArchivedOk() (*bool, bool) {
	if o == nil || o.Archived == nil {
		return nil, false
	}
	return o.Archived, true
}

// HasArchived returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasArchived() bool {
	if o != nil && o.Archived != nil {
		return true
	}

	return false
}

// SetArchived gets a reference to the given bool and assigns it to the Archived field.
func (o *RepositoryTemplateRepository) SetArchived(v bool) {
	o.Archived = &v
}

// GetDisabled returns the Disabled field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetDisabled() bool {
	if o == nil || o.Disabled == nil {
		var ret bool
		return ret
	}
	return *o.Disabled
}

// GetDisabledOk returns a tuple with the Disabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetDisabledOk() (*bool, bool) {
	if o == nil || o.Disabled == nil {
		return nil, false
	}
	return o.Disabled, true
}

// HasDisabled returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasDisabled() bool {
	if o != nil && o.Disabled != nil {
		return true
	}

	return false
}

// SetDisabled gets a reference to the given bool and assigns it to the Disabled field.
func (o *RepositoryTemplateRepository) SetDisabled(v bool) {
	o.Disabled = &v
}

// GetVisibility returns the Visibility field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetVisibility() string {
	if o == nil || o.Visibility == nil {
		var ret string
		return ret
	}
	return *o.Visibility
}

// GetVisibilityOk returns a tuple with the Visibility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetVisibilityOk() (*string, bool) {
	if o == nil || o.Visibility == nil {
		return nil, false
	}
	return o.Visibility, true
}

// HasVisibility returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasVisibility() bool {
	if o != nil && o.Visibility != nil {
		return true
	}

	return false
}

// SetVisibility gets a reference to the given string and assigns it to the Visibility field.
func (o *RepositoryTemplateRepository) SetVisibility(v string) {
	o.Visibility = &v
}

// GetPushedAt returns the PushedAt field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetPushedAt() string {
	if o == nil || o.PushedAt == nil {
		var ret string
		return ret
	}
	return *o.PushedAt
}

// GetPushedAtOk returns a tuple with the PushedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetPushedAtOk() (*string, bool) {
	if o == nil || o.PushedAt == nil {
		return nil, false
	}
	return o.PushedAt, true
}

// HasPushedAt returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasPushedAt() bool {
	if o != nil && o.PushedAt != nil {
		return true
	}

	return false
}

// SetPushedAt gets a reference to the given string and assigns it to the PushedAt field.
func (o *RepositoryTemplateRepository) SetPushedAt(v string) {
	o.PushedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetCreatedAt() string {
	if o == nil || o.CreatedAt == nil {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetCreatedAtOk() (*string, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *RepositoryTemplateRepository) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetUpdatedAt() string {
	if o == nil || o.UpdatedAt == nil {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetUpdatedAtOk() (*string, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *RepositoryTemplateRepository) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetPermissions() RepositoryTemplateRepositoryPermissions {
	if o == nil || o.Permissions == nil {
		var ret RepositoryTemplateRepositoryPermissions
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetPermissionsOk() (*RepositoryTemplateRepositoryPermissions, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given RepositoryTemplateRepositoryPermissions and assigns it to the Permissions field.
func (o *RepositoryTemplateRepository) SetPermissions(v RepositoryTemplateRepositoryPermissions) {
	o.Permissions = &v
}

// GetAllowRebaseMerge returns the AllowRebaseMerge field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetAllowRebaseMerge() bool {
	if o == nil || o.AllowRebaseMerge == nil {
		var ret bool
		return ret
	}
	return *o.AllowRebaseMerge
}

// GetAllowRebaseMergeOk returns a tuple with the AllowRebaseMerge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetAllowRebaseMergeOk() (*bool, bool) {
	if o == nil || o.AllowRebaseMerge == nil {
		return nil, false
	}
	return o.AllowRebaseMerge, true
}

// HasAllowRebaseMerge returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasAllowRebaseMerge() bool {
	if o != nil && o.AllowRebaseMerge != nil {
		return true
	}

	return false
}

// SetAllowRebaseMerge gets a reference to the given bool and assigns it to the AllowRebaseMerge field.
func (o *RepositoryTemplateRepository) SetAllowRebaseMerge(v bool) {
	o.AllowRebaseMerge = &v
}

// GetTempCloneToken returns the TempCloneToken field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetTempCloneToken() string {
	if o == nil || o.TempCloneToken == nil {
		var ret string
		return ret
	}
	return *o.TempCloneToken
}

// GetTempCloneTokenOk returns a tuple with the TempCloneToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetTempCloneTokenOk() (*string, bool) {
	if o == nil || o.TempCloneToken == nil {
		return nil, false
	}
	return o.TempCloneToken, true
}

// HasTempCloneToken returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasTempCloneToken() bool {
	if o != nil && o.TempCloneToken != nil {
		return true
	}

	return false
}

// SetTempCloneToken gets a reference to the given string and assigns it to the TempCloneToken field.
func (o *RepositoryTemplateRepository) SetTempCloneToken(v string) {
	o.TempCloneToken = &v
}

// GetAllowSquashMerge returns the AllowSquashMerge field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetAllowSquashMerge() bool {
	if o == nil || o.AllowSquashMerge == nil {
		var ret bool
		return ret
	}
	return *o.AllowSquashMerge
}

// GetAllowSquashMergeOk returns a tuple with the AllowSquashMerge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetAllowSquashMergeOk() (*bool, bool) {
	if o == nil || o.AllowSquashMerge == nil {
		return nil, false
	}
	return o.AllowSquashMerge, true
}

// HasAllowSquashMerge returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasAllowSquashMerge() bool {
	if o != nil && o.AllowSquashMerge != nil {
		return true
	}

	return false
}

// SetAllowSquashMerge gets a reference to the given bool and assigns it to the AllowSquashMerge field.
func (o *RepositoryTemplateRepository) SetAllowSquashMerge(v bool) {
	o.AllowSquashMerge = &v
}

// GetAllowAutoMerge returns the AllowAutoMerge field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetAllowAutoMerge() bool {
	if o == nil || o.AllowAutoMerge == nil {
		var ret bool
		return ret
	}
	return *o.AllowAutoMerge
}

// GetAllowAutoMergeOk returns a tuple with the AllowAutoMerge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetAllowAutoMergeOk() (*bool, bool) {
	if o == nil || o.AllowAutoMerge == nil {
		return nil, false
	}
	return o.AllowAutoMerge, true
}

// HasAllowAutoMerge returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasAllowAutoMerge() bool {
	if o != nil && o.AllowAutoMerge != nil {
		return true
	}

	return false
}

// SetAllowAutoMerge gets a reference to the given bool and assigns it to the AllowAutoMerge field.
func (o *RepositoryTemplateRepository) SetAllowAutoMerge(v bool) {
	o.AllowAutoMerge = &v
}

// GetDeleteBranchOnMerge returns the DeleteBranchOnMerge field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetDeleteBranchOnMerge() bool {
	if o == nil || o.DeleteBranchOnMerge == nil {
		var ret bool
		return ret
	}
	return *o.DeleteBranchOnMerge
}

// GetDeleteBranchOnMergeOk returns a tuple with the DeleteBranchOnMerge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetDeleteBranchOnMergeOk() (*bool, bool) {
	if o == nil || o.DeleteBranchOnMerge == nil {
		return nil, false
	}
	return o.DeleteBranchOnMerge, true
}

// HasDeleteBranchOnMerge returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasDeleteBranchOnMerge() bool {
	if o != nil && o.DeleteBranchOnMerge != nil {
		return true
	}

	return false
}

// SetDeleteBranchOnMerge gets a reference to the given bool and assigns it to the DeleteBranchOnMerge field.
func (o *RepositoryTemplateRepository) SetDeleteBranchOnMerge(v bool) {
	o.DeleteBranchOnMerge = &v
}

// GetAllowUpdateBranch returns the AllowUpdateBranch field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetAllowUpdateBranch() bool {
	if o == nil || o.AllowUpdateBranch == nil {
		var ret bool
		return ret
	}
	return *o.AllowUpdateBranch
}

// GetAllowUpdateBranchOk returns a tuple with the AllowUpdateBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetAllowUpdateBranchOk() (*bool, bool) {
	if o == nil || o.AllowUpdateBranch == nil {
		return nil, false
	}
	return o.AllowUpdateBranch, true
}

// HasAllowUpdateBranch returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasAllowUpdateBranch() bool {
	if o != nil && o.AllowUpdateBranch != nil {
		return true
	}

	return false
}

// SetAllowUpdateBranch gets a reference to the given bool and assigns it to the AllowUpdateBranch field.
func (o *RepositoryTemplateRepository) SetAllowUpdateBranch(v bool) {
	o.AllowUpdateBranch = &v
}

// GetUseSquashPrTitleAsDefault returns the UseSquashPrTitleAsDefault field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetUseSquashPrTitleAsDefault() bool {
	if o == nil || o.UseSquashPrTitleAsDefault == nil {
		var ret bool
		return ret
	}
	return *o.UseSquashPrTitleAsDefault
}

// GetUseSquashPrTitleAsDefaultOk returns a tuple with the UseSquashPrTitleAsDefault field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetUseSquashPrTitleAsDefaultOk() (*bool, bool) {
	if o == nil || o.UseSquashPrTitleAsDefault == nil {
		return nil, false
	}
	return o.UseSquashPrTitleAsDefault, true
}

// HasUseSquashPrTitleAsDefault returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasUseSquashPrTitleAsDefault() bool {
	if o != nil && o.UseSquashPrTitleAsDefault != nil {
		return true
	}

	return false
}

// SetUseSquashPrTitleAsDefault gets a reference to the given bool and assigns it to the UseSquashPrTitleAsDefault field.
func (o *RepositoryTemplateRepository) SetUseSquashPrTitleAsDefault(v bool) {
	o.UseSquashPrTitleAsDefault = &v
}

// GetAllowMergeCommit returns the AllowMergeCommit field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetAllowMergeCommit() bool {
	if o == nil || o.AllowMergeCommit == nil {
		var ret bool
		return ret
	}
	return *o.AllowMergeCommit
}

// GetAllowMergeCommitOk returns a tuple with the AllowMergeCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetAllowMergeCommitOk() (*bool, bool) {
	if o == nil || o.AllowMergeCommit == nil {
		return nil, false
	}
	return o.AllowMergeCommit, true
}

// HasAllowMergeCommit returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasAllowMergeCommit() bool {
	if o != nil && o.AllowMergeCommit != nil {
		return true
	}

	return false
}

// SetAllowMergeCommit gets a reference to the given bool and assigns it to the AllowMergeCommit field.
func (o *RepositoryTemplateRepository) SetAllowMergeCommit(v bool) {
	o.AllowMergeCommit = &v
}

// GetSubscribersCount returns the SubscribersCount field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetSubscribersCount() int32 {
	if o == nil || o.SubscribersCount == nil {
		var ret int32
		return ret
	}
	return *o.SubscribersCount
}

// GetSubscribersCountOk returns a tuple with the SubscribersCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetSubscribersCountOk() (*int32, bool) {
	if o == nil || o.SubscribersCount == nil {
		return nil, false
	}
	return o.SubscribersCount, true
}

// HasSubscribersCount returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasSubscribersCount() bool {
	if o != nil && o.SubscribersCount != nil {
		return true
	}

	return false
}

// SetSubscribersCount gets a reference to the given int32 and assigns it to the SubscribersCount field.
func (o *RepositoryTemplateRepository) SetSubscribersCount(v int32) {
	o.SubscribersCount = &v
}

// GetNetworkCount returns the NetworkCount field value if set, zero value otherwise.
func (o *RepositoryTemplateRepository) GetNetworkCount() int32 {
	if o == nil || o.NetworkCount == nil {
		var ret int32
		return ret
	}
	return *o.NetworkCount
}

// GetNetworkCountOk returns a tuple with the NetworkCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RepositoryTemplateRepository) GetNetworkCountOk() (*int32, bool) {
	if o == nil || o.NetworkCount == nil {
		return nil, false
	}
	return o.NetworkCount, true
}

// HasNetworkCount returns a boolean if a field has been set.
func (o *RepositoryTemplateRepository) HasNetworkCount() bool {
	if o != nil && o.NetworkCount != nil {
		return true
	}

	return false
}

// SetNetworkCount gets a reference to the given int32 and assigns it to the NetworkCount field.
func (o *RepositoryTemplateRepository) SetNetworkCount(v int32) {
	o.NetworkCount = &v
}

func (o RepositoryTemplateRepository) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.NodeId != nil {
		toSerialize["node_id"] = o.NodeId
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.FullName != nil {
		toSerialize["full_name"] = o.FullName
	}
	if o.Owner != nil {
		toSerialize["owner"] = o.Owner
	}
	if o.Private != nil {
		toSerialize["private"] = o.Private
	}
	if o.HtmlUrl != nil {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Fork != nil {
		toSerialize["fork"] = o.Fork
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	if o.ArchiveUrl != nil {
		toSerialize["archive_url"] = o.ArchiveUrl
	}
	if o.AssigneesUrl != nil {
		toSerialize["assignees_url"] = o.AssigneesUrl
	}
	if o.BlobsUrl != nil {
		toSerialize["blobs_url"] = o.BlobsUrl
	}
	if o.BranchesUrl != nil {
		toSerialize["branches_url"] = o.BranchesUrl
	}
	if o.CollaboratorsUrl != nil {
		toSerialize["collaborators_url"] = o.CollaboratorsUrl
	}
	if o.CommentsUrl != nil {
		toSerialize["comments_url"] = o.CommentsUrl
	}
	if o.CommitsUrl != nil {
		toSerialize["commits_url"] = o.CommitsUrl
	}
	if o.CompareUrl != nil {
		toSerialize["compare_url"] = o.CompareUrl
	}
	if o.ContentsUrl != nil {
		toSerialize["contents_url"] = o.ContentsUrl
	}
	if o.ContributorsUrl != nil {
		toSerialize["contributors_url"] = o.ContributorsUrl
	}
	if o.DeploymentsUrl != nil {
		toSerialize["deployments_url"] = o.DeploymentsUrl
	}
	if o.DownloadsUrl != nil {
		toSerialize["downloads_url"] = o.DownloadsUrl
	}
	if o.EventsUrl != nil {
		toSerialize["events_url"] = o.EventsUrl
	}
	if o.ForksUrl != nil {
		toSerialize["forks_url"] = o.ForksUrl
	}
	if o.GitCommitsUrl != nil {
		toSerialize["git_commits_url"] = o.GitCommitsUrl
	}
	if o.GitRefsUrl != nil {
		toSerialize["git_refs_url"] = o.GitRefsUrl
	}
	if o.GitTagsUrl != nil {
		toSerialize["git_tags_url"] = o.GitTagsUrl
	}
	if o.GitUrl != nil {
		toSerialize["git_url"] = o.GitUrl
	}
	if o.IssueCommentUrl != nil {
		toSerialize["issue_comment_url"] = o.IssueCommentUrl
	}
	if o.IssueEventsUrl != nil {
		toSerialize["issue_events_url"] = o.IssueEventsUrl
	}
	if o.IssuesUrl != nil {
		toSerialize["issues_url"] = o.IssuesUrl
	}
	if o.KeysUrl != nil {
		toSerialize["keys_url"] = o.KeysUrl
	}
	if o.LabelsUrl != nil {
		toSerialize["labels_url"] = o.LabelsUrl
	}
	if o.LanguagesUrl != nil {
		toSerialize["languages_url"] = o.LanguagesUrl
	}
	if o.MergesUrl != nil {
		toSerialize["merges_url"] = o.MergesUrl
	}
	if o.MilestonesUrl != nil {
		toSerialize["milestones_url"] = o.MilestonesUrl
	}
	if o.NotificationsUrl != nil {
		toSerialize["notifications_url"] = o.NotificationsUrl
	}
	if o.PullsUrl != nil {
		toSerialize["pulls_url"] = o.PullsUrl
	}
	if o.ReleasesUrl != nil {
		toSerialize["releases_url"] = o.ReleasesUrl
	}
	if o.SshUrl != nil {
		toSerialize["ssh_url"] = o.SshUrl
	}
	if o.StargazersUrl != nil {
		toSerialize["stargazers_url"] = o.StargazersUrl
	}
	if o.StatusesUrl != nil {
		toSerialize["statuses_url"] = o.StatusesUrl
	}
	if o.SubscribersUrl != nil {
		toSerialize["subscribers_url"] = o.SubscribersUrl
	}
	if o.SubscriptionUrl != nil {
		toSerialize["subscription_url"] = o.SubscriptionUrl
	}
	if o.TagsUrl != nil {
		toSerialize["tags_url"] = o.TagsUrl
	}
	if o.TeamsUrl != nil {
		toSerialize["teams_url"] = o.TeamsUrl
	}
	if o.TreesUrl != nil {
		toSerialize["trees_url"] = o.TreesUrl
	}
	if o.CloneUrl != nil {
		toSerialize["clone_url"] = o.CloneUrl
	}
	if o.MirrorUrl != nil {
		toSerialize["mirror_url"] = o.MirrorUrl
	}
	if o.HooksUrl != nil {
		toSerialize["hooks_url"] = o.HooksUrl
	}
	if o.SvnUrl != nil {
		toSerialize["svn_url"] = o.SvnUrl
	}
	if o.Homepage != nil {
		toSerialize["homepage"] = o.Homepage
	}
	if o.Language != nil {
		toSerialize["language"] = o.Language
	}
	if o.ForksCount != nil {
		toSerialize["forks_count"] = o.ForksCount
	}
	if o.StargazersCount != nil {
		toSerialize["stargazers_count"] = o.StargazersCount
	}
	if o.WatchersCount != nil {
		toSerialize["watchers_count"] = o.WatchersCount
	}
	if o.Size != nil {
		toSerialize["size"] = o.Size
	}
	if o.DefaultBranch != nil {
		toSerialize["default_branch"] = o.DefaultBranch
	}
	if o.OpenIssuesCount != nil {
		toSerialize["open_issues_count"] = o.OpenIssuesCount
	}
	if o.IsTemplate != nil {
		toSerialize["is_template"] = o.IsTemplate
	}
	if o.Topics != nil {
		toSerialize["topics"] = o.Topics
	}
	if o.HasIssues != nil {
		toSerialize["has_issues"] = o.HasIssues
	}
	if o.HasProjects != nil {
		toSerialize["has_projects"] = o.HasProjects
	}
	if o.HasWiki != nil {
		toSerialize["has_wiki"] = o.HasWiki
	}
	if o.HasPages != nil {
		toSerialize["has_pages"] = o.HasPages
	}
	if o.HasDownloads != nil {
		toSerialize["has_downloads"] = o.HasDownloads
	}
	if o.Archived != nil {
		toSerialize["archived"] = o.Archived
	}
	if o.Disabled != nil {
		toSerialize["disabled"] = o.Disabled
	}
	if o.Visibility != nil {
		toSerialize["visibility"] = o.Visibility
	}
	if o.PushedAt != nil {
		toSerialize["pushed_at"] = o.PushedAt
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	if o.AllowRebaseMerge != nil {
		toSerialize["allow_rebase_merge"] = o.AllowRebaseMerge
	}
	if o.TempCloneToken != nil {
		toSerialize["temp_clone_token"] = o.TempCloneToken
	}
	if o.AllowSquashMerge != nil {
		toSerialize["allow_squash_merge"] = o.AllowSquashMerge
	}
	if o.AllowAutoMerge != nil {
		toSerialize["allow_auto_merge"] = o.AllowAutoMerge
	}
	if o.DeleteBranchOnMerge != nil {
		toSerialize["delete_branch_on_merge"] = o.DeleteBranchOnMerge
	}
	if o.AllowUpdateBranch != nil {
		toSerialize["allow_update_branch"] = o.AllowUpdateBranch
	}
	if o.UseSquashPrTitleAsDefault != nil {
		toSerialize["use_squash_pr_title_as_default"] = o.UseSquashPrTitleAsDefault
	}
	if o.AllowMergeCommit != nil {
		toSerialize["allow_merge_commit"] = o.AllowMergeCommit
	}
	if o.SubscribersCount != nil {
		toSerialize["subscribers_count"] = o.SubscribersCount
	}
	if o.NetworkCount != nil {
		toSerialize["network_count"] = o.NetworkCount
	}
	return json.Marshal(toSerialize)
}

type NullableRepositoryTemplateRepository struct {
	value *RepositoryTemplateRepository
	isSet bool
}

func (v NullableRepositoryTemplateRepository) Get() *RepositoryTemplateRepository {
	return v.value
}

func (v *NullableRepositoryTemplateRepository) Set(val *RepositoryTemplateRepository) {
	v.value = val
	v.isSet = true
}

func (v NullableRepositoryTemplateRepository) IsSet() bool {
	return v.isSet
}

func (v *NullableRepositoryTemplateRepository) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRepositoryTemplateRepository(val *RepositoryTemplateRepository) *NullableRepositoryTemplateRepository {
	return &NullableRepositoryTemplateRepository{value: val, isSet: true}
}

func (v NullableRepositoryTemplateRepository) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRepositoryTemplateRepository) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


