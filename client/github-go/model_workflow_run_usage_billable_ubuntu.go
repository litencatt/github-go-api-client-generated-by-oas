/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// WorkflowRunUsageBillableUBUNTU struct for WorkflowRunUsageBillableUBUNTU
type WorkflowRunUsageBillableUBUNTU struct {
	TotalMs int32 `json:"total_ms"`
	Jobs int32 `json:"jobs"`
	JobRuns []WorkflowRunUsageBillableUBUNTUJobRunsInner `json:"job_runs,omitempty"`
}

// NewWorkflowRunUsageBillableUBUNTU instantiates a new WorkflowRunUsageBillableUBUNTU object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkflowRunUsageBillableUBUNTU(totalMs int32, jobs int32) *WorkflowRunUsageBillableUBUNTU {
	this := WorkflowRunUsageBillableUBUNTU{}
	this.TotalMs = totalMs
	this.Jobs = jobs
	return &this
}

// NewWorkflowRunUsageBillableUBUNTUWithDefaults instantiates a new WorkflowRunUsageBillableUBUNTU object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkflowRunUsageBillableUBUNTUWithDefaults() *WorkflowRunUsageBillableUBUNTU {
	this := WorkflowRunUsageBillableUBUNTU{}
	return &this
}

// GetTotalMs returns the TotalMs field value
func (o *WorkflowRunUsageBillableUBUNTU) GetTotalMs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalMs
}

// GetTotalMsOk returns a tuple with the TotalMs field value
// and a boolean to check if the value has been set.
func (o *WorkflowRunUsageBillableUBUNTU) GetTotalMsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalMs, true
}

// SetTotalMs sets field value
func (o *WorkflowRunUsageBillableUBUNTU) SetTotalMs(v int32) {
	o.TotalMs = v
}

// GetJobs returns the Jobs field value
func (o *WorkflowRunUsageBillableUBUNTU) GetJobs() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Jobs
}

// GetJobsOk returns a tuple with the Jobs field value
// and a boolean to check if the value has been set.
func (o *WorkflowRunUsageBillableUBUNTU) GetJobsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Jobs, true
}

// SetJobs sets field value
func (o *WorkflowRunUsageBillableUBUNTU) SetJobs(v int32) {
	o.Jobs = v
}

// GetJobRuns returns the JobRuns field value if set, zero value otherwise.
func (o *WorkflowRunUsageBillableUBUNTU) GetJobRuns() []WorkflowRunUsageBillableUBUNTUJobRunsInner {
	if o == nil || o.JobRuns == nil {
		var ret []WorkflowRunUsageBillableUBUNTUJobRunsInner
		return ret
	}
	return o.JobRuns
}

// GetJobRunsOk returns a tuple with the JobRuns field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkflowRunUsageBillableUBUNTU) GetJobRunsOk() ([]WorkflowRunUsageBillableUBUNTUJobRunsInner, bool) {
	if o == nil || o.JobRuns == nil {
		return nil, false
	}
	return o.JobRuns, true
}

// HasJobRuns returns a boolean if a field has been set.
func (o *WorkflowRunUsageBillableUBUNTU) HasJobRuns() bool {
	if o != nil && o.JobRuns != nil {
		return true
	}

	return false
}

// SetJobRuns gets a reference to the given []WorkflowRunUsageBillableUBUNTUJobRunsInner and assigns it to the JobRuns field.
func (o *WorkflowRunUsageBillableUBUNTU) SetJobRuns(v []WorkflowRunUsageBillableUBUNTUJobRunsInner) {
	o.JobRuns = v
}

func (o WorkflowRunUsageBillableUBUNTU) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["total_ms"] = o.TotalMs
	}
	if true {
		toSerialize["jobs"] = o.Jobs
	}
	if o.JobRuns != nil {
		toSerialize["job_runs"] = o.JobRuns
	}
	return json.Marshal(toSerialize)
}

type NullableWorkflowRunUsageBillableUBUNTU struct {
	value *WorkflowRunUsageBillableUBUNTU
	isSet bool
}

func (v NullableWorkflowRunUsageBillableUBUNTU) Get() *WorkflowRunUsageBillableUBUNTU {
	return v.value
}

func (v *NullableWorkflowRunUsageBillableUBUNTU) Set(val *WorkflowRunUsageBillableUBUNTU) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkflowRunUsageBillableUBUNTU) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkflowRunUsageBillableUBUNTU) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkflowRunUsageBillableUBUNTU(val *WorkflowRunUsageBillableUBUNTU) *NullableWorkflowRunUsageBillableUBUNTU {
	return &NullableWorkflowRunUsageBillableUBUNTU{value: val, isSet: true}
}

func (v NullableWorkflowRunUsageBillableUBUNTU) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkflowRunUsageBillableUBUNTU) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


