/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// GistComment A comment made to a gist.
type GistComment struct {
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	Url string `json:"url"`
	// The comment text.
	Body string `json:"body"`
	User NullableNullableSimpleUser `json:"user"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	AuthorAssociation AuthorAssociation `json:"author_association"`
}

// NewGistComment instantiates a new GistComment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGistComment(id int32, nodeId string, url string, body string, user NullableNullableSimpleUser, createdAt time.Time, updatedAt time.Time, authorAssociation AuthorAssociation) *GistComment {
	this := GistComment{}
	this.Id = id
	this.NodeId = nodeId
	this.Url = url
	this.Body = body
	this.User = user
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.AuthorAssociation = authorAssociation
	return &this
}

// NewGistCommentWithDefaults instantiates a new GistComment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGistCommentWithDefaults() *GistComment {
	this := GistComment{}
	return &this
}

// GetId returns the Id field value
func (o *GistComment) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GistComment) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GistComment) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *GistComment) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *GistComment) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *GistComment) SetNodeId(v string) {
	o.NodeId = v
}

// GetUrl returns the Url field value
func (o *GistComment) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *GistComment) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *GistComment) SetUrl(v string) {
	o.Url = v
}

// GetBody returns the Body field value
func (o *GistComment) GetBody() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Body
}

// GetBodyOk returns a tuple with the Body field value
// and a boolean to check if the value has been set.
func (o *GistComment) GetBodyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Body, true
}

// SetBody sets field value
func (o *GistComment) SetBody(v string) {
	o.Body = v
}

// GetUser returns the User field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *GistComment) GetUser() NullableSimpleUser {
	if o == nil || o.User.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GistComment) GetUserOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// SetUser sets field value
func (o *GistComment) SetUser(v NullableSimpleUser) {
	o.User.Set(&v)
}

// GetCreatedAt returns the CreatedAt field value
func (o *GistComment) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *GistComment) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *GistComment) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *GistComment) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *GistComment) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *GistComment) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetAuthorAssociation returns the AuthorAssociation field value
func (o *GistComment) GetAuthorAssociation() AuthorAssociation {
	if o == nil {
		var ret AuthorAssociation
		return ret
	}

	return o.AuthorAssociation
}

// GetAuthorAssociationOk returns a tuple with the AuthorAssociation field value
// and a boolean to check if the value has been set.
func (o *GistComment) GetAuthorAssociationOk() (*AuthorAssociation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthorAssociation, true
}

// SetAuthorAssociation sets field value
func (o *GistComment) SetAuthorAssociation(v AuthorAssociation) {
	o.AuthorAssociation = v
}

func (o GistComment) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["body"] = o.Body
	}
	if true {
		toSerialize["user"] = o.User.Get()
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["author_association"] = o.AuthorAssociation
	}
	return json.Marshal(toSerialize)
}

type NullableGistComment struct {
	value *GistComment
	isSet bool
}

func (v NullableGistComment) Get() *GistComment {
	return v.value
}

func (v *NullableGistComment) Set(val *GistComment) {
	v.value = val
	v.isSet = true
}

func (v NullableGistComment) IsSet() bool {
	return v.isSet
}

func (v *NullableGistComment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGistComment(val *GistComment) *NullableGistComment {
	return &NullableGistComment{value: val, isSet: true}
}

func (v NullableGistComment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGistComment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


