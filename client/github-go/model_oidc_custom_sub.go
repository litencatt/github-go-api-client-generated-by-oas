/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// OidcCustomSub Actions OIDC Subject customization
type OidcCustomSub struct {
	IncludeClaimKeys []string `json:"include_claim_keys"`
}

// NewOidcCustomSub instantiates a new OidcCustomSub object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOidcCustomSub(includeClaimKeys []string) *OidcCustomSub {
	this := OidcCustomSub{}
	this.IncludeClaimKeys = includeClaimKeys
	return &this
}

// NewOidcCustomSubWithDefaults instantiates a new OidcCustomSub object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOidcCustomSubWithDefaults() *OidcCustomSub {
	this := OidcCustomSub{}
	return &this
}

// GetIncludeClaimKeys returns the IncludeClaimKeys field value
func (o *OidcCustomSub) GetIncludeClaimKeys() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.IncludeClaimKeys
}

// GetIncludeClaimKeysOk returns a tuple with the IncludeClaimKeys field value
// and a boolean to check if the value has been set.
func (o *OidcCustomSub) GetIncludeClaimKeysOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.IncludeClaimKeys, true
}

// SetIncludeClaimKeys sets field value
func (o *OidcCustomSub) SetIncludeClaimKeys(v []string) {
	o.IncludeClaimKeys = v
}

func (o OidcCustomSub) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["include_claim_keys"] = o.IncludeClaimKeys
	}
	return json.Marshal(toSerialize)
}

type NullableOidcCustomSub struct {
	value *OidcCustomSub
	isSet bool
}

func (v NullableOidcCustomSub) Get() *OidcCustomSub {
	return v.value
}

func (v *NullableOidcCustomSub) Set(val *OidcCustomSub) {
	v.value = val
	v.isSet = true
}

func (v NullableOidcCustomSub) IsSet() bool {
	return v.isSet
}

func (v *NullableOidcCustomSub) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOidcCustomSub(val *OidcCustomSub) *NullableOidcCustomSub {
	return &NullableOidcCustomSub{value: val, isSet: true}
}

func (v NullableOidcCustomSub) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOidcCustomSub) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


