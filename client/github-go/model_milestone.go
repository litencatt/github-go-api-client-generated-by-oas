/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// Milestone A collection of related issues and pull requests.
type Milestone struct {
	Url string `json:"url"`
	HtmlUrl string `json:"html_url"`
	LabelsUrl string `json:"labels_url"`
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	// The number of the milestone.
	Number int32 `json:"number"`
	// The state of the milestone.
	State string `json:"state"`
	// The title of the milestone.
	Title string `json:"title"`
	Description NullableString `json:"description"`
	Creator NullableNullableSimpleUser `json:"creator"`
	OpenIssues int32 `json:"open_issues"`
	ClosedIssues int32 `json:"closed_issues"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	ClosedAt NullableTime `json:"closed_at"`
	DueOn NullableTime `json:"due_on"`
}

// NewMilestone instantiates a new Milestone object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMilestone(url string, htmlUrl string, labelsUrl string, id int32, nodeId string, number int32, state string, title string, description NullableString, creator NullableNullableSimpleUser, openIssues int32, closedIssues int32, createdAt time.Time, updatedAt time.Time, closedAt NullableTime, dueOn NullableTime) *Milestone {
	this := Milestone{}
	this.Url = url
	this.HtmlUrl = htmlUrl
	this.LabelsUrl = labelsUrl
	this.Id = id
	this.NodeId = nodeId
	this.Number = number
	this.State = state
	this.Title = title
	this.Description = description
	this.Creator = creator
	this.OpenIssues = openIssues
	this.ClosedIssues = closedIssues
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.ClosedAt = closedAt
	this.DueOn = dueOn
	return &this
}

// NewMilestoneWithDefaults instantiates a new Milestone object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMilestoneWithDefaults() *Milestone {
	this := Milestone{}
	var state string = "open"
	this.State = state
	return &this
}

// GetUrl returns the Url field value
func (o *Milestone) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Milestone) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *Milestone) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *Milestone) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetLabelsUrl returns the LabelsUrl field value
func (o *Milestone) GetLabelsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelsUrl
}

// GetLabelsUrlOk returns a tuple with the LabelsUrl field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetLabelsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelsUrl, true
}

// SetLabelsUrl sets field value
func (o *Milestone) SetLabelsUrl(v string) {
	o.LabelsUrl = v
}

// GetId returns the Id field value
func (o *Milestone) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Milestone) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *Milestone) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *Milestone) SetNodeId(v string) {
	o.NodeId = v
}

// GetNumber returns the Number field value
func (o *Milestone) GetNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Number
}

// GetNumberOk returns a tuple with the Number field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Number, true
}

// SetNumber sets field value
func (o *Milestone) SetNumber(v int32) {
	o.Number = v
}

// GetState returns the State field value
func (o *Milestone) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *Milestone) SetState(v string) {
	o.State = v
}

// GetTitle returns the Title field value
func (o *Milestone) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *Milestone) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Milestone) GetDescription() string {
	if o == nil || o.Description.Get() == nil {
		var ret string
		return ret
	}

	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Milestone) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// SetDescription sets field value
func (o *Milestone) SetDescription(v string) {
	o.Description.Set(&v)
}

// GetCreator returns the Creator field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *Milestone) GetCreator() NullableSimpleUser {
	if o == nil || o.Creator.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.Creator.Get()
}

// GetCreatorOk returns a tuple with the Creator field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Milestone) GetCreatorOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Creator.Get(), o.Creator.IsSet()
}

// SetCreator sets field value
func (o *Milestone) SetCreator(v NullableSimpleUser) {
	o.Creator.Set(&v)
}

// GetOpenIssues returns the OpenIssues field value
func (o *Milestone) GetOpenIssues() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.OpenIssues
}

// GetOpenIssuesOk returns a tuple with the OpenIssues field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetOpenIssuesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OpenIssues, true
}

// SetOpenIssues sets field value
func (o *Milestone) SetOpenIssues(v int32) {
	o.OpenIssues = v
}

// GetClosedIssues returns the ClosedIssues field value
func (o *Milestone) GetClosedIssues() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ClosedIssues
}

// GetClosedIssuesOk returns a tuple with the ClosedIssues field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetClosedIssuesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClosedIssues, true
}

// SetClosedIssues sets field value
func (o *Milestone) SetClosedIssues(v int32) {
	o.ClosedIssues = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Milestone) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Milestone) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Milestone) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Milestone) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Milestone) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetClosedAt returns the ClosedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Milestone) GetClosedAt() time.Time {
	if o == nil || o.ClosedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ClosedAt.Get()
}

// GetClosedAtOk returns a tuple with the ClosedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Milestone) GetClosedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ClosedAt.Get(), o.ClosedAt.IsSet()
}

// SetClosedAt sets field value
func (o *Milestone) SetClosedAt(v time.Time) {
	o.ClosedAt.Set(&v)
}

// GetDueOn returns the DueOn field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Milestone) GetDueOn() time.Time {
	if o == nil || o.DueOn.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.DueOn.Get()
}

// GetDueOnOk returns a tuple with the DueOn field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Milestone) GetDueOnOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.DueOn.Get(), o.DueOn.IsSet()
}

// SetDueOn sets field value
func (o *Milestone) SetDueOn(v time.Time) {
	o.DueOn.Set(&v)
}

func (o Milestone) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["labels_url"] = o.LabelsUrl
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["number"] = o.Number
	}
	if true {
		toSerialize["state"] = o.State
	}
	if true {
		toSerialize["title"] = o.Title
	}
	if true {
		toSerialize["description"] = o.Description.Get()
	}
	if true {
		toSerialize["creator"] = o.Creator.Get()
	}
	if true {
		toSerialize["open_issues"] = o.OpenIssues
	}
	if true {
		toSerialize["closed_issues"] = o.ClosedIssues
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["closed_at"] = o.ClosedAt.Get()
	}
	if true {
		toSerialize["due_on"] = o.DueOn.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableMilestone struct {
	value *Milestone
	isSet bool
}

func (v NullableMilestone) Get() *Milestone {
	return v.value
}

func (v *NullableMilestone) Set(val *Milestone) {
	v.value = val
	v.isSet = true
}

func (v NullableMilestone) IsSet() bool {
	return v.isSet
}

func (v *NullableMilestone) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMilestone(val *Milestone) *NullableMilestone {
	return &NullableMilestone{value: val, isSet: true}
}

func (v NullableMilestone) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMilestone) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


