/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest struct for CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest
type CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest struct {
	// An array of repository ids for which a codespace can access the secret. You can manage the list of selected repositories using the [List selected repositories for a user secret](https://docs.github.com/rest/reference/codespaces#list-selected-repositories-for-a-user-secret), [Add a selected repository to a user secret](https://docs.github.com/rest/reference/codespaces#add-a-selected-repository-to-a-user-secret), and [Remove a selected repository from a user secret](https://docs.github.com/rest/reference/codespaces#remove-a-selected-repository-from-a-user-secret) endpoints.
	SelectedRepositoryIds []int32 `json:"selected_repository_ids"`
}

// NewCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest instantiates a new CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest(selectedRepositoryIds []int32) *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest {
	this := CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest{}
	this.SelectedRepositoryIds = selectedRepositoryIds
	return &this
}

// NewCodespacesSetRepositoriesForSecretForAuthenticatedUserRequestWithDefaults instantiates a new CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodespacesSetRepositoriesForSecretForAuthenticatedUserRequestWithDefaults() *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest {
	this := CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest{}
	return &this
}

// GetSelectedRepositoryIds returns the SelectedRepositoryIds field value
func (o *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) GetSelectedRepositoryIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.SelectedRepositoryIds
}

// GetSelectedRepositoryIdsOk returns a tuple with the SelectedRepositoryIds field value
// and a boolean to check if the value has been set.
func (o *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) GetSelectedRepositoryIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SelectedRepositoryIds, true
}

// SetSelectedRepositoryIds sets field value
func (o *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) SetSelectedRepositoryIds(v []int32) {
	o.SelectedRepositoryIds = v
}

func (o CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["selected_repository_ids"] = o.SelectedRepositoryIds
	}
	return json.Marshal(toSerialize)
}

type NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest struct {
	value *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest
	isSet bool
}

func (v NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) Get() *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest {
	return v.value
}

func (v *NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) Set(val *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest(val *CodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) *NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest {
	return &NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest{value: val, isSet: true}
}

func (v NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodespacesSetRepositoriesForSecretForAuthenticatedUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


