/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// PullsRemoveRequestedReviewersRequest struct for PullsRemoveRequestedReviewersRequest
type PullsRemoveRequestedReviewersRequest struct {
	// An array of user `login`s that will be removed.
	Reviewers []string `json:"reviewers"`
	// An array of team `slug`s that will be removed.
	TeamReviewers []string `json:"team_reviewers,omitempty"`
}

// NewPullsRemoveRequestedReviewersRequest instantiates a new PullsRemoveRequestedReviewersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPullsRemoveRequestedReviewersRequest(reviewers []string) *PullsRemoveRequestedReviewersRequest {
	this := PullsRemoveRequestedReviewersRequest{}
	this.Reviewers = reviewers
	return &this
}

// NewPullsRemoveRequestedReviewersRequestWithDefaults instantiates a new PullsRemoveRequestedReviewersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPullsRemoveRequestedReviewersRequestWithDefaults() *PullsRemoveRequestedReviewersRequest {
	this := PullsRemoveRequestedReviewersRequest{}
	return &this
}

// GetReviewers returns the Reviewers field value
func (o *PullsRemoveRequestedReviewersRequest) GetReviewers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Reviewers
}

// GetReviewersOk returns a tuple with the Reviewers field value
// and a boolean to check if the value has been set.
func (o *PullsRemoveRequestedReviewersRequest) GetReviewersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Reviewers, true
}

// SetReviewers sets field value
func (o *PullsRemoveRequestedReviewersRequest) SetReviewers(v []string) {
	o.Reviewers = v
}

// GetTeamReviewers returns the TeamReviewers field value if set, zero value otherwise.
func (o *PullsRemoveRequestedReviewersRequest) GetTeamReviewers() []string {
	if o == nil || o.TeamReviewers == nil {
		var ret []string
		return ret
	}
	return o.TeamReviewers
}

// GetTeamReviewersOk returns a tuple with the TeamReviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PullsRemoveRequestedReviewersRequest) GetTeamReviewersOk() ([]string, bool) {
	if o == nil || o.TeamReviewers == nil {
		return nil, false
	}
	return o.TeamReviewers, true
}

// HasTeamReviewers returns a boolean if a field has been set.
func (o *PullsRemoveRequestedReviewersRequest) HasTeamReviewers() bool {
	if o != nil && o.TeamReviewers != nil {
		return true
	}

	return false
}

// SetTeamReviewers gets a reference to the given []string and assigns it to the TeamReviewers field.
func (o *PullsRemoveRequestedReviewersRequest) SetTeamReviewers(v []string) {
	o.TeamReviewers = v
}

func (o PullsRemoveRequestedReviewersRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["reviewers"] = o.Reviewers
	}
	if o.TeamReviewers != nil {
		toSerialize["team_reviewers"] = o.TeamReviewers
	}
	return json.Marshal(toSerialize)
}

type NullablePullsRemoveRequestedReviewersRequest struct {
	value *PullsRemoveRequestedReviewersRequest
	isSet bool
}

func (v NullablePullsRemoveRequestedReviewersRequest) Get() *PullsRemoveRequestedReviewersRequest {
	return v.value
}

func (v *NullablePullsRemoveRequestedReviewersRequest) Set(val *PullsRemoveRequestedReviewersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePullsRemoveRequestedReviewersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePullsRemoveRequestedReviewersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePullsRemoveRequestedReviewersRequest(val *PullsRemoveRequestedReviewersRequest) *NullablePullsRemoveRequestedReviewersRequest {
	return &NullablePullsRemoveRequestedReviewersRequest{value: val, isSet: true}
}

func (v NullablePullsRemoveRequestedReviewersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePullsRemoveRequestedReviewersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


