/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ScimUpdateAttributeForUserRequest struct for ScimUpdateAttributeForUserRequest
type ScimUpdateAttributeForUserRequest struct {
	Schemas []string `json:"schemas,omitempty"`
	// Set of operations to be performed
	Operations []ScimUpdateAttributeForUserRequestOperationsInner `json:"Operations"`
}

// NewScimUpdateAttributeForUserRequest instantiates a new ScimUpdateAttributeForUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimUpdateAttributeForUserRequest(operations []ScimUpdateAttributeForUserRequestOperationsInner) *ScimUpdateAttributeForUserRequest {
	this := ScimUpdateAttributeForUserRequest{}
	this.Operations = operations
	return &this
}

// NewScimUpdateAttributeForUserRequestWithDefaults instantiates a new ScimUpdateAttributeForUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimUpdateAttributeForUserRequestWithDefaults() *ScimUpdateAttributeForUserRequest {
	this := ScimUpdateAttributeForUserRequest{}
	return &this
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ScimUpdateAttributeForUserRequest) GetSchemas() []string {
	if o == nil || o.Schemas == nil {
		var ret []string
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimUpdateAttributeForUserRequest) GetSchemasOk() ([]string, bool) {
	if o == nil || o.Schemas == nil {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ScimUpdateAttributeForUserRequest) HasSchemas() bool {
	if o != nil && o.Schemas != nil {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []string and assigns it to the Schemas field.
func (o *ScimUpdateAttributeForUserRequest) SetSchemas(v []string) {
	o.Schemas = v
}

// GetOperations returns the Operations field value
func (o *ScimUpdateAttributeForUserRequest) GetOperations() []ScimUpdateAttributeForUserRequestOperationsInner {
	if o == nil {
		var ret []ScimUpdateAttributeForUserRequestOperationsInner
		return ret
	}

	return o.Operations
}

// GetOperationsOk returns a tuple with the Operations field value
// and a boolean to check if the value has been set.
func (o *ScimUpdateAttributeForUserRequest) GetOperationsOk() ([]ScimUpdateAttributeForUserRequestOperationsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Operations, true
}

// SetOperations sets field value
func (o *ScimUpdateAttributeForUserRequest) SetOperations(v []ScimUpdateAttributeForUserRequestOperationsInner) {
	o.Operations = v
}

func (o ScimUpdateAttributeForUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Schemas != nil {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["Operations"] = o.Operations
	}
	return json.Marshal(toSerialize)
}

type NullableScimUpdateAttributeForUserRequest struct {
	value *ScimUpdateAttributeForUserRequest
	isSet bool
}

func (v NullableScimUpdateAttributeForUserRequest) Get() *ScimUpdateAttributeForUserRequest {
	return v.value
}

func (v *NullableScimUpdateAttributeForUserRequest) Set(val *ScimUpdateAttributeForUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScimUpdateAttributeForUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScimUpdateAttributeForUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimUpdateAttributeForUserRequest(val *ScimUpdateAttributeForUserRequest) *NullableScimUpdateAttributeForUserRequest {
	return &NullableScimUpdateAttributeForUserRequest{value: val, isSet: true}
}

func (v NullableScimUpdateAttributeForUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimUpdateAttributeForUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


