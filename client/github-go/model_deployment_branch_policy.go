/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// DeploymentBranchPolicy The type of deployment branch policy for this environment. To allow all branches to deploy, set to `null`.
type DeploymentBranchPolicy struct {
	// Whether only branches with branch protection rules can deploy to this environment. If `protected_branches` is `true`, `custom_branch_policies` must be `false`; if `protected_branches` is `false`, `custom_branch_policies` must be `true`.
	ProtectedBranches bool `json:"protected_branches"`
	// Whether only branches that match the specified name patterns can deploy to this environment.  If `custom_branch_policies` is `true`, `protected_branches` must be `false`; if `custom_branch_policies` is `false`, `protected_branches` must be `true`.
	CustomBranchPolicies bool `json:"custom_branch_policies"`
}

// NewDeploymentBranchPolicy instantiates a new DeploymentBranchPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentBranchPolicy(protectedBranches bool, customBranchPolicies bool) *DeploymentBranchPolicy {
	this := DeploymentBranchPolicy{}
	this.ProtectedBranches = protectedBranches
	this.CustomBranchPolicies = customBranchPolicies
	return &this
}

// NewDeploymentBranchPolicyWithDefaults instantiates a new DeploymentBranchPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentBranchPolicyWithDefaults() *DeploymentBranchPolicy {
	this := DeploymentBranchPolicy{}
	return &this
}

// GetProtectedBranches returns the ProtectedBranches field value
func (o *DeploymentBranchPolicy) GetProtectedBranches() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ProtectedBranches
}

// GetProtectedBranchesOk returns a tuple with the ProtectedBranches field value
// and a boolean to check if the value has been set.
func (o *DeploymentBranchPolicy) GetProtectedBranchesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtectedBranches, true
}

// SetProtectedBranches sets field value
func (o *DeploymentBranchPolicy) SetProtectedBranches(v bool) {
	o.ProtectedBranches = v
}

// GetCustomBranchPolicies returns the CustomBranchPolicies field value
func (o *DeploymentBranchPolicy) GetCustomBranchPolicies() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CustomBranchPolicies
}

// GetCustomBranchPoliciesOk returns a tuple with the CustomBranchPolicies field value
// and a boolean to check if the value has been set.
func (o *DeploymentBranchPolicy) GetCustomBranchPoliciesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomBranchPolicies, true
}

// SetCustomBranchPolicies sets field value
func (o *DeploymentBranchPolicy) SetCustomBranchPolicies(v bool) {
	o.CustomBranchPolicies = v
}

func (o DeploymentBranchPolicy) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["protected_branches"] = o.ProtectedBranches
	}
	if true {
		toSerialize["custom_branch_policies"] = o.CustomBranchPolicies
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentBranchPolicy struct {
	value *DeploymentBranchPolicy
	isSet bool
}

func (v NullableDeploymentBranchPolicy) Get() *DeploymentBranchPolicy {
	return v.value
}

func (v *NullableDeploymentBranchPolicy) Set(val *DeploymentBranchPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentBranchPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentBranchPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentBranchPolicy(val *DeploymentBranchPolicy) *NullableDeploymentBranchPolicy {
	return &NullableDeploymentBranchPolicy{value: val, isSet: true}
}

func (v NullableDeploymentBranchPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentBranchPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


