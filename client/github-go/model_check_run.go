/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// CheckRun A check performed on the code of a given code change
type CheckRun struct {
	// The id of the check.
	Id int32 `json:"id"`
	// The SHA of the commit that is being checked.
	HeadSha string `json:"head_sha"`
	NodeId string `json:"node_id"`
	ExternalId NullableString `json:"external_id"`
	Url string `json:"url"`
	HtmlUrl NullableString `json:"html_url"`
	DetailsUrl NullableString `json:"details_url"`
	// The phase of the lifecycle that the check is currently in.
	Status string `json:"status"`
	Conclusion NullableString `json:"conclusion"`
	StartedAt NullableTime `json:"started_at"`
	CompletedAt NullableTime `json:"completed_at"`
	Output CheckRunOutput `json:"output"`
	// The name of the check.
	Name string `json:"name"`
	CheckSuite NullableCheckRunCheckSuite `json:"check_suite"`
	App NullableNullableIntegration `json:"app"`
	PullRequests []PullRequestMinimal `json:"pull_requests"`
	Deployment *DeploymentSimple `json:"deployment,omitempty"`
}

// NewCheckRun instantiates a new CheckRun object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckRun(id int32, headSha string, nodeId string, externalId NullableString, url string, htmlUrl NullableString, detailsUrl NullableString, status string, conclusion NullableString, startedAt NullableTime, completedAt NullableTime, output CheckRunOutput, name string, checkSuite NullableCheckRunCheckSuite, app NullableNullableIntegration, pullRequests []PullRequestMinimal) *CheckRun {
	this := CheckRun{}
	this.Id = id
	this.HeadSha = headSha
	this.NodeId = nodeId
	this.ExternalId = externalId
	this.Url = url
	this.HtmlUrl = htmlUrl
	this.DetailsUrl = detailsUrl
	this.Status = status
	this.Conclusion = conclusion
	this.StartedAt = startedAt
	this.CompletedAt = completedAt
	this.Output = output
	this.Name = name
	this.CheckSuite = checkSuite
	this.App = app
	this.PullRequests = pullRequests
	return &this
}

// NewCheckRunWithDefaults instantiates a new CheckRun object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckRunWithDefaults() *CheckRun {
	this := CheckRun{}
	return &this
}

// GetId returns the Id field value
func (o *CheckRun) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CheckRun) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CheckRun) SetId(v int32) {
	o.Id = v
}

// GetHeadSha returns the HeadSha field value
func (o *CheckRun) GetHeadSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HeadSha
}

// GetHeadShaOk returns a tuple with the HeadSha field value
// and a boolean to check if the value has been set.
func (o *CheckRun) GetHeadShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeadSha, true
}

// SetHeadSha sets field value
func (o *CheckRun) SetHeadSha(v string) {
	o.HeadSha = v
}

// GetNodeId returns the NodeId field value
func (o *CheckRun) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *CheckRun) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *CheckRun) SetNodeId(v string) {
	o.NodeId = v
}

// GetExternalId returns the ExternalId field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckRun) GetExternalId() string {
	if o == nil || o.ExternalId.Get() == nil {
		var ret string
		return ret
	}

	return *o.ExternalId.Get()
}

// GetExternalIdOk returns a tuple with the ExternalId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckRun) GetExternalIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExternalId.Get(), o.ExternalId.IsSet()
}

// SetExternalId sets field value
func (o *CheckRun) SetExternalId(v string) {
	o.ExternalId.Set(&v)
}

// GetUrl returns the Url field value
func (o *CheckRun) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *CheckRun) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *CheckRun) SetUrl(v string) {
	o.Url = v
}

// GetHtmlUrl returns the HtmlUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckRun) GetHtmlUrl() string {
	if o == nil || o.HtmlUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.HtmlUrl.Get()
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckRun) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HtmlUrl.Get(), o.HtmlUrl.IsSet()
}

// SetHtmlUrl sets field value
func (o *CheckRun) SetHtmlUrl(v string) {
	o.HtmlUrl.Set(&v)
}

// GetDetailsUrl returns the DetailsUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckRun) GetDetailsUrl() string {
	if o == nil || o.DetailsUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.DetailsUrl.Get()
}

// GetDetailsUrlOk returns a tuple with the DetailsUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckRun) GetDetailsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DetailsUrl.Get(), o.DetailsUrl.IsSet()
}

// SetDetailsUrl sets field value
func (o *CheckRun) SetDetailsUrl(v string) {
	o.DetailsUrl.Set(&v)
}

// GetStatus returns the Status field value
func (o *CheckRun) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CheckRun) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CheckRun) SetStatus(v string) {
	o.Status = v
}

// GetConclusion returns the Conclusion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckRun) GetConclusion() string {
	if o == nil || o.Conclusion.Get() == nil {
		var ret string
		return ret
	}

	return *o.Conclusion.Get()
}

// GetConclusionOk returns a tuple with the Conclusion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckRun) GetConclusionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conclusion.Get(), o.Conclusion.IsSet()
}

// SetConclusion sets field value
func (o *CheckRun) SetConclusion(v string) {
	o.Conclusion.Set(&v)
}

// GetStartedAt returns the StartedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CheckRun) GetStartedAt() time.Time {
	if o == nil || o.StartedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckRun) GetStartedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// SetStartedAt sets field value
func (o *CheckRun) SetStartedAt(v time.Time) {
	o.StartedAt.Set(&v)
}

// GetCompletedAt returns the CompletedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CheckRun) GetCompletedAt() time.Time {
	if o == nil || o.CompletedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckRun) GetCompletedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// SetCompletedAt sets field value
func (o *CheckRun) SetCompletedAt(v time.Time) {
	o.CompletedAt.Set(&v)
}

// GetOutput returns the Output field value
func (o *CheckRun) GetOutput() CheckRunOutput {
	if o == nil {
		var ret CheckRunOutput
		return ret
	}

	return o.Output
}

// GetOutputOk returns a tuple with the Output field value
// and a boolean to check if the value has been set.
func (o *CheckRun) GetOutputOk() (*CheckRunOutput, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Output, true
}

// SetOutput sets field value
func (o *CheckRun) SetOutput(v CheckRunOutput) {
	o.Output = v
}

// GetName returns the Name field value
func (o *CheckRun) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CheckRun) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CheckRun) SetName(v string) {
	o.Name = v
}

// GetCheckSuite returns the CheckSuite field value
// If the value is explicit nil, the zero value for CheckRunCheckSuite will be returned
func (o *CheckRun) GetCheckSuite() CheckRunCheckSuite {
	if o == nil || o.CheckSuite.Get() == nil {
		var ret CheckRunCheckSuite
		return ret
	}

	return *o.CheckSuite.Get()
}

// GetCheckSuiteOk returns a tuple with the CheckSuite field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckRun) GetCheckSuiteOk() (*CheckRunCheckSuite, bool) {
	if o == nil {
		return nil, false
	}
	return o.CheckSuite.Get(), o.CheckSuite.IsSet()
}

// SetCheckSuite sets field value
func (o *CheckRun) SetCheckSuite(v CheckRunCheckSuite) {
	o.CheckSuite.Set(&v)
}

// GetApp returns the App field value
// If the value is explicit nil, the zero value for NullableIntegration will be returned
func (o *CheckRun) GetApp() NullableIntegration {
	if o == nil || o.App.Get() == nil {
		var ret NullableIntegration
		return ret
	}

	return *o.App.Get()
}

// GetAppOk returns a tuple with the App field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckRun) GetAppOk() (*NullableIntegration, bool) {
	if o == nil {
		return nil, false
	}
	return o.App.Get(), o.App.IsSet()
}

// SetApp sets field value
func (o *CheckRun) SetApp(v NullableIntegration) {
	o.App.Set(&v)
}

// GetPullRequests returns the PullRequests field value
func (o *CheckRun) GetPullRequests() []PullRequestMinimal {
	if o == nil {
		var ret []PullRequestMinimal
		return ret
	}

	return o.PullRequests
}

// GetPullRequestsOk returns a tuple with the PullRequests field value
// and a boolean to check if the value has been set.
func (o *CheckRun) GetPullRequestsOk() ([]PullRequestMinimal, bool) {
	if o == nil {
		return nil, false
	}
	return o.PullRequests, true
}

// SetPullRequests sets field value
func (o *CheckRun) SetPullRequests(v []PullRequestMinimal) {
	o.PullRequests = v
}

// GetDeployment returns the Deployment field value if set, zero value otherwise.
func (o *CheckRun) GetDeployment() DeploymentSimple {
	if o == nil || o.Deployment == nil {
		var ret DeploymentSimple
		return ret
	}
	return *o.Deployment
}

// GetDeploymentOk returns a tuple with the Deployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckRun) GetDeploymentOk() (*DeploymentSimple, bool) {
	if o == nil || o.Deployment == nil {
		return nil, false
	}
	return o.Deployment, true
}

// HasDeployment returns a boolean if a field has been set.
func (o *CheckRun) HasDeployment() bool {
	if o != nil && o.Deployment != nil {
		return true
	}

	return false
}

// SetDeployment gets a reference to the given DeploymentSimple and assigns it to the Deployment field.
func (o *CheckRun) SetDeployment(v DeploymentSimple) {
	o.Deployment = &v
}

func (o CheckRun) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["head_sha"] = o.HeadSha
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["external_id"] = o.ExternalId.Get()
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl.Get()
	}
	if true {
		toSerialize["details_url"] = o.DetailsUrl.Get()
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["conclusion"] = o.Conclusion.Get()
	}
	if true {
		toSerialize["started_at"] = o.StartedAt.Get()
	}
	if true {
		toSerialize["completed_at"] = o.CompletedAt.Get()
	}
	if true {
		toSerialize["output"] = o.Output
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["check_suite"] = o.CheckSuite.Get()
	}
	if true {
		toSerialize["app"] = o.App.Get()
	}
	if true {
		toSerialize["pull_requests"] = o.PullRequests
	}
	if o.Deployment != nil {
		toSerialize["deployment"] = o.Deployment
	}
	return json.Marshal(toSerialize)
}

type NullableCheckRun struct {
	value *CheckRun
	isSet bool
}

func (v NullableCheckRun) Get() *CheckRun {
	return v.value
}

func (v *NullableCheckRun) Set(val *CheckRun) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckRun) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckRun) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckRun(val *CheckRun) *NullableCheckRun {
	return &NullableCheckRun{value: val, isSet: true}
}

func (v NullableCheckRun) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckRun) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


