/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances struct for ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances
type ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances struct {
	Users []SimpleUser `json:"users"`
	Teams []Team `json:"teams"`
	Apps []Integration `json:"apps,omitempty"`
}

// NewProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances instantiates a new ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances(users []SimpleUser, teams []Team) *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
	this := ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances{}
	this.Users = users
	this.Teams = teams
	return &this
}

// NewProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowancesWithDefaults instantiates a new ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowancesWithDefaults() *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
	this := ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances{}
	return &this
}

// GetUsers returns the Users field value
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) GetUsers() []SimpleUser {
	if o == nil {
		var ret []SimpleUser
		return ret
	}

	return o.Users
}

// GetUsersOk returns a tuple with the Users field value
// and a boolean to check if the value has been set.
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) GetUsersOk() ([]SimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.Users, true
}

// SetUsers sets field value
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) SetUsers(v []SimpleUser) {
	o.Users = v
}

// GetTeams returns the Teams field value
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) GetTeams() []Team {
	if o == nil {
		var ret []Team
		return ret
	}

	return o.Teams
}

// GetTeamsOk returns a tuple with the Teams field value
// and a boolean to check if the value has been set.
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) GetTeamsOk() ([]Team, bool) {
	if o == nil {
		return nil, false
	}
	return o.Teams, true
}

// SetTeams sets field value
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) SetTeams(v []Team) {
	o.Teams = v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) GetApps() []Integration {
	if o == nil || o.Apps == nil {
		var ret []Integration
		return ret
	}
	return o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) GetAppsOk() ([]Integration, bool) {
	if o == nil || o.Apps == nil {
		return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) HasApps() bool {
	if o != nil && o.Apps != nil {
		return true
	}

	return false
}

// SetApps gets a reference to the given []Integration and assigns it to the Apps field.
func (o *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) SetApps(v []Integration) {
	o.Apps = v
}

func (o ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["users"] = o.Users
	}
	if true {
		toSerialize["teams"] = o.Teams
	}
	if o.Apps != nil {
		toSerialize["apps"] = o.Apps
	}
	return json.Marshal(toSerialize)
}

type NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances struct {
	value *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances
	isSet bool
}

func (v NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) Get() *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
	return v.value
}

func (v *NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) Set(val *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances(val *ProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) *NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances {
	return &NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances{value: val, isSet: true}
}

func (v NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectedBranchRequiredPullRequestReviewsBypassPullRequestAllowances) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


