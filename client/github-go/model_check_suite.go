/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// CheckSuite A suite of checks performed on the code of a given code change
type CheckSuite struct {
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	HeadBranch NullableString `json:"head_branch"`
	// The SHA of the head commit that is being checked.
	HeadSha string `json:"head_sha"`
	Status NullableString `json:"status"`
	Conclusion NullableString `json:"conclusion"`
	Url NullableString `json:"url"`
	Before NullableString `json:"before"`
	After NullableString `json:"after"`
	PullRequests []PullRequestMinimal `json:"pull_requests"`
	App NullableNullableIntegration `json:"app"`
	Repository MinimalRepository `json:"repository"`
	CreatedAt NullableTime `json:"created_at"`
	UpdatedAt NullableTime `json:"updated_at"`
	HeadCommit SimpleCommit `json:"head_commit"`
	LatestCheckRunsCount int32 `json:"latest_check_runs_count"`
	CheckRunsUrl string `json:"check_runs_url"`
	Rerequestable *bool `json:"rerequestable,omitempty"`
	RunsRerequestable *bool `json:"runs_rerequestable,omitempty"`
}

// NewCheckSuite instantiates a new CheckSuite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckSuite(id int32, nodeId string, headBranch NullableString, headSha string, status NullableString, conclusion NullableString, url NullableString, before NullableString, after NullableString, pullRequests []PullRequestMinimal, app NullableNullableIntegration, repository MinimalRepository, createdAt NullableTime, updatedAt NullableTime, headCommit SimpleCommit, latestCheckRunsCount int32, checkRunsUrl string) *CheckSuite {
	this := CheckSuite{}
	this.Id = id
	this.NodeId = nodeId
	this.HeadBranch = headBranch
	this.HeadSha = headSha
	this.Status = status
	this.Conclusion = conclusion
	this.Url = url
	this.Before = before
	this.After = after
	this.PullRequests = pullRequests
	this.App = app
	this.Repository = repository
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.HeadCommit = headCommit
	this.LatestCheckRunsCount = latestCheckRunsCount
	this.CheckRunsUrl = checkRunsUrl
	return &this
}

// NewCheckSuiteWithDefaults instantiates a new CheckSuite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckSuiteWithDefaults() *CheckSuite {
	this := CheckSuite{}
	return &this
}

// GetId returns the Id field value
func (o *CheckSuite) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CheckSuite) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *CheckSuite) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *CheckSuite) SetNodeId(v string) {
	o.NodeId = v
}

// GetHeadBranch returns the HeadBranch field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckSuite) GetHeadBranch() string {
	if o == nil || o.HeadBranch.Get() == nil {
		var ret string
		return ret
	}

	return *o.HeadBranch.Get()
}

// GetHeadBranchOk returns a tuple with the HeadBranch field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetHeadBranchOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HeadBranch.Get(), o.HeadBranch.IsSet()
}

// SetHeadBranch sets field value
func (o *CheckSuite) SetHeadBranch(v string) {
	o.HeadBranch.Set(&v)
}

// GetHeadSha returns the HeadSha field value
func (o *CheckSuite) GetHeadSha() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HeadSha
}

// GetHeadShaOk returns a tuple with the HeadSha field value
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetHeadShaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeadSha, true
}

// SetHeadSha sets field value
func (o *CheckSuite) SetHeadSha(v string) {
	o.HeadSha = v
}

// GetStatus returns the Status field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckSuite) GetStatus() string {
	if o == nil || o.Status.Get() == nil {
		var ret string
		return ret
	}

	return *o.Status.Get()
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Status.Get(), o.Status.IsSet()
}

// SetStatus sets field value
func (o *CheckSuite) SetStatus(v string) {
	o.Status.Set(&v)
}

// GetConclusion returns the Conclusion field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckSuite) GetConclusion() string {
	if o == nil || o.Conclusion.Get() == nil {
		var ret string
		return ret
	}

	return *o.Conclusion.Get()
}

// GetConclusionOk returns a tuple with the Conclusion field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetConclusionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conclusion.Get(), o.Conclusion.IsSet()
}

// SetConclusion sets field value
func (o *CheckSuite) SetConclusion(v string) {
	o.Conclusion.Set(&v)
}

// GetUrl returns the Url field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckSuite) GetUrl() string {
	if o == nil || o.Url.Get() == nil {
		var ret string
		return ret
	}

	return *o.Url.Get()
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Url.Get(), o.Url.IsSet()
}

// SetUrl sets field value
func (o *CheckSuite) SetUrl(v string) {
	o.Url.Set(&v)
}

// GetBefore returns the Before field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckSuite) GetBefore() string {
	if o == nil || o.Before.Get() == nil {
		var ret string
		return ret
	}

	return *o.Before.Get()
}

// GetBeforeOk returns a tuple with the Before field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetBeforeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Before.Get(), o.Before.IsSet()
}

// SetBefore sets field value
func (o *CheckSuite) SetBefore(v string) {
	o.Before.Set(&v)
}

// GetAfter returns the After field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CheckSuite) GetAfter() string {
	if o == nil || o.After.Get() == nil {
		var ret string
		return ret
	}

	return *o.After.Get()
}

// GetAfterOk returns a tuple with the After field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetAfterOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.After.Get(), o.After.IsSet()
}

// SetAfter sets field value
func (o *CheckSuite) SetAfter(v string) {
	o.After.Set(&v)
}

// GetPullRequests returns the PullRequests field value
// If the value is explicit nil, the zero value for []PullRequestMinimal will be returned
func (o *CheckSuite) GetPullRequests() []PullRequestMinimal {
	if o == nil {
		var ret []PullRequestMinimal
		return ret
	}

	return o.PullRequests
}

// GetPullRequestsOk returns a tuple with the PullRequests field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetPullRequestsOk() ([]PullRequestMinimal, bool) {
	if o == nil || o.PullRequests == nil {
		return nil, false
	}
	return o.PullRequests, true
}

// SetPullRequests sets field value
func (o *CheckSuite) SetPullRequests(v []PullRequestMinimal) {
	o.PullRequests = v
}

// GetApp returns the App field value
// If the value is explicit nil, the zero value for NullableIntegration will be returned
func (o *CheckSuite) GetApp() NullableIntegration {
	if o == nil || o.App.Get() == nil {
		var ret NullableIntegration
		return ret
	}

	return *o.App.Get()
}

// GetAppOk returns a tuple with the App field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetAppOk() (*NullableIntegration, bool) {
	if o == nil {
		return nil, false
	}
	return o.App.Get(), o.App.IsSet()
}

// SetApp sets field value
func (o *CheckSuite) SetApp(v NullableIntegration) {
	o.App.Set(&v)
}

// GetRepository returns the Repository field value
func (o *CheckSuite) GetRepository() MinimalRepository {
	if o == nil {
		var ret MinimalRepository
		return ret
	}

	return o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetRepositoryOk() (*MinimalRepository, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Repository, true
}

// SetRepository sets field value
func (o *CheckSuite) SetRepository(v MinimalRepository) {
	o.Repository = v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CheckSuite) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *CheckSuite) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *CheckSuite) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CheckSuite) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *CheckSuite) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetHeadCommit returns the HeadCommit field value
func (o *CheckSuite) GetHeadCommit() SimpleCommit {
	if o == nil {
		var ret SimpleCommit
		return ret
	}

	return o.HeadCommit
}

// GetHeadCommitOk returns a tuple with the HeadCommit field value
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetHeadCommitOk() (*SimpleCommit, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HeadCommit, true
}

// SetHeadCommit sets field value
func (o *CheckSuite) SetHeadCommit(v SimpleCommit) {
	o.HeadCommit = v
}

// GetLatestCheckRunsCount returns the LatestCheckRunsCount field value
func (o *CheckSuite) GetLatestCheckRunsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LatestCheckRunsCount
}

// GetLatestCheckRunsCountOk returns a tuple with the LatestCheckRunsCount field value
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetLatestCheckRunsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestCheckRunsCount, true
}

// SetLatestCheckRunsCount sets field value
func (o *CheckSuite) SetLatestCheckRunsCount(v int32) {
	o.LatestCheckRunsCount = v
}

// GetCheckRunsUrl returns the CheckRunsUrl field value
func (o *CheckSuite) GetCheckRunsUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CheckRunsUrl
}

// GetCheckRunsUrlOk returns a tuple with the CheckRunsUrl field value
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetCheckRunsUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CheckRunsUrl, true
}

// SetCheckRunsUrl sets field value
func (o *CheckSuite) SetCheckRunsUrl(v string) {
	o.CheckRunsUrl = v
}

// GetRerequestable returns the Rerequestable field value if set, zero value otherwise.
func (o *CheckSuite) GetRerequestable() bool {
	if o == nil || o.Rerequestable == nil {
		var ret bool
		return ret
	}
	return *o.Rerequestable
}

// GetRerequestableOk returns a tuple with the Rerequestable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetRerequestableOk() (*bool, bool) {
	if o == nil || o.Rerequestable == nil {
		return nil, false
	}
	return o.Rerequestable, true
}

// HasRerequestable returns a boolean if a field has been set.
func (o *CheckSuite) HasRerequestable() bool {
	if o != nil && o.Rerequestable != nil {
		return true
	}

	return false
}

// SetRerequestable gets a reference to the given bool and assigns it to the Rerequestable field.
func (o *CheckSuite) SetRerequestable(v bool) {
	o.Rerequestable = &v
}

// GetRunsRerequestable returns the RunsRerequestable field value if set, zero value otherwise.
func (o *CheckSuite) GetRunsRerequestable() bool {
	if o == nil || o.RunsRerequestable == nil {
		var ret bool
		return ret
	}
	return *o.RunsRerequestable
}

// GetRunsRerequestableOk returns a tuple with the RunsRerequestable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckSuite) GetRunsRerequestableOk() (*bool, bool) {
	if o == nil || o.RunsRerequestable == nil {
		return nil, false
	}
	return o.RunsRerequestable, true
}

// HasRunsRerequestable returns a boolean if a field has been set.
func (o *CheckSuite) HasRunsRerequestable() bool {
	if o != nil && o.RunsRerequestable != nil {
		return true
	}

	return false
}

// SetRunsRerequestable gets a reference to the given bool and assigns it to the RunsRerequestable field.
func (o *CheckSuite) SetRunsRerequestable(v bool) {
	o.RunsRerequestable = &v
}

func (o CheckSuite) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["head_branch"] = o.HeadBranch.Get()
	}
	if true {
		toSerialize["head_sha"] = o.HeadSha
	}
	if true {
		toSerialize["status"] = o.Status.Get()
	}
	if true {
		toSerialize["conclusion"] = o.Conclusion.Get()
	}
	if true {
		toSerialize["url"] = o.Url.Get()
	}
	if true {
		toSerialize["before"] = o.Before.Get()
	}
	if true {
		toSerialize["after"] = o.After.Get()
	}
	if o.PullRequests != nil {
		toSerialize["pull_requests"] = o.PullRequests
	}
	if true {
		toSerialize["app"] = o.App.Get()
	}
	if true {
		toSerialize["repository"] = o.Repository
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if true {
		toSerialize["head_commit"] = o.HeadCommit
	}
	if true {
		toSerialize["latest_check_runs_count"] = o.LatestCheckRunsCount
	}
	if true {
		toSerialize["check_runs_url"] = o.CheckRunsUrl
	}
	if o.Rerequestable != nil {
		toSerialize["rerequestable"] = o.Rerequestable
	}
	if o.RunsRerequestable != nil {
		toSerialize["runs_rerequestable"] = o.RunsRerequestable
	}
	return json.Marshal(toSerialize)
}

type NullableCheckSuite struct {
	value *CheckSuite
	isSet bool
}

func (v NullableCheckSuite) Get() *CheckSuite {
	return v.value
}

func (v *NullableCheckSuite) Set(val *CheckSuite) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckSuite) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckSuite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckSuite(val *CheckSuite) *NullableCheckSuite {
	return &NullableCheckSuite{value: val, isSet: true}
}

func (v NullableCheckSuite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckSuite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


