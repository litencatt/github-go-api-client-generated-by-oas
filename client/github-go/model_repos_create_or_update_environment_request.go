/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposCreateOrUpdateEnvironmentRequest struct for ReposCreateOrUpdateEnvironmentRequest
type ReposCreateOrUpdateEnvironmentRequest struct {
	// The amount of time to delay a job after the job is initially triggered. The time (in minutes) must be an integer between 0 and 43,200 (30 days).
	WaitTimer *int32 `json:"wait_timer,omitempty"`
	// The people or teams that may review jobs that reference the environment. You can list up to six users or teams as reviewers. The reviewers must have at least read access to the repository. Only one of the required reviewers needs to approve the job for it to proceed.
	Reviewers []ReposCreateOrUpdateEnvironmentRequestReviewersInner `json:"reviewers,omitempty"`
	DeploymentBranchPolicy NullableDeploymentBranchPolicy `json:"deployment_branch_policy,omitempty"`
}

// NewReposCreateOrUpdateEnvironmentRequest instantiates a new ReposCreateOrUpdateEnvironmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposCreateOrUpdateEnvironmentRequest() *ReposCreateOrUpdateEnvironmentRequest {
	this := ReposCreateOrUpdateEnvironmentRequest{}
	return &this
}

// NewReposCreateOrUpdateEnvironmentRequestWithDefaults instantiates a new ReposCreateOrUpdateEnvironmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposCreateOrUpdateEnvironmentRequestWithDefaults() *ReposCreateOrUpdateEnvironmentRequest {
	this := ReposCreateOrUpdateEnvironmentRequest{}
	return &this
}

// GetWaitTimer returns the WaitTimer field value if set, zero value otherwise.
func (o *ReposCreateOrUpdateEnvironmentRequest) GetWaitTimer() int32 {
	if o == nil || o.WaitTimer == nil {
		var ret int32
		return ret
	}
	return *o.WaitTimer
}

// GetWaitTimerOk returns a tuple with the WaitTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposCreateOrUpdateEnvironmentRequest) GetWaitTimerOk() (*int32, bool) {
	if o == nil || o.WaitTimer == nil {
		return nil, false
	}
	return o.WaitTimer, true
}

// HasWaitTimer returns a boolean if a field has been set.
func (o *ReposCreateOrUpdateEnvironmentRequest) HasWaitTimer() bool {
	if o != nil && o.WaitTimer != nil {
		return true
	}

	return false
}

// SetWaitTimer gets a reference to the given int32 and assigns it to the WaitTimer field.
func (o *ReposCreateOrUpdateEnvironmentRequest) SetWaitTimer(v int32) {
	o.WaitTimer = &v
}

// GetReviewers returns the Reviewers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReposCreateOrUpdateEnvironmentRequest) GetReviewers() []ReposCreateOrUpdateEnvironmentRequestReviewersInner {
	if o == nil {
		var ret []ReposCreateOrUpdateEnvironmentRequestReviewersInner
		return ret
	}
	return o.Reviewers
}

// GetReviewersOk returns a tuple with the Reviewers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReposCreateOrUpdateEnvironmentRequest) GetReviewersOk() ([]ReposCreateOrUpdateEnvironmentRequestReviewersInner, bool) {
	if o == nil || o.Reviewers == nil {
		return nil, false
	}
	return o.Reviewers, true
}

// HasReviewers returns a boolean if a field has been set.
func (o *ReposCreateOrUpdateEnvironmentRequest) HasReviewers() bool {
	if o != nil && o.Reviewers != nil {
		return true
	}

	return false
}

// SetReviewers gets a reference to the given []ReposCreateOrUpdateEnvironmentRequestReviewersInner and assigns it to the Reviewers field.
func (o *ReposCreateOrUpdateEnvironmentRequest) SetReviewers(v []ReposCreateOrUpdateEnvironmentRequestReviewersInner) {
	o.Reviewers = v
}

// GetDeploymentBranchPolicy returns the DeploymentBranchPolicy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ReposCreateOrUpdateEnvironmentRequest) GetDeploymentBranchPolicy() DeploymentBranchPolicy {
	if o == nil || o.DeploymentBranchPolicy.Get() == nil {
		var ret DeploymentBranchPolicy
		return ret
	}
	return *o.DeploymentBranchPolicy.Get()
}

// GetDeploymentBranchPolicyOk returns a tuple with the DeploymentBranchPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ReposCreateOrUpdateEnvironmentRequest) GetDeploymentBranchPolicyOk() (*DeploymentBranchPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeploymentBranchPolicy.Get(), o.DeploymentBranchPolicy.IsSet()
}

// HasDeploymentBranchPolicy returns a boolean if a field has been set.
func (o *ReposCreateOrUpdateEnvironmentRequest) HasDeploymentBranchPolicy() bool {
	if o != nil && o.DeploymentBranchPolicy.IsSet() {
		return true
	}

	return false
}

// SetDeploymentBranchPolicy gets a reference to the given NullableDeploymentBranchPolicy and assigns it to the DeploymentBranchPolicy field.
func (o *ReposCreateOrUpdateEnvironmentRequest) SetDeploymentBranchPolicy(v DeploymentBranchPolicy) {
	o.DeploymentBranchPolicy.Set(&v)
}
// SetDeploymentBranchPolicyNil sets the value for DeploymentBranchPolicy to be an explicit nil
func (o *ReposCreateOrUpdateEnvironmentRequest) SetDeploymentBranchPolicyNil() {
	o.DeploymentBranchPolicy.Set(nil)
}

// UnsetDeploymentBranchPolicy ensures that no value is present for DeploymentBranchPolicy, not even an explicit nil
func (o *ReposCreateOrUpdateEnvironmentRequest) UnsetDeploymentBranchPolicy() {
	o.DeploymentBranchPolicy.Unset()
}

func (o ReposCreateOrUpdateEnvironmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.WaitTimer != nil {
		toSerialize["wait_timer"] = o.WaitTimer
	}
	if o.Reviewers != nil {
		toSerialize["reviewers"] = o.Reviewers
	}
	if o.DeploymentBranchPolicy.IsSet() {
		toSerialize["deployment_branch_policy"] = o.DeploymentBranchPolicy.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableReposCreateOrUpdateEnvironmentRequest struct {
	value *ReposCreateOrUpdateEnvironmentRequest
	isSet bool
}

func (v NullableReposCreateOrUpdateEnvironmentRequest) Get() *ReposCreateOrUpdateEnvironmentRequest {
	return v.value
}

func (v *NullableReposCreateOrUpdateEnvironmentRequest) Set(val *ReposCreateOrUpdateEnvironmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposCreateOrUpdateEnvironmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposCreateOrUpdateEnvironmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposCreateOrUpdateEnvironmentRequest(val *ReposCreateOrUpdateEnvironmentRequest) *NullableReposCreateOrUpdateEnvironmentRequest {
	return &NullableReposCreateOrUpdateEnvironmentRequest{value: val, isSet: true}
}

func (v NullableReposCreateOrUpdateEnvironmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposCreateOrUpdateEnvironmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


