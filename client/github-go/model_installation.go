/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// Installation Installation
type Installation struct {
	// The ID of the installation.
	Id int32 `json:"id"`
	Account NullableInstallationAccount `json:"account"`
	// Describe whether all repositories have been selected or there's a selection involved
	RepositorySelection string `json:"repository_selection"`
	AccessTokensUrl string `json:"access_tokens_url"`
	RepositoriesUrl string `json:"repositories_url"`
	HtmlUrl string `json:"html_url"`
	AppId int32 `json:"app_id"`
	// The ID of the user or organization this token is being scoped to.
	TargetId int32 `json:"target_id"`
	TargetType string `json:"target_type"`
	Permissions AppPermissions `json:"permissions"`
	Events []string `json:"events"`
	CreatedAt time.Time `json:"created_at"`
	UpdatedAt time.Time `json:"updated_at"`
	SingleFileName NullableString `json:"single_file_name"`
	HasMultipleSingleFiles *bool `json:"has_multiple_single_files,omitempty"`
	SingleFilePaths []string `json:"single_file_paths,omitempty"`
	AppSlug string `json:"app_slug"`
	SuspendedBy NullableNullableSimpleUser `json:"suspended_by"`
	SuspendedAt NullableTime `json:"suspended_at"`
	ContactEmail NullableString `json:"contact_email,omitempty"`
}

// NewInstallation instantiates a new Installation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstallation(id int32, account NullableInstallationAccount, repositorySelection string, accessTokensUrl string, repositoriesUrl string, htmlUrl string, appId int32, targetId int32, targetType string, permissions AppPermissions, events []string, createdAt time.Time, updatedAt time.Time, singleFileName NullableString, appSlug string, suspendedBy NullableNullableSimpleUser, suspendedAt NullableTime) *Installation {
	this := Installation{}
	this.Id = id
	this.Account = account
	this.RepositorySelection = repositorySelection
	this.AccessTokensUrl = accessTokensUrl
	this.RepositoriesUrl = repositoriesUrl
	this.HtmlUrl = htmlUrl
	this.AppId = appId
	this.TargetId = targetId
	this.TargetType = targetType
	this.Permissions = permissions
	this.Events = events
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.SingleFileName = singleFileName
	this.AppSlug = appSlug
	this.SuspendedBy = suspendedBy
	this.SuspendedAt = suspendedAt
	return &this
}

// NewInstallationWithDefaults instantiates a new Installation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstallationWithDefaults() *Installation {
	this := Installation{}
	return &this
}

// GetId returns the Id field value
func (o *Installation) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Installation) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Installation) SetId(v int32) {
	o.Id = v
}

// GetAccount returns the Account field value
// If the value is explicit nil, the zero value for InstallationAccount will be returned
func (o *Installation) GetAccount() InstallationAccount {
	if o == nil || o.Account.Get() == nil {
		var ret InstallationAccount
		return ret
	}

	return *o.Account.Get()
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Installation) GetAccountOk() (*InstallationAccount, bool) {
	if o == nil {
		return nil, false
	}
	return o.Account.Get(), o.Account.IsSet()
}

// SetAccount sets field value
func (o *Installation) SetAccount(v InstallationAccount) {
	o.Account.Set(&v)
}

// GetRepositorySelection returns the RepositorySelection field value
func (o *Installation) GetRepositorySelection() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositorySelection
}

// GetRepositorySelectionOk returns a tuple with the RepositorySelection field value
// and a boolean to check if the value has been set.
func (o *Installation) GetRepositorySelectionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositorySelection, true
}

// SetRepositorySelection sets field value
func (o *Installation) SetRepositorySelection(v string) {
	o.RepositorySelection = v
}

// GetAccessTokensUrl returns the AccessTokensUrl field value
func (o *Installation) GetAccessTokensUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessTokensUrl
}

// GetAccessTokensUrlOk returns a tuple with the AccessTokensUrl field value
// and a boolean to check if the value has been set.
func (o *Installation) GetAccessTokensUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessTokensUrl, true
}

// SetAccessTokensUrl sets field value
func (o *Installation) SetAccessTokensUrl(v string) {
	o.AccessTokensUrl = v
}

// GetRepositoriesUrl returns the RepositoriesUrl field value
func (o *Installation) GetRepositoriesUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RepositoriesUrl
}

// GetRepositoriesUrlOk returns a tuple with the RepositoriesUrl field value
// and a boolean to check if the value has been set.
func (o *Installation) GetRepositoriesUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RepositoriesUrl, true
}

// SetRepositoriesUrl sets field value
func (o *Installation) SetRepositoriesUrl(v string) {
	o.RepositoriesUrl = v
}

// GetHtmlUrl returns the HtmlUrl field value
func (o *Installation) GetHtmlUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HtmlUrl
}

// GetHtmlUrlOk returns a tuple with the HtmlUrl field value
// and a boolean to check if the value has been set.
func (o *Installation) GetHtmlUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HtmlUrl, true
}

// SetHtmlUrl sets field value
func (o *Installation) SetHtmlUrl(v string) {
	o.HtmlUrl = v
}

// GetAppId returns the AppId field value
func (o *Installation) GetAppId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *Installation) GetAppIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *Installation) SetAppId(v int32) {
	o.AppId = v
}

// GetTargetId returns the TargetId field value
func (o *Installation) GetTargetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value
// and a boolean to check if the value has been set.
func (o *Installation) GetTargetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetId, true
}

// SetTargetId sets field value
func (o *Installation) SetTargetId(v int32) {
	o.TargetId = v
}

// GetTargetType returns the TargetType field value
func (o *Installation) GetTargetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetType
}

// GetTargetTypeOk returns a tuple with the TargetType field value
// and a boolean to check if the value has been set.
func (o *Installation) GetTargetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetType, true
}

// SetTargetType sets field value
func (o *Installation) SetTargetType(v string) {
	o.TargetType = v
}

// GetPermissions returns the Permissions field value
func (o *Installation) GetPermissions() AppPermissions {
	if o == nil {
		var ret AppPermissions
		return ret
	}

	return o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value
// and a boolean to check if the value has been set.
func (o *Installation) GetPermissionsOk() (*AppPermissions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permissions, true
}

// SetPermissions sets field value
func (o *Installation) SetPermissions(v AppPermissions) {
	o.Permissions = v
}

// GetEvents returns the Events field value
func (o *Installation) GetEvents() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *Installation) GetEventsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *Installation) SetEvents(v []string) {
	o.Events = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *Installation) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *Installation) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *Installation) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *Installation) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *Installation) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *Installation) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetSingleFileName returns the SingleFileName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *Installation) GetSingleFileName() string {
	if o == nil || o.SingleFileName.Get() == nil {
		var ret string
		return ret
	}

	return *o.SingleFileName.Get()
}

// GetSingleFileNameOk returns a tuple with the SingleFileName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Installation) GetSingleFileNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SingleFileName.Get(), o.SingleFileName.IsSet()
}

// SetSingleFileName sets field value
func (o *Installation) SetSingleFileName(v string) {
	o.SingleFileName.Set(&v)
}

// GetHasMultipleSingleFiles returns the HasMultipleSingleFiles field value if set, zero value otherwise.
func (o *Installation) GetHasMultipleSingleFiles() bool {
	if o == nil || o.HasMultipleSingleFiles == nil {
		var ret bool
		return ret
	}
	return *o.HasMultipleSingleFiles
}

// GetHasMultipleSingleFilesOk returns a tuple with the HasMultipleSingleFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Installation) GetHasMultipleSingleFilesOk() (*bool, bool) {
	if o == nil || o.HasMultipleSingleFiles == nil {
		return nil, false
	}
	return o.HasMultipleSingleFiles, true
}

// HasHasMultipleSingleFiles returns a boolean if a field has been set.
func (o *Installation) HasHasMultipleSingleFiles() bool {
	if o != nil && o.HasMultipleSingleFiles != nil {
		return true
	}

	return false
}

// SetHasMultipleSingleFiles gets a reference to the given bool and assigns it to the HasMultipleSingleFiles field.
func (o *Installation) SetHasMultipleSingleFiles(v bool) {
	o.HasMultipleSingleFiles = &v
}

// GetSingleFilePaths returns the SingleFilePaths field value if set, zero value otherwise.
func (o *Installation) GetSingleFilePaths() []string {
	if o == nil || o.SingleFilePaths == nil {
		var ret []string
		return ret
	}
	return o.SingleFilePaths
}

// GetSingleFilePathsOk returns a tuple with the SingleFilePaths field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Installation) GetSingleFilePathsOk() ([]string, bool) {
	if o == nil || o.SingleFilePaths == nil {
		return nil, false
	}
	return o.SingleFilePaths, true
}

// HasSingleFilePaths returns a boolean if a field has been set.
func (o *Installation) HasSingleFilePaths() bool {
	if o != nil && o.SingleFilePaths != nil {
		return true
	}

	return false
}

// SetSingleFilePaths gets a reference to the given []string and assigns it to the SingleFilePaths field.
func (o *Installation) SetSingleFilePaths(v []string) {
	o.SingleFilePaths = v
}

// GetAppSlug returns the AppSlug field value
func (o *Installation) GetAppSlug() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppSlug
}

// GetAppSlugOk returns a tuple with the AppSlug field value
// and a boolean to check if the value has been set.
func (o *Installation) GetAppSlugOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppSlug, true
}

// SetAppSlug sets field value
func (o *Installation) SetAppSlug(v string) {
	o.AppSlug = v
}

// GetSuspendedBy returns the SuspendedBy field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *Installation) GetSuspendedBy() NullableSimpleUser {
	if o == nil || o.SuspendedBy.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.SuspendedBy.Get()
}

// GetSuspendedByOk returns a tuple with the SuspendedBy field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Installation) GetSuspendedByOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuspendedBy.Get(), o.SuspendedBy.IsSet()
}

// SetSuspendedBy sets field value
func (o *Installation) SetSuspendedBy(v NullableSimpleUser) {
	o.SuspendedBy.Set(&v)
}

// GetSuspendedAt returns the SuspendedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Installation) GetSuspendedAt() time.Time {
	if o == nil || o.SuspendedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.SuspendedAt.Get()
}

// GetSuspendedAtOk returns a tuple with the SuspendedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Installation) GetSuspendedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuspendedAt.Get(), o.SuspendedAt.IsSet()
}

// SetSuspendedAt sets field value
func (o *Installation) SetSuspendedAt(v time.Time) {
	o.SuspendedAt.Set(&v)
}

// GetContactEmail returns the ContactEmail field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Installation) GetContactEmail() string {
	if o == nil || o.ContactEmail.Get() == nil {
		var ret string
		return ret
	}
	return *o.ContactEmail.Get()
}

// GetContactEmailOk returns a tuple with the ContactEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Installation) GetContactEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ContactEmail.Get(), o.ContactEmail.IsSet()
}

// HasContactEmail returns a boolean if a field has been set.
func (o *Installation) HasContactEmail() bool {
	if o != nil && o.ContactEmail.IsSet() {
		return true
	}

	return false
}

// SetContactEmail gets a reference to the given NullableString and assigns it to the ContactEmail field.
func (o *Installation) SetContactEmail(v string) {
	o.ContactEmail.Set(&v)
}
// SetContactEmailNil sets the value for ContactEmail to be an explicit nil
func (o *Installation) SetContactEmailNil() {
	o.ContactEmail.Set(nil)
}

// UnsetContactEmail ensures that no value is present for ContactEmail, not even an explicit nil
func (o *Installation) UnsetContactEmail() {
	o.ContactEmail.Unset()
}

func (o Installation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["account"] = o.Account.Get()
	}
	if true {
		toSerialize["repository_selection"] = o.RepositorySelection
	}
	if true {
		toSerialize["access_tokens_url"] = o.AccessTokensUrl
	}
	if true {
		toSerialize["repositories_url"] = o.RepositoriesUrl
	}
	if true {
		toSerialize["html_url"] = o.HtmlUrl
	}
	if true {
		toSerialize["app_id"] = o.AppId
	}
	if true {
		toSerialize["target_id"] = o.TargetId
	}
	if true {
		toSerialize["target_type"] = o.TargetType
	}
	if true {
		toSerialize["permissions"] = o.Permissions
	}
	if true {
		toSerialize["events"] = o.Events
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if true {
		toSerialize["single_file_name"] = o.SingleFileName.Get()
	}
	if o.HasMultipleSingleFiles != nil {
		toSerialize["has_multiple_single_files"] = o.HasMultipleSingleFiles
	}
	if o.SingleFilePaths != nil {
		toSerialize["single_file_paths"] = o.SingleFilePaths
	}
	if true {
		toSerialize["app_slug"] = o.AppSlug
	}
	if true {
		toSerialize["suspended_by"] = o.SuspendedBy.Get()
	}
	if true {
		toSerialize["suspended_at"] = o.SuspendedAt.Get()
	}
	if o.ContactEmail.IsSet() {
		toSerialize["contact_email"] = o.ContactEmail.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableInstallation struct {
	value *Installation
	isSet bool
}

func (v NullableInstallation) Get() *Installation {
	return v.value
}

func (v *NullableInstallation) Set(val *Installation) {
	v.value = val
	v.isSet = true
}

func (v NullableInstallation) IsSet() bool {
	return v.isSet
}

func (v *NullableInstallation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstallation(val *Installation) *NullableInstallation {
	return &NullableInstallation{value: val, isSet: true}
}

func (v NullableInstallation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstallation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


