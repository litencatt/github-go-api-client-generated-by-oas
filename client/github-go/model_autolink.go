/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// Autolink An autolink reference.
type Autolink struct {
	Id int32 `json:"id"`
	// The prefix of a key that is linkified.
	KeyPrefix string `json:"key_prefix"`
	// A template for the target URL that is generated if a key was found.
	UrlTemplate string `json:"url_template"`
	// Whether this autolink reference matches alphanumeric characters. If false, this autolink reference is a legacy autolink that only matches numeric characters.
	IsAlphanumeric *bool `json:"is_alphanumeric,omitempty"`
}

// NewAutolink instantiates a new Autolink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAutolink(id int32, keyPrefix string, urlTemplate string) *Autolink {
	this := Autolink{}
	this.Id = id
	this.KeyPrefix = keyPrefix
	this.UrlTemplate = urlTemplate
	return &this
}

// NewAutolinkWithDefaults instantiates a new Autolink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAutolinkWithDefaults() *Autolink {
	this := Autolink{}
	return &this
}

// GetId returns the Id field value
func (o *Autolink) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Autolink) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Autolink) SetId(v int32) {
	o.Id = v
}

// GetKeyPrefix returns the KeyPrefix field value
func (o *Autolink) GetKeyPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyPrefix
}

// GetKeyPrefixOk returns a tuple with the KeyPrefix field value
// and a boolean to check if the value has been set.
func (o *Autolink) GetKeyPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyPrefix, true
}

// SetKeyPrefix sets field value
func (o *Autolink) SetKeyPrefix(v string) {
	o.KeyPrefix = v
}

// GetUrlTemplate returns the UrlTemplate field value
func (o *Autolink) GetUrlTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UrlTemplate
}

// GetUrlTemplateOk returns a tuple with the UrlTemplate field value
// and a boolean to check if the value has been set.
func (o *Autolink) GetUrlTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UrlTemplate, true
}

// SetUrlTemplate sets field value
func (o *Autolink) SetUrlTemplate(v string) {
	o.UrlTemplate = v
}

// GetIsAlphanumeric returns the IsAlphanumeric field value if set, zero value otherwise.
func (o *Autolink) GetIsAlphanumeric() bool {
	if o == nil || o.IsAlphanumeric == nil {
		var ret bool
		return ret
	}
	return *o.IsAlphanumeric
}

// GetIsAlphanumericOk returns a tuple with the IsAlphanumeric field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Autolink) GetIsAlphanumericOk() (*bool, bool) {
	if o == nil || o.IsAlphanumeric == nil {
		return nil, false
	}
	return o.IsAlphanumeric, true
}

// HasIsAlphanumeric returns a boolean if a field has been set.
func (o *Autolink) HasIsAlphanumeric() bool {
	if o != nil && o.IsAlphanumeric != nil {
		return true
	}

	return false
}

// SetIsAlphanumeric gets a reference to the given bool and assigns it to the IsAlphanumeric field.
func (o *Autolink) SetIsAlphanumeric(v bool) {
	o.IsAlphanumeric = &v
}

func (o Autolink) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["key_prefix"] = o.KeyPrefix
	}
	if true {
		toSerialize["url_template"] = o.UrlTemplate
	}
	if o.IsAlphanumeric != nil {
		toSerialize["is_alphanumeric"] = o.IsAlphanumeric
	}
	return json.Marshal(toSerialize)
}

type NullableAutolink struct {
	value *Autolink
	isSet bool
}

func (v NullableAutolink) Get() *Autolink {
	return v.value
}

func (v *NullableAutolink) Set(val *Autolink) {
	v.value = val
	v.isSet = true
}

func (v NullableAutolink) IsSet() bool {
	return v.isSet
}

func (v *NullableAutolink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAutolink(val *Autolink) *NullableAutolink {
	return &NullableAutolink{value: val, isSet: true}
}

func (v NullableAutolink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAutolink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


