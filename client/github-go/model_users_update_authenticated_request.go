/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// UsersUpdateAuthenticatedRequest struct for UsersUpdateAuthenticatedRequest
type UsersUpdateAuthenticatedRequest struct {
	// The new name of the user.
	Name *string `json:"name,omitempty"`
	// The publicly visible email address of the user.
	Email *string `json:"email,omitempty"`
	// The new blog URL of the user.
	Blog *string `json:"blog,omitempty"`
	// The new Twitter username of the user.
	TwitterUsername NullableString `json:"twitter_username,omitempty"`
	// The new company of the user.
	Company *string `json:"company,omitempty"`
	// The new location of the user.
	Location *string `json:"location,omitempty"`
	// The new hiring availability of the user.
	Hireable *bool `json:"hireable,omitempty"`
	// The new short biography of the user.
	Bio *string `json:"bio,omitempty"`
}

// NewUsersUpdateAuthenticatedRequest instantiates a new UsersUpdateAuthenticatedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUsersUpdateAuthenticatedRequest() *UsersUpdateAuthenticatedRequest {
	this := UsersUpdateAuthenticatedRequest{}
	return &this
}

// NewUsersUpdateAuthenticatedRequestWithDefaults instantiates a new UsersUpdateAuthenticatedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUsersUpdateAuthenticatedRequestWithDefaults() *UsersUpdateAuthenticatedRequest {
	this := UsersUpdateAuthenticatedRequest{}
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UsersUpdateAuthenticatedRequest) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUpdateAuthenticatedRequest) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UsersUpdateAuthenticatedRequest) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UsersUpdateAuthenticatedRequest) SetName(v string) {
	o.Name = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *UsersUpdateAuthenticatedRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUpdateAuthenticatedRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *UsersUpdateAuthenticatedRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *UsersUpdateAuthenticatedRequest) SetEmail(v string) {
	o.Email = &v
}

// GetBlog returns the Blog field value if set, zero value otherwise.
func (o *UsersUpdateAuthenticatedRequest) GetBlog() string {
	if o == nil || o.Blog == nil {
		var ret string
		return ret
	}
	return *o.Blog
}

// GetBlogOk returns a tuple with the Blog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUpdateAuthenticatedRequest) GetBlogOk() (*string, bool) {
	if o == nil || o.Blog == nil {
		return nil, false
	}
	return o.Blog, true
}

// HasBlog returns a boolean if a field has been set.
func (o *UsersUpdateAuthenticatedRequest) HasBlog() bool {
	if o != nil && o.Blog != nil {
		return true
	}

	return false
}

// SetBlog gets a reference to the given string and assigns it to the Blog field.
func (o *UsersUpdateAuthenticatedRequest) SetBlog(v string) {
	o.Blog = &v
}

// GetTwitterUsername returns the TwitterUsername field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UsersUpdateAuthenticatedRequest) GetTwitterUsername() string {
	if o == nil || o.TwitterUsername.Get() == nil {
		var ret string
		return ret
	}
	return *o.TwitterUsername.Get()
}

// GetTwitterUsernameOk returns a tuple with the TwitterUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UsersUpdateAuthenticatedRequest) GetTwitterUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TwitterUsername.Get(), o.TwitterUsername.IsSet()
}

// HasTwitterUsername returns a boolean if a field has been set.
func (o *UsersUpdateAuthenticatedRequest) HasTwitterUsername() bool {
	if o != nil && o.TwitterUsername.IsSet() {
		return true
	}

	return false
}

// SetTwitterUsername gets a reference to the given NullableString and assigns it to the TwitterUsername field.
func (o *UsersUpdateAuthenticatedRequest) SetTwitterUsername(v string) {
	o.TwitterUsername.Set(&v)
}
// SetTwitterUsernameNil sets the value for TwitterUsername to be an explicit nil
func (o *UsersUpdateAuthenticatedRequest) SetTwitterUsernameNil() {
	o.TwitterUsername.Set(nil)
}

// UnsetTwitterUsername ensures that no value is present for TwitterUsername, not even an explicit nil
func (o *UsersUpdateAuthenticatedRequest) UnsetTwitterUsername() {
	o.TwitterUsername.Unset()
}

// GetCompany returns the Company field value if set, zero value otherwise.
func (o *UsersUpdateAuthenticatedRequest) GetCompany() string {
	if o == nil || o.Company == nil {
		var ret string
		return ret
	}
	return *o.Company
}

// GetCompanyOk returns a tuple with the Company field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUpdateAuthenticatedRequest) GetCompanyOk() (*string, bool) {
	if o == nil || o.Company == nil {
		return nil, false
	}
	return o.Company, true
}

// HasCompany returns a boolean if a field has been set.
func (o *UsersUpdateAuthenticatedRequest) HasCompany() bool {
	if o != nil && o.Company != nil {
		return true
	}

	return false
}

// SetCompany gets a reference to the given string and assigns it to the Company field.
func (o *UsersUpdateAuthenticatedRequest) SetCompany(v string) {
	o.Company = &v
}

// GetLocation returns the Location field value if set, zero value otherwise.
func (o *UsersUpdateAuthenticatedRequest) GetLocation() string {
	if o == nil || o.Location == nil {
		var ret string
		return ret
	}
	return *o.Location
}

// GetLocationOk returns a tuple with the Location field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUpdateAuthenticatedRequest) GetLocationOk() (*string, bool) {
	if o == nil || o.Location == nil {
		return nil, false
	}
	return o.Location, true
}

// HasLocation returns a boolean if a field has been set.
func (o *UsersUpdateAuthenticatedRequest) HasLocation() bool {
	if o != nil && o.Location != nil {
		return true
	}

	return false
}

// SetLocation gets a reference to the given string and assigns it to the Location field.
func (o *UsersUpdateAuthenticatedRequest) SetLocation(v string) {
	o.Location = &v
}

// GetHireable returns the Hireable field value if set, zero value otherwise.
func (o *UsersUpdateAuthenticatedRequest) GetHireable() bool {
	if o == nil || o.Hireable == nil {
		var ret bool
		return ret
	}
	return *o.Hireable
}

// GetHireableOk returns a tuple with the Hireable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUpdateAuthenticatedRequest) GetHireableOk() (*bool, bool) {
	if o == nil || o.Hireable == nil {
		return nil, false
	}
	return o.Hireable, true
}

// HasHireable returns a boolean if a field has been set.
func (o *UsersUpdateAuthenticatedRequest) HasHireable() bool {
	if o != nil && o.Hireable != nil {
		return true
	}

	return false
}

// SetHireable gets a reference to the given bool and assigns it to the Hireable field.
func (o *UsersUpdateAuthenticatedRequest) SetHireable(v bool) {
	o.Hireable = &v
}

// GetBio returns the Bio field value if set, zero value otherwise.
func (o *UsersUpdateAuthenticatedRequest) GetBio() string {
	if o == nil || o.Bio == nil {
		var ret string
		return ret
	}
	return *o.Bio
}

// GetBioOk returns a tuple with the Bio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UsersUpdateAuthenticatedRequest) GetBioOk() (*string, bool) {
	if o == nil || o.Bio == nil {
		return nil, false
	}
	return o.Bio, true
}

// HasBio returns a boolean if a field has been set.
func (o *UsersUpdateAuthenticatedRequest) HasBio() bool {
	if o != nil && o.Bio != nil {
		return true
	}

	return false
}

// SetBio gets a reference to the given string and assigns it to the Bio field.
func (o *UsersUpdateAuthenticatedRequest) SetBio(v string) {
	o.Bio = &v
}

func (o UsersUpdateAuthenticatedRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Blog != nil {
		toSerialize["blog"] = o.Blog
	}
	if o.TwitterUsername.IsSet() {
		toSerialize["twitter_username"] = o.TwitterUsername.Get()
	}
	if o.Company != nil {
		toSerialize["company"] = o.Company
	}
	if o.Location != nil {
		toSerialize["location"] = o.Location
	}
	if o.Hireable != nil {
		toSerialize["hireable"] = o.Hireable
	}
	if o.Bio != nil {
		toSerialize["bio"] = o.Bio
	}
	return json.Marshal(toSerialize)
}

type NullableUsersUpdateAuthenticatedRequest struct {
	value *UsersUpdateAuthenticatedRequest
	isSet bool
}

func (v NullableUsersUpdateAuthenticatedRequest) Get() *UsersUpdateAuthenticatedRequest {
	return v.value
}

func (v *NullableUsersUpdateAuthenticatedRequest) Set(val *UsersUpdateAuthenticatedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUsersUpdateAuthenticatedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUsersUpdateAuthenticatedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUsersUpdateAuthenticatedRequest(val *UsersUpdateAuthenticatedRequest) *NullableUsersUpdateAuthenticatedRequest {
	return &NullableUsersUpdateAuthenticatedRequest{value: val, isSet: true}
}

func (v NullableUsersUpdateAuthenticatedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUsersUpdateAuthenticatedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


