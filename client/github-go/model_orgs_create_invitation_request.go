/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// OrgsCreateInvitationRequest struct for OrgsCreateInvitationRequest
type OrgsCreateInvitationRequest struct {
	// **Required unless you provide `email`**. GitHub user ID for the person you are inviting.
	InviteeId *int32 `json:"invitee_id,omitempty"`
	// **Required unless you provide `invitee_id`**. Email address of the person you are inviting, which can be an existing GitHub user.
	Email *string `json:"email,omitempty"`
	// The role for the new member.  \\* `admin` - Organization owners with full administrative rights to the organization and complete access to all repositories and teams.   \\* `direct_member` - Non-owner organization members with ability to see other members and join teams by invitation.   \\* `billing_manager` - Non-owner organization members with ability to manage the billing settings of your organization.
	Role *string `json:"role,omitempty"`
	// Specify IDs for the teams you want to invite new members to.
	TeamIds []int32 `json:"team_ids,omitempty"`
}

// NewOrgsCreateInvitationRequest instantiates a new OrgsCreateInvitationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgsCreateInvitationRequest() *OrgsCreateInvitationRequest {
	this := OrgsCreateInvitationRequest{}
	var role string = "direct_member"
	this.Role = &role
	return &this
}

// NewOrgsCreateInvitationRequestWithDefaults instantiates a new OrgsCreateInvitationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgsCreateInvitationRequestWithDefaults() *OrgsCreateInvitationRequest {
	this := OrgsCreateInvitationRequest{}
	var role string = "direct_member"
	this.Role = &role
	return &this
}

// GetInviteeId returns the InviteeId field value if set, zero value otherwise.
func (o *OrgsCreateInvitationRequest) GetInviteeId() int32 {
	if o == nil || o.InviteeId == nil {
		var ret int32
		return ret
	}
	return *o.InviteeId
}

// GetInviteeIdOk returns a tuple with the InviteeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsCreateInvitationRequest) GetInviteeIdOk() (*int32, bool) {
	if o == nil || o.InviteeId == nil {
		return nil, false
	}
	return o.InviteeId, true
}

// HasInviteeId returns a boolean if a field has been set.
func (o *OrgsCreateInvitationRequest) HasInviteeId() bool {
	if o != nil && o.InviteeId != nil {
		return true
	}

	return false
}

// SetInviteeId gets a reference to the given int32 and assigns it to the InviteeId field.
func (o *OrgsCreateInvitationRequest) SetInviteeId(v int32) {
	o.InviteeId = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *OrgsCreateInvitationRequest) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsCreateInvitationRequest) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *OrgsCreateInvitationRequest) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *OrgsCreateInvitationRequest) SetEmail(v string) {
	o.Email = &v
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OrgsCreateInvitationRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsCreateInvitationRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OrgsCreateInvitationRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OrgsCreateInvitationRequest) SetRole(v string) {
	o.Role = &v
}

// GetTeamIds returns the TeamIds field value if set, zero value otherwise.
func (o *OrgsCreateInvitationRequest) GetTeamIds() []int32 {
	if o == nil || o.TeamIds == nil {
		var ret []int32
		return ret
	}
	return o.TeamIds
}

// GetTeamIdsOk returns a tuple with the TeamIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsCreateInvitationRequest) GetTeamIdsOk() ([]int32, bool) {
	if o == nil || o.TeamIds == nil {
		return nil, false
	}
	return o.TeamIds, true
}

// HasTeamIds returns a boolean if a field has been set.
func (o *OrgsCreateInvitationRequest) HasTeamIds() bool {
	if o != nil && o.TeamIds != nil {
		return true
	}

	return false
}

// SetTeamIds gets a reference to the given []int32 and assigns it to the TeamIds field.
func (o *OrgsCreateInvitationRequest) SetTeamIds(v []int32) {
	o.TeamIds = v
}

func (o OrgsCreateInvitationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InviteeId != nil {
		toSerialize["invitee_id"] = o.InviteeId
	}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	if o.TeamIds != nil {
		toSerialize["team_ids"] = o.TeamIds
	}
	return json.Marshal(toSerialize)
}

type NullableOrgsCreateInvitationRequest struct {
	value *OrgsCreateInvitationRequest
	isSet bool
}

func (v NullableOrgsCreateInvitationRequest) Get() *OrgsCreateInvitationRequest {
	return v.value
}

func (v *NullableOrgsCreateInvitationRequest) Set(val *OrgsCreateInvitationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgsCreateInvitationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgsCreateInvitationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgsCreateInvitationRequest(val *OrgsCreateInvitationRequest) *NullableOrgsCreateInvitationRequest {
	return &NullableOrgsCreateInvitationRequest{value: val, isSet: true}
}

func (v NullableOrgsCreateInvitationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgsCreateInvitationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


