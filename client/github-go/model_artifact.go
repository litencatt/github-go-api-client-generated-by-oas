/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"time"
)

// Artifact An artifact
type Artifact struct {
	Id int32 `json:"id"`
	NodeId string `json:"node_id"`
	// The name of the artifact.
	Name string `json:"name"`
	// The size in bytes of the artifact.
	SizeInBytes int32 `json:"size_in_bytes"`
	Url string `json:"url"`
	ArchiveDownloadUrl string `json:"archive_download_url"`
	// Whether or not the artifact has expired.
	Expired bool `json:"expired"`
	CreatedAt NullableTime `json:"created_at"`
	ExpiresAt NullableTime `json:"expires_at"`
	UpdatedAt NullableTime `json:"updated_at"`
	WorkflowRun NullableArtifactWorkflowRun `json:"workflow_run,omitempty"`
}

// NewArtifact instantiates a new Artifact object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifact(id int32, nodeId string, name string, sizeInBytes int32, url string, archiveDownloadUrl string, expired bool, createdAt NullableTime, expiresAt NullableTime, updatedAt NullableTime) *Artifact {
	this := Artifact{}
	this.Id = id
	this.NodeId = nodeId
	this.Name = name
	this.SizeInBytes = sizeInBytes
	this.Url = url
	this.ArchiveDownloadUrl = archiveDownloadUrl
	this.Expired = expired
	this.CreatedAt = createdAt
	this.ExpiresAt = expiresAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewArtifactWithDefaults instantiates a new Artifact object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactWithDefaults() *Artifact {
	this := Artifact{}
	return &this
}

// GetId returns the Id field value
func (o *Artifact) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Artifact) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Artifact) SetId(v int32) {
	o.Id = v
}

// GetNodeId returns the NodeId field value
func (o *Artifact) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *Artifact) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *Artifact) SetNodeId(v string) {
	o.NodeId = v
}

// GetName returns the Name field value
func (o *Artifact) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Artifact) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Artifact) SetName(v string) {
	o.Name = v
}

// GetSizeInBytes returns the SizeInBytes field value
func (o *Artifact) GetSizeInBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SizeInBytes
}

// GetSizeInBytesOk returns a tuple with the SizeInBytes field value
// and a boolean to check if the value has been set.
func (o *Artifact) GetSizeInBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SizeInBytes, true
}

// SetSizeInBytes sets field value
func (o *Artifact) SetSizeInBytes(v int32) {
	o.SizeInBytes = v
}

// GetUrl returns the Url field value
func (o *Artifact) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *Artifact) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *Artifact) SetUrl(v string) {
	o.Url = v
}

// GetArchiveDownloadUrl returns the ArchiveDownloadUrl field value
func (o *Artifact) GetArchiveDownloadUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ArchiveDownloadUrl
}

// GetArchiveDownloadUrlOk returns a tuple with the ArchiveDownloadUrl field value
// and a boolean to check if the value has been set.
func (o *Artifact) GetArchiveDownloadUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ArchiveDownloadUrl, true
}

// SetArchiveDownloadUrl sets field value
func (o *Artifact) SetArchiveDownloadUrl(v string) {
	o.ArchiveDownloadUrl = v
}

// GetExpired returns the Expired field value
func (o *Artifact) GetExpired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Expired
}

// GetExpiredOk returns a tuple with the Expired field value
// and a boolean to check if the value has been set.
func (o *Artifact) GetExpiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expired, true
}

// SetExpired sets field value
func (o *Artifact) SetExpired(v bool) {
	o.Expired = v
}

// GetCreatedAt returns the CreatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Artifact) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.CreatedAt.Get()
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artifact) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.CreatedAt.Get(), o.CreatedAt.IsSet()
}

// SetCreatedAt sets field value
func (o *Artifact) SetCreatedAt(v time.Time) {
	o.CreatedAt.Set(&v)
}

// GetExpiresAt returns the ExpiresAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Artifact) GetExpiresAt() time.Time {
	if o == nil || o.ExpiresAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.ExpiresAt.Get()
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artifact) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExpiresAt.Get(), o.ExpiresAt.IsSet()
}

// SetExpiresAt sets field value
func (o *Artifact) SetExpiresAt(v time.Time) {
	o.ExpiresAt.Set(&v)
}

// GetUpdatedAt returns the UpdatedAt field value
// If the value is explicit nil, the zero value for time.Time will be returned
func (o *Artifact) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt.Get() == nil {
		var ret time.Time
		return ret
	}

	return *o.UpdatedAt.Get()
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artifact) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.UpdatedAt.Get(), o.UpdatedAt.IsSet()
}

// SetUpdatedAt sets field value
func (o *Artifact) SetUpdatedAt(v time.Time) {
	o.UpdatedAt.Set(&v)
}

// GetWorkflowRun returns the WorkflowRun field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *Artifact) GetWorkflowRun() ArtifactWorkflowRun {
	if o == nil || o.WorkflowRun.Get() == nil {
		var ret ArtifactWorkflowRun
		return ret
	}
	return *o.WorkflowRun.Get()
}

// GetWorkflowRunOk returns a tuple with the WorkflowRun field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *Artifact) GetWorkflowRunOk() (*ArtifactWorkflowRun, bool) {
	if o == nil {
		return nil, false
	}
	return o.WorkflowRun.Get(), o.WorkflowRun.IsSet()
}

// HasWorkflowRun returns a boolean if a field has been set.
func (o *Artifact) HasWorkflowRun() bool {
	if o != nil && o.WorkflowRun.IsSet() {
		return true
	}

	return false
}

// SetWorkflowRun gets a reference to the given NullableArtifactWorkflowRun and assigns it to the WorkflowRun field.
func (o *Artifact) SetWorkflowRun(v ArtifactWorkflowRun) {
	o.WorkflowRun.Set(&v)
}
// SetWorkflowRunNil sets the value for WorkflowRun to be an explicit nil
func (o *Artifact) SetWorkflowRunNil() {
	o.WorkflowRun.Set(nil)
}

// UnsetWorkflowRun ensures that no value is present for WorkflowRun, not even an explicit nil
func (o *Artifact) UnsetWorkflowRun() {
	o.WorkflowRun.Unset()
}

func (o Artifact) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["node_id"] = o.NodeId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["size_in_bytes"] = o.SizeInBytes
	}
	if true {
		toSerialize["url"] = o.Url
	}
	if true {
		toSerialize["archive_download_url"] = o.ArchiveDownloadUrl
	}
	if true {
		toSerialize["expired"] = o.Expired
	}
	if true {
		toSerialize["created_at"] = o.CreatedAt.Get()
	}
	if true {
		toSerialize["expires_at"] = o.ExpiresAt.Get()
	}
	if true {
		toSerialize["updated_at"] = o.UpdatedAt.Get()
	}
	if o.WorkflowRun.IsSet() {
		toSerialize["workflow_run"] = o.WorkflowRun.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableArtifact struct {
	value *Artifact
	isSet bool
}

func (v NullableArtifact) Get() *Artifact {
	return v.value
}

func (v *NullableArtifact) Set(val *Artifact) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifact) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifact) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifact(val *Artifact) *NullableArtifact {
	return &NullableArtifact{value: val, isSet: true}
}

func (v NullableArtifact) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifact) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


