/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ProjectsMoveCard503ResponseErrorsInner struct for ProjectsMoveCard503ResponseErrorsInner
type ProjectsMoveCard503ResponseErrorsInner struct {
	Code *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewProjectsMoveCard503ResponseErrorsInner instantiates a new ProjectsMoveCard503ResponseErrorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsMoveCard503ResponseErrorsInner() *ProjectsMoveCard503ResponseErrorsInner {
	this := ProjectsMoveCard503ResponseErrorsInner{}
	return &this
}

// NewProjectsMoveCard503ResponseErrorsInnerWithDefaults instantiates a new ProjectsMoveCard503ResponseErrorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsMoveCard503ResponseErrorsInnerWithDefaults() *ProjectsMoveCard503ResponseErrorsInner {
	this := ProjectsMoveCard503ResponseErrorsInner{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProjectsMoveCard503ResponseErrorsInner) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsMoveCard503ResponseErrorsInner) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProjectsMoveCard503ResponseErrorsInner) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProjectsMoveCard503ResponseErrorsInner) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ProjectsMoveCard503ResponseErrorsInner) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsMoveCard503ResponseErrorsInner) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ProjectsMoveCard503ResponseErrorsInner) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ProjectsMoveCard503ResponseErrorsInner) SetMessage(v string) {
	o.Message = &v
}

func (o ProjectsMoveCard503ResponseErrorsInner) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsMoveCard503ResponseErrorsInner struct {
	value *ProjectsMoveCard503ResponseErrorsInner
	isSet bool
}

func (v NullableProjectsMoveCard503ResponseErrorsInner) Get() *ProjectsMoveCard503ResponseErrorsInner {
	return v.value
}

func (v *NullableProjectsMoveCard503ResponseErrorsInner) Set(val *ProjectsMoveCard503ResponseErrorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsMoveCard503ResponseErrorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsMoveCard503ResponseErrorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsMoveCard503ResponseErrorsInner(val *ProjectsMoveCard503ResponseErrorsInner) *NullableProjectsMoveCard503ResponseErrorsInner {
	return &NullableProjectsMoveCard503ResponseErrorsInner{value: val, isSet: true}
}

func (v NullableProjectsMoveCard503ResponseErrorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsMoveCard503ResponseErrorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


