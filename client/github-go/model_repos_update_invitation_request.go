/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ReposUpdateInvitationRequest struct for ReposUpdateInvitationRequest
type ReposUpdateInvitationRequest struct {
	// The permissions that the associated user will have on the repository. Valid values are `read`, `write`, `maintain`, `triage`, and `admin`.
	Permissions *string `json:"permissions,omitempty"`
}

// NewReposUpdateInvitationRequest instantiates a new ReposUpdateInvitationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReposUpdateInvitationRequest() *ReposUpdateInvitationRequest {
	this := ReposUpdateInvitationRequest{}
	return &this
}

// NewReposUpdateInvitationRequestWithDefaults instantiates a new ReposUpdateInvitationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReposUpdateInvitationRequestWithDefaults() *ReposUpdateInvitationRequest {
	this := ReposUpdateInvitationRequest{}
	return &this
}

// GetPermissions returns the Permissions field value if set, zero value otherwise.
func (o *ReposUpdateInvitationRequest) GetPermissions() string {
	if o == nil || o.Permissions == nil {
		var ret string
		return ret
	}
	return *o.Permissions
}

// GetPermissionsOk returns a tuple with the Permissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReposUpdateInvitationRequest) GetPermissionsOk() (*string, bool) {
	if o == nil || o.Permissions == nil {
		return nil, false
	}
	return o.Permissions, true
}

// HasPermissions returns a boolean if a field has been set.
func (o *ReposUpdateInvitationRequest) HasPermissions() bool {
	if o != nil && o.Permissions != nil {
		return true
	}

	return false
}

// SetPermissions gets a reference to the given string and assigns it to the Permissions field.
func (o *ReposUpdateInvitationRequest) SetPermissions(v string) {
	o.Permissions = &v
}

func (o ReposUpdateInvitationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Permissions != nil {
		toSerialize["permissions"] = o.Permissions
	}
	return json.Marshal(toSerialize)
}

type NullableReposUpdateInvitationRequest struct {
	value *ReposUpdateInvitationRequest
	isSet bool
}

func (v NullableReposUpdateInvitationRequest) Get() *ReposUpdateInvitationRequest {
	return v.value
}

func (v *NullableReposUpdateInvitationRequest) Set(val *ReposUpdateInvitationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableReposUpdateInvitationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableReposUpdateInvitationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReposUpdateInvitationRequest(val *ReposUpdateInvitationRequest) *NullableReposUpdateInvitationRequest {
	return &NullableReposUpdateInvitationRequest{value: val, isSet: true}
}

func (v NullableReposUpdateInvitationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReposUpdateInvitationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


