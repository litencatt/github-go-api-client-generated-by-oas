/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// OrgsSetMembershipForUserRequest struct for OrgsSetMembershipForUserRequest
type OrgsSetMembershipForUserRequest struct {
	// The role to give the user in the organization. Can be one of:   \\* `admin` - The user will become an owner of the organization.   \\* `member` - The user will become a non-owner member of the organization.
	Role *string `json:"role,omitempty"`
}

// NewOrgsSetMembershipForUserRequest instantiates a new OrgsSetMembershipForUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgsSetMembershipForUserRequest() *OrgsSetMembershipForUserRequest {
	this := OrgsSetMembershipForUserRequest{}
	var role string = "member"
	this.Role = &role
	return &this
}

// NewOrgsSetMembershipForUserRequestWithDefaults instantiates a new OrgsSetMembershipForUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgsSetMembershipForUserRequestWithDefaults() *OrgsSetMembershipForUserRequest {
	this := OrgsSetMembershipForUserRequest{}
	var role string = "member"
	this.Role = &role
	return &this
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *OrgsSetMembershipForUserRequest) GetRole() string {
	if o == nil || o.Role == nil {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrgsSetMembershipForUserRequest) GetRoleOk() (*string, bool) {
	if o == nil || o.Role == nil {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *OrgsSetMembershipForUserRequest) HasRole() bool {
	if o != nil && o.Role != nil {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *OrgsSetMembershipForUserRequest) SetRole(v string) {
	o.Role = &v
}

func (o OrgsSetMembershipForUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Role != nil {
		toSerialize["role"] = o.Role
	}
	return json.Marshal(toSerialize)
}

type NullableOrgsSetMembershipForUserRequest struct {
	value *OrgsSetMembershipForUserRequest
	isSet bool
}

func (v NullableOrgsSetMembershipForUserRequest) Get() *OrgsSetMembershipForUserRequest {
	return v.value
}

func (v *NullableOrgsSetMembershipForUserRequest) Set(val *OrgsSetMembershipForUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgsSetMembershipForUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgsSetMembershipForUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgsSetMembershipForUserRequest(val *OrgsSetMembershipForUserRequest) *NullableOrgsSetMembershipForUserRequest {
	return &NullableOrgsSetMembershipForUserRequest{value: val, isSet: true}
}

func (v NullableOrgsSetMembershipForUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgsSetMembershipForUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


