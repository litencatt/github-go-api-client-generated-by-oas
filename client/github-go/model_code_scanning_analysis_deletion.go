/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CodeScanningAnalysisDeletion Successful deletion of a code scanning analysis
type CodeScanningAnalysisDeletion struct {
	// Next deletable analysis in chain, without last analysis deletion confirmation
	NextAnalysisUrl NullableString `json:"next_analysis_url"`
	// Next deletable analysis in chain, with last analysis deletion confirmation
	ConfirmDeleteUrl NullableString `json:"confirm_delete_url"`
}

// NewCodeScanningAnalysisDeletion instantiates a new CodeScanningAnalysisDeletion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeScanningAnalysisDeletion(nextAnalysisUrl NullableString, confirmDeleteUrl NullableString) *CodeScanningAnalysisDeletion {
	this := CodeScanningAnalysisDeletion{}
	this.NextAnalysisUrl = nextAnalysisUrl
	this.ConfirmDeleteUrl = confirmDeleteUrl
	return &this
}

// NewCodeScanningAnalysisDeletionWithDefaults instantiates a new CodeScanningAnalysisDeletion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeScanningAnalysisDeletionWithDefaults() *CodeScanningAnalysisDeletion {
	this := CodeScanningAnalysisDeletion{}
	return &this
}

// GetNextAnalysisUrl returns the NextAnalysisUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CodeScanningAnalysisDeletion) GetNextAnalysisUrl() string {
	if o == nil || o.NextAnalysisUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.NextAnalysisUrl.Get()
}

// GetNextAnalysisUrlOk returns a tuple with the NextAnalysisUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodeScanningAnalysisDeletion) GetNextAnalysisUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NextAnalysisUrl.Get(), o.NextAnalysisUrl.IsSet()
}

// SetNextAnalysisUrl sets field value
func (o *CodeScanningAnalysisDeletion) SetNextAnalysisUrl(v string) {
	o.NextAnalysisUrl.Set(&v)
}

// GetConfirmDeleteUrl returns the ConfirmDeleteUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *CodeScanningAnalysisDeletion) GetConfirmDeleteUrl() string {
	if o == nil || o.ConfirmDeleteUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.ConfirmDeleteUrl.Get()
}

// GetConfirmDeleteUrlOk returns a tuple with the ConfirmDeleteUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CodeScanningAnalysisDeletion) GetConfirmDeleteUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ConfirmDeleteUrl.Get(), o.ConfirmDeleteUrl.IsSet()
}

// SetConfirmDeleteUrl sets field value
func (o *CodeScanningAnalysisDeletion) SetConfirmDeleteUrl(v string) {
	o.ConfirmDeleteUrl.Set(&v)
}

func (o CodeScanningAnalysisDeletion) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["next_analysis_url"] = o.NextAnalysisUrl.Get()
	}
	if true {
		toSerialize["confirm_delete_url"] = o.ConfirmDeleteUrl.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableCodeScanningAnalysisDeletion struct {
	value *CodeScanningAnalysisDeletion
	isSet bool
}

func (v NullableCodeScanningAnalysisDeletion) Get() *CodeScanningAnalysisDeletion {
	return v.value
}

func (v *NullableCodeScanningAnalysisDeletion) Set(val *CodeScanningAnalysisDeletion) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeScanningAnalysisDeletion) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeScanningAnalysisDeletion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeScanningAnalysisDeletion(val *CodeScanningAnalysisDeletion) *NullableCodeScanningAnalysisDeletion {
	return &NullableCodeScanningAnalysisDeletion{value: val, isSet: true}
}

func (v NullableCodeScanningAnalysisDeletion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeScanningAnalysisDeletion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


