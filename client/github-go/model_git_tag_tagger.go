/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GitTagTagger struct for GitTagTagger
type GitTagTagger struct {
	Date string `json:"date"`
	Email string `json:"email"`
	Name string `json:"name"`
}

// NewGitTagTagger instantiates a new GitTagTagger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitTagTagger(date string, email string, name string) *GitTagTagger {
	this := GitTagTagger{}
	this.Date = date
	this.Email = email
	this.Name = name
	return &this
}

// NewGitTagTaggerWithDefaults instantiates a new GitTagTagger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitTagTaggerWithDefaults() *GitTagTagger {
	this := GitTagTagger{}
	return &this
}

// GetDate returns the Date field value
func (o *GitTagTagger) GetDate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Date
}

// GetDateOk returns a tuple with the Date field value
// and a boolean to check if the value has been set.
func (o *GitTagTagger) GetDateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Date, true
}

// SetDate sets field value
func (o *GitTagTagger) SetDate(v string) {
	o.Date = v
}

// GetEmail returns the Email field value
func (o *GitTagTagger) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *GitTagTagger) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *GitTagTagger) SetEmail(v string) {
	o.Email = v
}

// GetName returns the Name field value
func (o *GitTagTagger) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GitTagTagger) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GitTagTagger) SetName(v string) {
	o.Name = v
}

func (o GitTagTagger) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["date"] = o.Date
	}
	if true {
		toSerialize["email"] = o.Email
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableGitTagTagger struct {
	value *GitTagTagger
	isSet bool
}

func (v NullableGitTagTagger) Get() *GitTagTagger {
	return v.value
}

func (v *NullableGitTagTagger) Set(val *GitTagTagger) {
	v.value = val
	v.isSet = true
}

func (v NullableGitTagTagger) IsSet() bool {
	return v.isSet
}

func (v *NullableGitTagTagger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitTagTagger(val *GitTagTagger) *NullableGitTagTagger {
	return &NullableGitTagTagger{value: val, isSet: true}
}

func (v NullableGitTagTagger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitTagTagger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


