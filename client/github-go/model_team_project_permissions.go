/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// TeamProjectPermissions struct for TeamProjectPermissions
type TeamProjectPermissions struct {
	Read bool `json:"read"`
	Write bool `json:"write"`
	Admin bool `json:"admin"`
}

// NewTeamProjectPermissions instantiates a new TeamProjectPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTeamProjectPermissions(read bool, write bool, admin bool) *TeamProjectPermissions {
	this := TeamProjectPermissions{}
	this.Read = read
	this.Write = write
	this.Admin = admin
	return &this
}

// NewTeamProjectPermissionsWithDefaults instantiates a new TeamProjectPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTeamProjectPermissionsWithDefaults() *TeamProjectPermissions {
	this := TeamProjectPermissions{}
	return &this
}

// GetRead returns the Read field value
func (o *TeamProjectPermissions) GetRead() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Read
}

// GetReadOk returns a tuple with the Read field value
// and a boolean to check if the value has been set.
func (o *TeamProjectPermissions) GetReadOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Read, true
}

// SetRead sets field value
func (o *TeamProjectPermissions) SetRead(v bool) {
	o.Read = v
}

// GetWrite returns the Write field value
func (o *TeamProjectPermissions) GetWrite() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Write
}

// GetWriteOk returns a tuple with the Write field value
// and a boolean to check if the value has been set.
func (o *TeamProjectPermissions) GetWriteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Write, true
}

// SetWrite sets field value
func (o *TeamProjectPermissions) SetWrite(v bool) {
	o.Write = v
}

// GetAdmin returns the Admin field value
func (o *TeamProjectPermissions) GetAdmin() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Admin
}

// GetAdminOk returns a tuple with the Admin field value
// and a boolean to check if the value has been set.
func (o *TeamProjectPermissions) GetAdminOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Admin, true
}

// SetAdmin sets field value
func (o *TeamProjectPermissions) SetAdmin(v bool) {
	o.Admin = v
}

func (o TeamProjectPermissions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["read"] = o.Read
	}
	if true {
		toSerialize["write"] = o.Write
	}
	if true {
		toSerialize["admin"] = o.Admin
	}
	return json.Marshal(toSerialize)
}

type NullableTeamProjectPermissions struct {
	value *TeamProjectPermissions
	isSet bool
}

func (v NullableTeamProjectPermissions) Get() *TeamProjectPermissions {
	return v.value
}

func (v *NullableTeamProjectPermissions) Set(val *TeamProjectPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableTeamProjectPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableTeamProjectPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTeamProjectPermissions(val *TeamProjectPermissions) *NullableTeamProjectPermissions {
	return &NullableTeamProjectPermissions{value: val, isSet: true}
}

func (v NullableTeamProjectPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTeamProjectPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


