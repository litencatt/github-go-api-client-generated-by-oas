/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// GistsCreateRequest struct for GistsCreateRequest
type GistsCreateRequest struct {
	// Description of the gist
	Description *string `json:"description,omitempty"`
	// Names and content for the files that make up the gist
	Files map[string]GistsCreateRequestFilesValue `json:"files"`
	Public *GistsCreateRequestPublic `json:"public,omitempty"`
}

// NewGistsCreateRequest instantiates a new GistsCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGistsCreateRequest(files map[string]GistsCreateRequestFilesValue) *GistsCreateRequest {
	this := GistsCreateRequest{}
	this.Files = files
	return &this
}

// NewGistsCreateRequestWithDefaults instantiates a new GistsCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGistsCreateRequestWithDefaults() *GistsCreateRequest {
	this := GistsCreateRequest{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GistsCreateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GistsCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GistsCreateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GistsCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetFiles returns the Files field value
func (o *GistsCreateRequest) GetFiles() map[string]GistsCreateRequestFilesValue {
	if o == nil {
		var ret map[string]GistsCreateRequestFilesValue
		return ret
	}

	return o.Files
}

// GetFilesOk returns a tuple with the Files field value
// and a boolean to check if the value has been set.
func (o *GistsCreateRequest) GetFilesOk() (*map[string]GistsCreateRequestFilesValue, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Files, true
}

// SetFiles sets field value
func (o *GistsCreateRequest) SetFiles(v map[string]GistsCreateRequestFilesValue) {
	o.Files = v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *GistsCreateRequest) GetPublic() GistsCreateRequestPublic {
	if o == nil || o.Public == nil {
		var ret GistsCreateRequestPublic
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GistsCreateRequest) GetPublicOk() (*GistsCreateRequestPublic, bool) {
	if o == nil || o.Public == nil {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *GistsCreateRequest) HasPublic() bool {
	if o != nil && o.Public != nil {
		return true
	}

	return false
}

// SetPublic gets a reference to the given GistsCreateRequestPublic and assigns it to the Public field.
func (o *GistsCreateRequest) SetPublic(v GistsCreateRequestPublic) {
	o.Public = &v
}

func (o GistsCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["files"] = o.Files
	}
	if o.Public != nil {
		toSerialize["public"] = o.Public
	}
	return json.Marshal(toSerialize)
}

type NullableGistsCreateRequest struct {
	value *GistsCreateRequest
	isSet bool
}

func (v NullableGistsCreateRequest) Get() *GistsCreateRequest {
	return v.value
}

func (v *NullableGistsCreateRequest) Set(val *GistsCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGistsCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGistsCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGistsCreateRequest(val *GistsCreateRequest) *NullableGistsCreateRequest {
	return &NullableGistsCreateRequest{value: val, isSet: true}
}

func (v NullableGistsCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGistsCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


