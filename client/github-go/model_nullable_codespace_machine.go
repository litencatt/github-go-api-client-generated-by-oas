/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// NullableCodespaceMachine A description of the machine powering a codespace.
type NullableCodespaceMachine struct {
	// The name of the machine.
	Name string `json:"name"`
	// The display name of the machine includes cores, memory, and storage.
	DisplayName string `json:"display_name"`
	// The operating system of the machine.
	OperatingSystem string `json:"operating_system"`
	// How much storage is available to the codespace.
	StorageInBytes int32 `json:"storage_in_bytes"`
	// How much memory is available to the codespace.
	MemoryInBytes int32 `json:"memory_in_bytes"`
	// How many cores are available to the codespace.
	Cpus int32 `json:"cpus"`
	// Whether a prebuild is currently available when creating a codespace for this machine and repository. If a branch was not specified as a ref, the default branch will be assumed. Value will be \"null\" if prebuilds are not supported or prebuild availability could not be determined. Value will be \"none\" if no prebuild is available. Latest values \"ready\" and \"in_progress\" indicate the prebuild availability status.
	PrebuildAvailability NullableString `json:"prebuild_availability"`
}

// NewNullableCodespaceMachine instantiates a new NullableCodespaceMachine object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNullableCodespaceMachine(name string, displayName string, operatingSystem string, storageInBytes int32, memoryInBytes int32, cpus int32, prebuildAvailability NullableString) *NullableCodespaceMachine {
	this := NullableCodespaceMachine{}
	this.Name = name
	this.DisplayName = displayName
	this.OperatingSystem = operatingSystem
	this.StorageInBytes = storageInBytes
	this.MemoryInBytes = memoryInBytes
	this.Cpus = cpus
	this.PrebuildAvailability = prebuildAvailability
	return &this
}

// NewNullableCodespaceMachineWithDefaults instantiates a new NullableCodespaceMachine object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNullableCodespaceMachineWithDefaults() *NullableCodespaceMachine {
	this := NullableCodespaceMachine{}
	return &this
}

// GetName returns the Name field value
func (o *NullableCodespaceMachine) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *NullableCodespaceMachine) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *NullableCodespaceMachine) SetName(v string) {
	o.Name = v
}

// GetDisplayName returns the DisplayName field value
func (o *NullableCodespaceMachine) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *NullableCodespaceMachine) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *NullableCodespaceMachine) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetOperatingSystem returns the OperatingSystem field value
func (o *NullableCodespaceMachine) GetOperatingSystem() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperatingSystem
}

// GetOperatingSystemOk returns a tuple with the OperatingSystem field value
// and a boolean to check if the value has been set.
func (o *NullableCodespaceMachine) GetOperatingSystemOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatingSystem, true
}

// SetOperatingSystem sets field value
func (o *NullableCodespaceMachine) SetOperatingSystem(v string) {
	o.OperatingSystem = v
}

// GetStorageInBytes returns the StorageInBytes field value
func (o *NullableCodespaceMachine) GetStorageInBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StorageInBytes
}

// GetStorageInBytesOk returns a tuple with the StorageInBytes field value
// and a boolean to check if the value has been set.
func (o *NullableCodespaceMachine) GetStorageInBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageInBytes, true
}

// SetStorageInBytes sets field value
func (o *NullableCodespaceMachine) SetStorageInBytes(v int32) {
	o.StorageInBytes = v
}

// GetMemoryInBytes returns the MemoryInBytes field value
func (o *NullableCodespaceMachine) GetMemoryInBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MemoryInBytes
}

// GetMemoryInBytesOk returns a tuple with the MemoryInBytes field value
// and a boolean to check if the value has been set.
func (o *NullableCodespaceMachine) GetMemoryInBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemoryInBytes, true
}

// SetMemoryInBytes sets field value
func (o *NullableCodespaceMachine) SetMemoryInBytes(v int32) {
	o.MemoryInBytes = v
}

// GetCpus returns the Cpus field value
func (o *NullableCodespaceMachine) GetCpus() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Cpus
}

// GetCpusOk returns a tuple with the Cpus field value
// and a boolean to check if the value has been set.
func (o *NullableCodespaceMachine) GetCpusOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cpus, true
}

// SetCpus sets field value
func (o *NullableCodespaceMachine) SetCpus(v int32) {
	o.Cpus = v
}

// GetPrebuildAvailability returns the PrebuildAvailability field value
// If the value is explicit nil, the zero value for string will be returned
func (o *NullableCodespaceMachine) GetPrebuildAvailability() string {
	if o == nil || o.PrebuildAvailability.Get() == nil {
		var ret string
		return ret
	}

	return *o.PrebuildAvailability.Get()
}

// GetPrebuildAvailabilityOk returns a tuple with the PrebuildAvailability field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NullableCodespaceMachine) GetPrebuildAvailabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrebuildAvailability.Get(), o.PrebuildAvailability.IsSet()
}

// SetPrebuildAvailability sets field value
func (o *NullableCodespaceMachine) SetPrebuildAvailability(v string) {
	o.PrebuildAvailability.Set(&v)
}

func (o NullableCodespaceMachine) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["display_name"] = o.DisplayName
	}
	if true {
		toSerialize["operating_system"] = o.OperatingSystem
	}
	if true {
		toSerialize["storage_in_bytes"] = o.StorageInBytes
	}
	if true {
		toSerialize["memory_in_bytes"] = o.MemoryInBytes
	}
	if true {
		toSerialize["cpus"] = o.Cpus
	}
	if true {
		toSerialize["prebuild_availability"] = o.PrebuildAvailability.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableNullableCodespaceMachine struct {
	value *NullableCodespaceMachine
	isSet bool
}

func (v NullableNullableCodespaceMachine) Get() *NullableCodespaceMachine {
	return v.value
}

func (v *NullableNullableCodespaceMachine) Set(val *NullableCodespaceMachine) {
	v.value = val
	v.isSet = true
}

func (v NullableNullableCodespaceMachine) IsSet() bool {
	return v.isSet
}

func (v *NullableNullableCodespaceMachine) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNullableCodespaceMachine(val *NullableCodespaceMachine) *NullableNullableCodespaceMachine {
	return &NullableNullableCodespaceMachine{value: val, isSet: true}
}

func (v NullableNullableCodespaceMachine) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNullableCodespaceMachine) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


