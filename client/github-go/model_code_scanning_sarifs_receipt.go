/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// CodeScanningSarifsReceipt struct for CodeScanningSarifsReceipt
type CodeScanningSarifsReceipt struct {
	// An identifier for the upload.
	Id *string `json:"id,omitempty"`
	// The REST API URL for checking the status of the upload.
	Url *string `json:"url,omitempty"`
}

// NewCodeScanningSarifsReceipt instantiates a new CodeScanningSarifsReceipt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCodeScanningSarifsReceipt() *CodeScanningSarifsReceipt {
	this := CodeScanningSarifsReceipt{}
	return &this
}

// NewCodeScanningSarifsReceiptWithDefaults instantiates a new CodeScanningSarifsReceipt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCodeScanningSarifsReceiptWithDefaults() *CodeScanningSarifsReceipt {
	this := CodeScanningSarifsReceipt{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CodeScanningSarifsReceipt) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeScanningSarifsReceipt) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CodeScanningSarifsReceipt) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *CodeScanningSarifsReceipt) SetId(v string) {
	o.Id = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CodeScanningSarifsReceipt) GetUrl() string {
	if o == nil || o.Url == nil {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CodeScanningSarifsReceipt) GetUrlOk() (*string, bool) {
	if o == nil || o.Url == nil {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CodeScanningSarifsReceipt) HasUrl() bool {
	if o != nil && o.Url != nil {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CodeScanningSarifsReceipt) SetUrl(v string) {
	o.Url = &v
}

func (o CodeScanningSarifsReceipt) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Url != nil {
		toSerialize["url"] = o.Url
	}
	return json.Marshal(toSerialize)
}

type NullableCodeScanningSarifsReceipt struct {
	value *CodeScanningSarifsReceipt
	isSet bool
}

func (v NullableCodeScanningSarifsReceipt) Get() *CodeScanningSarifsReceipt {
	return v.value
}

func (v *NullableCodeScanningSarifsReceipt) Set(val *CodeScanningSarifsReceipt) {
	v.value = val
	v.isSet = true
}

func (v NullableCodeScanningSarifsReceipt) IsSet() bool {
	return v.isSet
}

func (v *NullableCodeScanningSarifsReceipt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCodeScanningSarifsReceipt(val *CodeScanningSarifsReceipt) *NullableCodeScanningSarifsReceipt {
	return &NullableCodeScanningSarifsReceipt{value: val, isSet: true}
}

func (v NullableCodeScanningSarifsReceipt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCodeScanningSarifsReceipt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


