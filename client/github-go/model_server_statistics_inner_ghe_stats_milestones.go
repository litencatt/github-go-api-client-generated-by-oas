/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ServerStatisticsInnerGheStatsMilestones struct for ServerStatisticsInnerGheStatsMilestones
type ServerStatisticsInnerGheStatsMilestones struct {
	TotalMilestones *int32 `json:"total_milestones,omitempty"`
	OpenMilestones *int32 `json:"open_milestones,omitempty"`
	ClosedMilestones *int32 `json:"closed_milestones,omitempty"`
}

// NewServerStatisticsInnerGheStatsMilestones instantiates a new ServerStatisticsInnerGheStatsMilestones object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerStatisticsInnerGheStatsMilestones() *ServerStatisticsInnerGheStatsMilestones {
	this := ServerStatisticsInnerGheStatsMilestones{}
	return &this
}

// NewServerStatisticsInnerGheStatsMilestonesWithDefaults instantiates a new ServerStatisticsInnerGheStatsMilestones object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerStatisticsInnerGheStatsMilestonesWithDefaults() *ServerStatisticsInnerGheStatsMilestones {
	this := ServerStatisticsInnerGheStatsMilestones{}
	return &this
}

// GetTotalMilestones returns the TotalMilestones field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsMilestones) GetTotalMilestones() int32 {
	if o == nil || o.TotalMilestones == nil {
		var ret int32
		return ret
	}
	return *o.TotalMilestones
}

// GetTotalMilestonesOk returns a tuple with the TotalMilestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsMilestones) GetTotalMilestonesOk() (*int32, bool) {
	if o == nil || o.TotalMilestones == nil {
		return nil, false
	}
	return o.TotalMilestones, true
}

// HasTotalMilestones returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsMilestones) HasTotalMilestones() bool {
	if o != nil && o.TotalMilestones != nil {
		return true
	}

	return false
}

// SetTotalMilestones gets a reference to the given int32 and assigns it to the TotalMilestones field.
func (o *ServerStatisticsInnerGheStatsMilestones) SetTotalMilestones(v int32) {
	o.TotalMilestones = &v
}

// GetOpenMilestones returns the OpenMilestones field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsMilestones) GetOpenMilestones() int32 {
	if o == nil || o.OpenMilestones == nil {
		var ret int32
		return ret
	}
	return *o.OpenMilestones
}

// GetOpenMilestonesOk returns a tuple with the OpenMilestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsMilestones) GetOpenMilestonesOk() (*int32, bool) {
	if o == nil || o.OpenMilestones == nil {
		return nil, false
	}
	return o.OpenMilestones, true
}

// HasOpenMilestones returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsMilestones) HasOpenMilestones() bool {
	if o != nil && o.OpenMilestones != nil {
		return true
	}

	return false
}

// SetOpenMilestones gets a reference to the given int32 and assigns it to the OpenMilestones field.
func (o *ServerStatisticsInnerGheStatsMilestones) SetOpenMilestones(v int32) {
	o.OpenMilestones = &v
}

// GetClosedMilestones returns the ClosedMilestones field value if set, zero value otherwise.
func (o *ServerStatisticsInnerGheStatsMilestones) GetClosedMilestones() int32 {
	if o == nil || o.ClosedMilestones == nil {
		var ret int32
		return ret
	}
	return *o.ClosedMilestones
}

// GetClosedMilestonesOk returns a tuple with the ClosedMilestones field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerStatisticsInnerGheStatsMilestones) GetClosedMilestonesOk() (*int32, bool) {
	if o == nil || o.ClosedMilestones == nil {
		return nil, false
	}
	return o.ClosedMilestones, true
}

// HasClosedMilestones returns a boolean if a field has been set.
func (o *ServerStatisticsInnerGheStatsMilestones) HasClosedMilestones() bool {
	if o != nil && o.ClosedMilestones != nil {
		return true
	}

	return false
}

// SetClosedMilestones gets a reference to the given int32 and assigns it to the ClosedMilestones field.
func (o *ServerStatisticsInnerGheStatsMilestones) SetClosedMilestones(v int32) {
	o.ClosedMilestones = &v
}

func (o ServerStatisticsInnerGheStatsMilestones) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalMilestones != nil {
		toSerialize["total_milestones"] = o.TotalMilestones
	}
	if o.OpenMilestones != nil {
		toSerialize["open_milestones"] = o.OpenMilestones
	}
	if o.ClosedMilestones != nil {
		toSerialize["closed_milestones"] = o.ClosedMilestones
	}
	return json.Marshal(toSerialize)
}

type NullableServerStatisticsInnerGheStatsMilestones struct {
	value *ServerStatisticsInnerGheStatsMilestones
	isSet bool
}

func (v NullableServerStatisticsInnerGheStatsMilestones) Get() *ServerStatisticsInnerGheStatsMilestones {
	return v.value
}

func (v *NullableServerStatisticsInnerGheStatsMilestones) Set(val *ServerStatisticsInnerGheStatsMilestones) {
	v.value = val
	v.isSet = true
}

func (v NullableServerStatisticsInnerGheStatsMilestones) IsSet() bool {
	return v.isSet
}

func (v *NullableServerStatisticsInnerGheStatsMilestones) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerStatisticsInnerGheStatsMilestones(val *ServerStatisticsInnerGheStatsMilestones) *NullableServerStatisticsInnerGheStatsMilestones {
	return &NullableServerStatisticsInnerGheStatsMilestones{value: val, isSet: true}
}

func (v NullableServerStatisticsInnerGheStatsMilestones) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerStatisticsInnerGheStatsMilestones) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


