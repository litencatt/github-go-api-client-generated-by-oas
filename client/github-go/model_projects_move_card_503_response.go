/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ProjectsMoveCard503Response struct for ProjectsMoveCard503Response
type ProjectsMoveCard503Response struct {
	Code *string `json:"code,omitempty"`
	Message *string `json:"message,omitempty"`
	DocumentationUrl *string `json:"documentation_url,omitempty"`
	Errors []ProjectsMoveCard503ResponseErrorsInner `json:"errors,omitempty"`
}

// NewProjectsMoveCard503Response instantiates a new ProjectsMoveCard503Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectsMoveCard503Response() *ProjectsMoveCard503Response {
	this := ProjectsMoveCard503Response{}
	return &this
}

// NewProjectsMoveCard503ResponseWithDefaults instantiates a new ProjectsMoveCard503Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectsMoveCard503ResponseWithDefaults() *ProjectsMoveCard503Response {
	this := ProjectsMoveCard503Response{}
	return &this
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *ProjectsMoveCard503Response) GetCode() string {
	if o == nil || o.Code == nil {
		var ret string
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsMoveCard503Response) GetCodeOk() (*string, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *ProjectsMoveCard503Response) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given string and assigns it to the Code field.
func (o *ProjectsMoveCard503Response) SetCode(v string) {
	o.Code = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ProjectsMoveCard503Response) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsMoveCard503Response) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ProjectsMoveCard503Response) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ProjectsMoveCard503Response) SetMessage(v string) {
	o.Message = &v
}

// GetDocumentationUrl returns the DocumentationUrl field value if set, zero value otherwise.
func (o *ProjectsMoveCard503Response) GetDocumentationUrl() string {
	if o == nil || o.DocumentationUrl == nil {
		var ret string
		return ret
	}
	return *o.DocumentationUrl
}

// GetDocumentationUrlOk returns a tuple with the DocumentationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsMoveCard503Response) GetDocumentationUrlOk() (*string, bool) {
	if o == nil || o.DocumentationUrl == nil {
		return nil, false
	}
	return o.DocumentationUrl, true
}

// HasDocumentationUrl returns a boolean if a field has been set.
func (o *ProjectsMoveCard503Response) HasDocumentationUrl() bool {
	if o != nil && o.DocumentationUrl != nil {
		return true
	}

	return false
}

// SetDocumentationUrl gets a reference to the given string and assigns it to the DocumentationUrl field.
func (o *ProjectsMoveCard503Response) SetDocumentationUrl(v string) {
	o.DocumentationUrl = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *ProjectsMoveCard503Response) GetErrors() []ProjectsMoveCard503ResponseErrorsInner {
	if o == nil || o.Errors == nil {
		var ret []ProjectsMoveCard503ResponseErrorsInner
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProjectsMoveCard503Response) GetErrorsOk() ([]ProjectsMoveCard503ResponseErrorsInner, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *ProjectsMoveCard503Response) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []ProjectsMoveCard503ResponseErrorsInner and assigns it to the Errors field.
func (o *ProjectsMoveCard503Response) SetErrors(v []ProjectsMoveCard503ResponseErrorsInner) {
	o.Errors = v
}

func (o ProjectsMoveCard503Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.DocumentationUrl != nil {
		toSerialize["documentation_url"] = o.DocumentationUrl
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	return json.Marshal(toSerialize)
}

type NullableProjectsMoveCard503Response struct {
	value *ProjectsMoveCard503Response
	isSet bool
}

func (v NullableProjectsMoveCard503Response) Get() *ProjectsMoveCard503Response {
	return v.value
}

func (v *NullableProjectsMoveCard503Response) Set(val *ProjectsMoveCard503Response) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectsMoveCard503Response) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectsMoveCard503Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectsMoveCard503Response(val *ProjectsMoveCard503Response) *NullableProjectsMoveCard503Response {
	return &NullableProjectsMoveCard503Response{value: val, isSet: true}
}

func (v NullableProjectsMoveCard503Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectsMoveCard503Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


