/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
	"fmt"
)

// ActivityListStargazersForRepo200Response struct for ActivityListStargazersForRepo200Response
type ActivityListStargazersForRepo200Response struct {
	[]SimpleUser *[]SimpleUser
	[]Stargazer *[]Stargazer
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ActivityListStargazersForRepo200Response) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into []SimpleUser
	err = json.Unmarshal(data, &dst.[]SimpleUser);
	if err == nil {
		json[]SimpleUser, _ := json.Marshal(dst.[]SimpleUser)
		if string(json[]SimpleUser) == "{}" { // empty struct
			dst.[]SimpleUser = nil
		} else {
			return nil // data stored in dst.[]SimpleUser, return on the first match
		}
	} else {
		dst.[]SimpleUser = nil
	}

	// try to unmarshal JSON data into []Stargazer
	err = json.Unmarshal(data, &dst.[]Stargazer);
	if err == nil {
		json[]Stargazer, _ := json.Marshal(dst.[]Stargazer)
		if string(json[]Stargazer) == "{}" { // empty struct
			dst.[]Stargazer = nil
		} else {
			return nil // data stored in dst.[]Stargazer, return on the first match
		}
	} else {
		dst.[]Stargazer = nil
	}

	return fmt.Errorf("Data failed to match schemas in anyOf(ActivityListStargazersForRepo200Response)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *ActivityListStargazersForRepo200Response) MarshalJSON() ([]byte, error) {
	if src.[]SimpleUser != nil {
		return json.Marshal(&src.[]SimpleUser)
	}

	if src.[]Stargazer != nil {
		return json.Marshal(&src.[]Stargazer)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableActivityListStargazersForRepo200Response struct {
	value *ActivityListStargazersForRepo200Response
	isSet bool
}

func (v NullableActivityListStargazersForRepo200Response) Get() *ActivityListStargazersForRepo200Response {
	return v.value
}

func (v *NullableActivityListStargazersForRepo200Response) Set(val *ActivityListStargazersForRepo200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableActivityListStargazersForRepo200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableActivityListStargazersForRepo200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActivityListStargazersForRepo200Response(val *ActivityListStargazersForRepo200Response) *NullableActivityListStargazersForRepo200Response {
	return &NullableActivityListStargazersForRepo200Response{value: val, isSet: true}
}

func (v NullableActivityListStargazersForRepo200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActivityListStargazersForRepo200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


