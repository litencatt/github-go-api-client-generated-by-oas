/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ProjectCollaboratorPermission Project Collaborator Permission
type ProjectCollaboratorPermission struct {
	Permission string `json:"permission"`
	User NullableNullableSimpleUser `json:"user"`
}

// NewProjectCollaboratorPermission instantiates a new ProjectCollaboratorPermission object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProjectCollaboratorPermission(permission string, user NullableNullableSimpleUser) *ProjectCollaboratorPermission {
	this := ProjectCollaboratorPermission{}
	this.Permission = permission
	this.User = user
	return &this
}

// NewProjectCollaboratorPermissionWithDefaults instantiates a new ProjectCollaboratorPermission object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProjectCollaboratorPermissionWithDefaults() *ProjectCollaboratorPermission {
	this := ProjectCollaboratorPermission{}
	return &this
}

// GetPermission returns the Permission field value
func (o *ProjectCollaboratorPermission) GetPermission() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Permission
}

// GetPermissionOk returns a tuple with the Permission field value
// and a boolean to check if the value has been set.
func (o *ProjectCollaboratorPermission) GetPermissionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Permission, true
}

// SetPermission sets field value
func (o *ProjectCollaboratorPermission) SetPermission(v string) {
	o.Permission = v
}

// GetUser returns the User field value
// If the value is explicit nil, the zero value for NullableSimpleUser will be returned
func (o *ProjectCollaboratorPermission) GetUser() NullableSimpleUser {
	if o == nil || o.User.Get() == nil {
		var ret NullableSimpleUser
		return ret
	}

	return *o.User.Get()
}

// GetUserOk returns a tuple with the User field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProjectCollaboratorPermission) GetUserOk() (*NullableSimpleUser, bool) {
	if o == nil {
		return nil, false
	}
	return o.User.Get(), o.User.IsSet()
}

// SetUser sets field value
func (o *ProjectCollaboratorPermission) SetUser(v NullableSimpleUser) {
	o.User.Set(&v)
}

func (o ProjectCollaboratorPermission) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["permission"] = o.Permission
	}
	if true {
		toSerialize["user"] = o.User.Get()
	}
	return json.Marshal(toSerialize)
}

type NullableProjectCollaboratorPermission struct {
	value *ProjectCollaboratorPermission
	isSet bool
}

func (v NullableProjectCollaboratorPermission) Get() *ProjectCollaboratorPermission {
	return v.value
}

func (v *NullableProjectCollaboratorPermission) Set(val *ProjectCollaboratorPermission) {
	v.value = val
	v.isSet = true
}

func (v NullableProjectCollaboratorPermission) IsSet() bool {
	return v.isSet
}

func (v *NullableProjectCollaboratorPermission) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProjectCollaboratorPermission(val *ProjectCollaboratorPermission) *NullableProjectCollaboratorPermission {
	return &NullableProjectCollaboratorPermission{value: val, isSet: true}
}

func (v NullableProjectCollaboratorPermission) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProjectCollaboratorPermission) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


