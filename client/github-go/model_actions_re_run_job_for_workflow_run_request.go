/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// ActionsReRunJobForWorkflowRunRequest struct for ActionsReRunJobForWorkflowRunRequest
type ActionsReRunJobForWorkflowRunRequest struct {
	// Whether to enable debug logging for the re-run.
	EnableDebugLogging *bool `json:"enable_debug_logging,omitempty"`
}

// NewActionsReRunJobForWorkflowRunRequest instantiates a new ActionsReRunJobForWorkflowRunRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewActionsReRunJobForWorkflowRunRequest() *ActionsReRunJobForWorkflowRunRequest {
	this := ActionsReRunJobForWorkflowRunRequest{}
	var enableDebugLogging bool = false
	this.EnableDebugLogging = &enableDebugLogging
	return &this
}

// NewActionsReRunJobForWorkflowRunRequestWithDefaults instantiates a new ActionsReRunJobForWorkflowRunRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewActionsReRunJobForWorkflowRunRequestWithDefaults() *ActionsReRunJobForWorkflowRunRequest {
	this := ActionsReRunJobForWorkflowRunRequest{}
	var enableDebugLogging bool = false
	this.EnableDebugLogging = &enableDebugLogging
	return &this
}

// GetEnableDebugLogging returns the EnableDebugLogging field value if set, zero value otherwise.
func (o *ActionsReRunJobForWorkflowRunRequest) GetEnableDebugLogging() bool {
	if o == nil || o.EnableDebugLogging == nil {
		var ret bool
		return ret
	}
	return *o.EnableDebugLogging
}

// GetEnableDebugLoggingOk returns a tuple with the EnableDebugLogging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ActionsReRunJobForWorkflowRunRequest) GetEnableDebugLoggingOk() (*bool, bool) {
	if o == nil || o.EnableDebugLogging == nil {
		return nil, false
	}
	return o.EnableDebugLogging, true
}

// HasEnableDebugLogging returns a boolean if a field has been set.
func (o *ActionsReRunJobForWorkflowRunRequest) HasEnableDebugLogging() bool {
	if o != nil && o.EnableDebugLogging != nil {
		return true
	}

	return false
}

// SetEnableDebugLogging gets a reference to the given bool and assigns it to the EnableDebugLogging field.
func (o *ActionsReRunJobForWorkflowRunRequest) SetEnableDebugLogging(v bool) {
	o.EnableDebugLogging = &v
}

func (o ActionsReRunJobForWorkflowRunRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EnableDebugLogging != nil {
		toSerialize["enable_debug_logging"] = o.EnableDebugLogging
	}
	return json.Marshal(toSerialize)
}

type NullableActionsReRunJobForWorkflowRunRequest struct {
	value *ActionsReRunJobForWorkflowRunRequest
	isSet bool
}

func (v NullableActionsReRunJobForWorkflowRunRequest) Get() *ActionsReRunJobForWorkflowRunRequest {
	return v.value
}

func (v *NullableActionsReRunJobForWorkflowRunRequest) Set(val *ActionsReRunJobForWorkflowRunRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableActionsReRunJobForWorkflowRunRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableActionsReRunJobForWorkflowRunRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableActionsReRunJobForWorkflowRunRequest(val *ActionsReRunJobForWorkflowRunRequest) *NullableActionsReRunJobForWorkflowRunRequest {
	return &NullableActionsReRunJobForWorkflowRunRequest{value: val, isSet: true}
}

func (v NullableActionsReRunJobForWorkflowRunRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableActionsReRunJobForWorkflowRunRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


