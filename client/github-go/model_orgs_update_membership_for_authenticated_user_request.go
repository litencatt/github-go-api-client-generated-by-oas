/*
GitHub v3 REST API

GitHub's v3 REST API.

API version: 1.1.4
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package github

import (
	"encoding/json"
)

// OrgsUpdateMembershipForAuthenticatedUserRequest struct for OrgsUpdateMembershipForAuthenticatedUserRequest
type OrgsUpdateMembershipForAuthenticatedUserRequest struct {
	// The state that the membership should be in. Only `\"active\"` will be accepted.
	State string `json:"state"`
}

// NewOrgsUpdateMembershipForAuthenticatedUserRequest instantiates a new OrgsUpdateMembershipForAuthenticatedUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrgsUpdateMembershipForAuthenticatedUserRequest(state string) *OrgsUpdateMembershipForAuthenticatedUserRequest {
	this := OrgsUpdateMembershipForAuthenticatedUserRequest{}
	this.State = state
	return &this
}

// NewOrgsUpdateMembershipForAuthenticatedUserRequestWithDefaults instantiates a new OrgsUpdateMembershipForAuthenticatedUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrgsUpdateMembershipForAuthenticatedUserRequestWithDefaults() *OrgsUpdateMembershipForAuthenticatedUserRequest {
	this := OrgsUpdateMembershipForAuthenticatedUserRequest{}
	return &this
}

// GetState returns the State field value
func (o *OrgsUpdateMembershipForAuthenticatedUserRequest) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *OrgsUpdateMembershipForAuthenticatedUserRequest) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *OrgsUpdateMembershipForAuthenticatedUserRequest) SetState(v string) {
	o.State = v
}

func (o OrgsUpdateMembershipForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["state"] = o.State
	}
	return json.Marshal(toSerialize)
}

type NullableOrgsUpdateMembershipForAuthenticatedUserRequest struct {
	value *OrgsUpdateMembershipForAuthenticatedUserRequest
	isSet bool
}

func (v NullableOrgsUpdateMembershipForAuthenticatedUserRequest) Get() *OrgsUpdateMembershipForAuthenticatedUserRequest {
	return v.value
}

func (v *NullableOrgsUpdateMembershipForAuthenticatedUserRequest) Set(val *OrgsUpdateMembershipForAuthenticatedUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableOrgsUpdateMembershipForAuthenticatedUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableOrgsUpdateMembershipForAuthenticatedUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrgsUpdateMembershipForAuthenticatedUserRequest(val *OrgsUpdateMembershipForAuthenticatedUserRequest) *NullableOrgsUpdateMembershipForAuthenticatedUserRequest {
	return &NullableOrgsUpdateMembershipForAuthenticatedUserRequest{value: val, isSet: true}
}

func (v NullableOrgsUpdateMembershipForAuthenticatedUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrgsUpdateMembershipForAuthenticatedUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


